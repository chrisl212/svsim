Terminals unused in grammar

    LIBRARY
    INCLUDE
    NEXTTIME
    ENDINTERFACE
    PROGRAM
    ENDPROGRAM
    CHECKER
    ENDCHECKER
    FATAL
    ERROR
    WARNING
    INFO
    LIBLIST
    USE
    EXPORT
    CONFIG
    ENDCONFIG
    DESIGN
    INSTANCE
    CELL
    FORKJOIN
    JOIN_ALL
    CONSTRAINT
    SOLVE
    BEFORE
    SOFT
    VECTORED
    SCALARED
    NETTYPE
    WITH
    PACKED
    HIGHZ1
    HIGHZ0
    STRONG0
    PULL0
    WEAK0
    STRONG1
    PULL1
    WEAK1
    SMALL
    MEDIUM
    LARGE
    DPIC
    DPI
    CONTEXT
    ASSERT
    PROPERTY
    ASSUME
    COVER
    COVERGROUP
    EXPECT
    SEQUENCE
    RESTRICT
    ENDPROPERTY
    NOT
    OPTION
    PMOS
    TABLE
    UNTIL
    ROOT
    WIDTH
    TRANIF0
    BUFIF0
    ENDSEQUENCE
    REJECT_ON
    FULLSKEW
    S_EVENTUALLY
    NAND
    DIST
    SETUPHOLD
    RECOVERY
    XOR
    DEFAULT_SEQUENCE
    TRANIF1
    SAMPLE
    NOTIF0
    UNTIL_WITH
    WITHIN
    THROUGHOUT
    XNOR
    RPMOS
    FIRST_MATCH
    SYNC_REJECT_ON
    RTRANIF0
    BUF
    MODPORT
    NOCHANGE
    WEAK
    BINS
    TRAN
    PRIMITIVE
    STRONG
    S_UNTIL
    PERIOD
    NOTIF1
    SETUP
    RTRAN
    RNMOS
    INTERSECT
    PULLDOWN
    MATCHES
    REMOVAL
    TIMESKEW
    RANDCASE
    SKEW
    NMOS
    UNTYPED
    IMPLIES
    S_NEXTTIME
    INCDIR
    ENDPRIMITIVE
    IFNONE
    BINSOF
    CMOS
    SYNC_ACCEPT_ON
    NOR
    S_UNTIL_WITH
    ENDCLOCKING
    HOLD
    PULLUP
    TYPE_OPTION
    ENDTABLE
    IGNORE_BINS
    BUFIF1
    GLOBAL
    ILLEGAL_BINS
    RANDSEQUENCE
    LET
    EVENTUALLY
    ACCEPT_ON
    RECREM
    S_ALWAYS
    ENDGROUP
    RTRANIF1
    COVERPOINT
    CROSS
    WILDCARD
    RCMOS
    c_identifier
    system_tf_identifier
    block_identifier
    class_identifier
    package_identifier
    type_identifier
    binary_number
    octal_number
    hex_number
    decimal_number
    TOK_IMP_OVLP
    TOK_IMP_NON_OVLP
    AND
    TOK_3AMP


State 409 conflicts: 1 reduce/reduce


Grammar

    0 $accept: source_text $end

    1 source_text: description_list

    2 description_list: description_list description
    3                 | ε

    4 description: package_declaration
    5            | module_declaration

    6 module_declaration: module_nonansi_header module_item_list ENDMODULE block_end_identifier_optional
    7                   | module_ansi_header non_port_module_item_list ENDMODULE block_end_identifier_optional
    8                   | EXTERN module_nonansi_header
    9                   | EXTERN module_ansi_header

   10 module_nonansi_header: attribute_instance_list module_keyword lifetime_optional identifier package_import_declaration_list parameter_port_list_optional list_of_ports ';'

   11 module_ansi_header: attribute_instance_list module_keyword lifetime_optional identifier package_import_declaration_list parameter_port_list_optional port_declaration_list ';'

   12 port_declaration_list: '(' ansi_port_declaration_list ')'
   13                      | '(' ')'
   14                      | ε

   15 ansi_port_declaration_list: ansi_port_declaration_list ',' ansi_port_declaration
   16                           | ansi_port_declaration

   17 ansi_port_declaration: net_port_header identifier unpacked_dimension_list_optional '=' expression
   18                      | net_port_header identifier unpacked_dimension_list_optional
   19                      | variable_port_header identifier variable_dimension_list_optional '=' expression
   20                      | variable_port_header identifier variable_dimension_list_optional
   21                      | port_direction '.' identifier '(' expression_optional ')'
   22                      | '.' identifier '(' expression_optional ')'

   23 net_port_header: port_direction net_port_type
   24                | net_port_type

   25 variable_port_header: port_direction variable_port_type
   26                     | variable_port_type

   27 port_direction: INPUT
   28               | OUTPUT
   29               | INOUT
   30               | REF

   31 package_import_declaration_list: package_import_declaration_list package_import_declaration
   32                                | ε

   33 parameter_port_list_optional: parameter_port_list
   34                             | ε

   35 parameter_port_list: '#' '(' param_assignment_list ')'
   36                    | '#' '(' parameter_port_declaration ')'
   37                    | '#' '(' ')'

   38 parameter_port_declaration: parameter_declaration
   39                           | local_parameter_declaration
   40                           | data_type param_assignment_list
   41                           | TYPE type_assignment_list

   42 module_keyword: MODULE
   43               | MACROMODULE

   44 module_item_list: module_item_list module_item
   45                 | ε

   46 non_port_module_item_list: non_port_module_item_list non_port_module_item
   47                          | ε

   48 module_item: port_declaration ';'
   49            | non_port_module_item

   50 non_port_module_item: generate_region
   51                     | module_or_generate_item
   52                     | specify_block
   53                     | attribute_instance_list specparam_declaration
   54                     | module_declaration
   55                     | timeunits_declaration

   56 specify_block: SPECIFY specify_item_list ENDSPECIFY

   57 specify_item_list: specify_item_list specify_item
   58                  | ε

   59 specify_item: specparam_declaration
   60             | pulsestyle_declaration
   61             | showcancelled_declaration

   62 specparam_declaration: SPECPARAM packed_dimension_list_optional specparam_assignment_list ';'

   63 specparam_assignment_list: specparam_assignment_list ',' specparam_assignment
   64                          | specparam_assignment

   65 specparam_assignment: identifier '=' constant_mintypmax_expression
   66                     | pulse_control_specparam

   67 pulse_control_specparam: PATHPULSE '$' '=' '(' constant_mintypmax_expression ',' constant_mintypmax_expression ')'
   68                        | PATHPULSE '$' '=' '(' constant_mintypmax_expression ')'
   69                        | PATHPULSE '$' hierarchical_identifier '$' hierarchical_identifier '=' '(' constant_mintypmax_expression ',' constant_mintypmax_expression ')'
   70                        | PATHPULSE '$' hierarchical_identifier '$' hierarchical_identifier '=' '(' constant_mintypmax_expression ')'

   71 pulsestyle_declaration: PULSESTYLE_ONEVENT path_output_list ';'
   72                       | PULSESTYLE_ONDETECT path_output_list ';'

   73 showcancelled_declaration: SHOWCANCELLED path_output_list ';'
   74                          | NOSHOWCANCELLED path_output_list ';'

   75 path_output_list: path_output_list ',' specify_terminal_descriptor
   76                 | specify_terminal_descriptor

   77 specify_terminal_descriptor: hierarchical_identifier

   78 generate_region: GENERATE generate_item_list ENDGENERATE

   79 generate_item_list: generate_item_list generate_item
   80                   | ε

   81 generate_item: module_or_generate_item

   82 module_or_generate_item: parameter_override
   83                        | module_common_item

   84 module_common_item: module_or_generate_item_declaration
   85                   | generic_instantiation
   86                   | bind_directive
   87                   | continuous_assign
   88                   | net_alias
   89                   | _INITIAL statement
   90                   | FINAL statement
   91                   | always_keyword statement
   92                   | loop_generate_construct
   93                   | if_generate_construct
   94                   | case_generate_construct

   95 if_generate_construct: IF '(' expression ')' generate_block ELSE generate_block
   96                      | IF '(' expression ')' generate_block

   97 case_generate_construct: CASE '(' expression ')' case_generate_item_list ENDCASE

   98 case_generate_item_list: case_generate_item_list case_generate_item
   99                        | case_generate_item

  100 case_generate_item: expression_list ':' generate_block
  101                   | DEFAULT ':' generate_block
  102                   | DEFAULT generate_block

  103 loop_generate_construct: FOR '(' genvar_initialization ';' expression ';' genvar_iteration ')' generate_block

  104 generate_block: generate_item
  105               | identifier ':' _BEGIN ':' identifier generate_item_list END block_end_identifier_optional
  106               | identifier ':' _BEGIN generate_item_list END block_end_identifier_optional
  107               | _BEGIN ':' identifier generate_item_list END block_end_identifier_optional
  108               | _BEGIN generate_item_list END block_end_identifier_optional

  109 genvar_initialization: GENVAR identifier '=' expression
  110                      | identifier '=' expression

  111 genvar_iteration: identifier assignment_operator expression
  112                 | TOK_INC identifier
  113                 | TOK_DEC identifier
  114                 | identifier TOK_INC
  115                 | identifier TOK_DEC

  116 assignment_operator: '='
  117                    | TOK_SL_EQ
  118                    | TOK_SR_EQ
  119                    | TOK_SLA_EQ
  120                    | TOK_SRA_EQ
  121                    | TOK_PLUS_EQ
  122                    | TOK_MINUS_EQ
  123                    | TOK_MUL_EQ
  124                    | TOK_DIV_EQ
  125                    | TOK_MOD_EQ
  126                    | TOK_AND_EQ
  127                    | TOK_OR_EQ
  128                    | TOK_XOR_EQ

  129 net_alias: ALIAS lvalue '=' lvalue lvalue_list ';'

  130 lvalue_list: lvalue_list '=' lvalue
  131            | '=' lvalue

  132 continuous_assign: ASSIGN variable_assignment_list ';'

  133 bind_directive: BIND hierarchical_identifier generic_instantiation ';'

  134 generic_instantiation: data_type hierarchical_instance_list ';'

  135 hierarchical_instance_list: hierarchical_instance_list ',' hierarchical_instance
  136                           | hierarchical_instance

  137 hierarchical_instance: name_of_instance '(' ordered_port_connection_list ')'
  138                      | name_of_instance '(' named_port_connection_list ')'
  139                      | name_of_instance '(' ')'

  140 name_of_instance: identifier unpacked_dimension_list_optional

  141 ordered_port_connection_list: ordered_port_connection_list ',' ordered_port_connection
  142                             | ordered_port_connection

  143 ordered_port_connection: attribute_instance_list expression

  144 named_port_connection_list: named_port_connection_list ',' named_port_connection
  145                           | named_port_connection

  146 named_port_connection: attribute_instance_list '.' identifier '(' expression_optional ')'
  147                      | attribute_instance_list '.' identifier
  148                      | attribute_instance_list '.' TOK_MUL

  149 parameter_value_assignment: '#' '(' ordered_parameter_assignment_list ')'
  150                           | '#' '(' named_parameter_assignment_list ')'
  151                           | '#' '(' ')'

  152 ordered_parameter_assignment_list: ordered_parameter_assignment_list ',' ordered_parameter_assignment
  153                                  | ordered_parameter_assignment

  154 named_parameter_assignment_list: named_parameter_assignment_list ',' named_parameter_assignment
  155                                | named_parameter_assignment

  156 ordered_parameter_assignment: param_expression

  157 named_parameter_assignment: '.' identifier '(' param_expression ')'
  158                           | '.' identifier '(' ')'

  159 param_expression: mintypmax_expression
  160                 | data_type_no_identifier

  161 always_keyword: ALWAYS
  162               | ALWAYS_COMB
  163               | ALWAYS_LATCH
  164               | ALWAYS_FF

  165 module_or_generate_item_declaration: package_or_generate_item_declaration
  166                                    | DEFAULT CLOCKING identifier ';'

  167 parameter_override: DEFPARAM defparam_assignment_list ';'

  168 defparam_assignment_list: defparam_assignment_list ',' defparam_assignment
  169                         | defparam_assignment

  170 defparam_assignment: hierarchical_identifier '=' constant_mintypmax_expression

  171 port_declaration: attribute_instance_list inout_declaration
  172                 | attribute_instance_list input_declaration
  173                 | attribute_instance_list output_declaration
  174                 | attribute_instance_list ref_declaration

  175 inout_declaration: INOUT net_port_type port_identifier_list

  176 input_declaration: INPUT net_port_type port_identifier_list
  177                  | INPUT variable_port_type variable_identifier_list

  178 output_declaration: OUTPUT net_port_type port_identifier_list
  179                   | OUTPUT variable_port_type variable_identifier_list

  180 ref_declaration: REF variable_port_type variable_identifier_list

  181 port_identifier_list: port_identifier_list ',' identifier unpacked_dimension_list_optional
  182                     | identifier unpacked_dimension_list_optional

  183 unpacked_dimension_list_optional: unpacked_dimension_list
  184                                 | ε

  185 unpacked_dimension_list: unpacked_dimension_list unpacked_dimension
  186                        | unpacked_dimension

  187 variable_identifier_list: variable_identifier_list ',' identifier variable_dimension_list_optional
  188                         | identifier variable_dimension_list_optional

  189 variable_dimension_list_optional: variable_dimension_list
  190                                 | ε

  191 variable_dimension_list: variable_dimension_list variable_dimension
  192                        | variable_dimension

  193 variable_dimension: unsized_dimension
  194                   | unpacked_dimension
  195                   | associative_dimension

  196 associative_dimension: '[' data_type_no_identifier ']'
  197                      | '[' TOK_MUL ']'

  198 unpacked_dimension: '[' part_select_range ']'

  199 unsized_dimension: '[' ']'

  200 net_port_type: net_type
  201              | INTERCONNECT signing_optional packed_dimension_list_optional

  202 net_type: SUPPLY0
  203         | SUPPLY1
  204         | TRI
  205         | TRIAND
  206         | TRIOR
  207         | TRIREG
  208         | TRI0
  209         | TRI1
  210         | UWIRE
  211         | WIRE
  212         | WAND
  213         | WOR

  214 variable_port_type: data_type
  215                   | VAR

  216 list_of_ports: '(' port_list ')'

  217 port_list: port_list ',' identifier
  218          | identifier

  219 data_type: data_type_no_identifier
  220          | hierarchical_identifier
  221          | ps_identifier packed_dimension_list_optional
  222          | identifier parameter_value_assignment

  223 data_type_no_identifier: integer_vector_type signing_optional packed_dimension_list_optional
  224                        | integer_atom_type signing_optional
  225                        | non_integer_type
  226                        | STRING
  227                        | CHANDLE
  228                        | virtual_interface_type identifier parameter_value_assignment_optional '.' identifier
  229                        | virtual_interface_type identifier parameter_value_assignment_optional
  230                        | EVENT

  231 parameter_value_assignment_optional: parameter_value_assignment
  232                                    | ε

  233 virtual_interface_type: VIRTUAL_INTERFACE
  234                       | VIRTUAL

  235 signing_optional: signing
  236                 | ε

  237 packed_dimension_list_optional: packed_dimension_list
  238                               | ε

  239 signing: SIGNED
  240        | UNSIGNED

  241 packed_dimension_list: packed_dimension_list packed_dimension
  242                      | packed_dimension

  243 packed_dimension: '[' ']'
  244                 | '[' part_select_range ']'

  245 constant_primary: primary_literal

  246 integer_vector_type: BIT
  247                    | LOGIC
  248                    | REG

  249 package_declaration: attribute_instance_list PACKAGE lifetime_optional identifier ';' timeunits_declaration_optional package_item_list_optional ENDPACKAGE block_end_identifier_optional

  250 package_item_list_optional: package_item_list_optional package_item
  251                           | ε

  252 package_item: package_or_generate_item_declaration

  253 package_or_generate_item_declaration: data_declaration
  254                                     | task_declaration
  255                                     | function_declaration
  256                                     | class_declaration
  257                                     | local_parameter_declaration ';'
  258                                     | parameter_declaration ';'
  259                                     | ';'

  260 class_declaration: virtual_optional CLASS lifetime_optional identifier parameter_port_list_optional extends_class_optional implements_interface_optional ';' class_item_list ENDCLASS block_end_identifier_optional

  261 virtual_optional: VIRTUAL
  262                 | ε

  263 extends_class_optional: EXTENDS hierarchical_identifier parameter_value_assignment_optional '(' argument_list ')'
  264                       | EXTENDS hierarchical_identifier parameter_value_assignment_optional
  265                       | ε

  266 implements_interface_optional: IMPLEMENTS interface_class_type_list
  267                              | ε

  268 interface_class_type_list: interface_class_type_list ',' interface_class_type
  269                          | interface_class_type

  270 interface_class_type: hierarchical_identifier parameter_value_assignment_optional

  271 class_item_list: class_item_list class_item
  272                | ε

  273 class_item: class_property
  274           | class_method
  275           | class_declaration
  276           | local_parameter_declaration ';'
  277           | parameter_declaration ';'
  278           | ';'

  279 class_property: data_declaration

  280 class_method: class_method_qualifier_list task_declaration
  281             | class_method_qualifier_list function_declaration
  282             | task_declaration
  283             | function_declaration
  284             | PURE_VIRTUAL class_method_qualifier_list method_prototype ';'
  285             | PURE_VIRTUAL method_prototype ';'
  286             | EXTERN class_method_qualifier_list method_prototype ';'
  287             | EXTERN method_prototype ';'

  288 method_prototype: task_prototype
  289                 | function_prototype

  290 class_method_qualifier_list: method_variable_qualifier_list
  291                            | method_qualifier_list

  292 method_qualifier_list: method_qualifier_list method_qualifier
  293                      | method_qualifier

  294 function_prototype: FUNCTION function_type_name '(' tf_port_list_optional ')'
  295                   | FUNCTION function_type_name

  296 task_prototype: TASK ps_or_hierarchical_identifier '(' tf_port_list_optional ')'
  297               | TASK ps_or_hierarchical_identifier

  298 function_declaration: FUNCTION lifetime_optional function_body_declaration

  299 function_body_declaration: function_type_name ';' tf_item_declaration_list statement_list_optional ENDFUNCTION function_block_end_identifier_optional
  300                          | function_type_name '(' tf_port_list_optional ')' ';' block_item_declaration_list statement_list_optional ENDFUNCTION function_block_end_identifier_optional
  301                          | function_type_name '(' tf_port_list_optional ')' ';' statement_list_optional ENDFUNCTION function_block_end_identifier_optional

  302 function_block_end_identifier_optional: block_end_identifier_optional
  303                                       | ':' NEW

  304 function_type_name: function_data_type ps_or_hierarchical_identifier
  305                   | function_data_type SCOPE NEW
  306                   | ps_identifier_tok NEW
  307                   | NEW
  308                   | function_data_type

  309 task_declaration: TASK lifetime_optional task_body_declaration

  310 task_body_declaration: ps_or_hierarchical_identifier ';' tf_item_declaration_list statement_list_optional ENDTASK block_end_identifier_optional
  311                      | ps_or_hierarchical_identifier '(' tf_port_list_optional ')' ';' block_item_declaration_list statement_list_optional ENDTASK block_end_identifier_optional
  312                      | ps_or_hierarchical_identifier '(' tf_port_list_optional ')' ';' statement_list_optional ENDTASK block_end_identifier_optional

  313 tf_port_list_optional: tf_port_list
  314                      | ε

  315 tf_port_list: tf_port_list ',' tf_port_item
  316             | tf_port_item

  317 tf_port_item: attribute_instance_list tf_port_direction VAR data_type identifier variable_dimension_list_optional equals_expression_optional
  318             | attribute_instance_list tf_port_direction VAR data_type equals_expression_optional
  319             | attribute_instance_list tf_port_direction data_type identifier variable_dimension_list_optional equals_expression_optional
  320             | attribute_instance_list tf_port_direction data_type equals_expression_optional

  321 equals_expression_optional: '=' expression
  322                           | ε

  323 tf_port_direction: port_direction
  324                  | CONST REF
  325                  | ε

  326 statement_list_optional: statement_list
  327                        | ε

  328 function_data_type: data_type
  329                   | VOID

  330 statement: attribute_instance_list statement_item
  331          | attribute_instance_list ';'

  332 statement_item: blocking_assignment ';'
  333               | nonblocking_assignment ';'
  334               | procedural_continuous_assignment ';'
  335               | case_statement
  336               | conditional_statement
  337               | inc_or_dec_expression ';'
  338               | subroutine_call_statement
  339               | disable_statement
  340               | event_trigger
  341               | loop_statement
  342               | jump_statement
  343               | par_block
  344               | procedural_timing_control_statement
  345               | seq_block
  346               | wait_statement
  347               | SUPER_NEW '(' argument_list ')' ';'
  348               | SUPER_NEW ';'

  349 procedural_timing_control_statement: procedural_timing_control statement

  350 delay_or_event_control: delay_control
  351                       | event_control
  352                       | REPEAT '(' expression ')' event_control

  353 delay_control: '#' delay_value
  354              | '#' '(' mintypmax_expression ')'

  355 delay_value: unsigned_number
  356            | ps_identifier
  357            | time_literal
  358            | _1STEP

  359 event_control: '@' hierarchical_identifier
  360              | '@' '(' event_expression ')'
  361              | '@' TOK_MUL
  362              | '@' '(' TOK_MUL ')'

  363 event_expression: edge_identifier expression IFF expression
  364                 | edge_identifier expression
  365                 | expression IFF expression
  366                 | event_expression OR event_expression
  367                 | event_expression ',' event_expression
  368                 | '(' event_expression ')'

  369 edge_identifier: POSEDGE
  370                | NEGEDGE
  371                | EDGE

  372 procedural_timing_control: delay_control
  373                          | event_control
  374                          | cycle_delay

  375 cycle_delay: TOK_DLY unsigned_number
  376            | TOK_DLY identifier
  377            | TOK_DLY '(' expression ')'

  378 loop_statement: FOREVER statement
  379               | REPEAT '(' expression ')' statement
  380               | WHILE '(' expression ')' statement
  381               | FOR '(' for_initialization ';' expression_optional ';' for_step ')' statement
  382               | DO statement WHILE '(' expression ')' ';'
  383               | FOREACH '(' identifier '[' identifier_list ']' ')' statement

  384 for_step: for_step_assignment_list
  385         | ε

  386 for_step_assignment_list: for_step_assignment_list ',' for_step_assignment
  387                         | for_step_assignment

  388 for_step_assignment: operator_assignment
  389                    | inc_or_dec_expression
  390                    | subroutine_call

  391 for_initialization: variable_assignment_list
  392                   | for_variable_declaration_list
  393                   | ε

  394 variable_assignment_list: variable_assignment_list ',' variable_assignment
  395                         | variable_assignment

  396 for_variable_declaration_list: for_variable_declaration

  397 for_variable_declaration: for_variable_declaration ',' identifier '=' expression
  398                         | VAR data_type identifier '=' expression
  399                         | data_type identifier '=' expression

  400 conditional_statement: unique_priority_optional IF '(' cond_predicate ')' statement else_if_list
  401                      | unique_priority_optional IF '(' cond_predicate ')' statement else_if_list ELSE statement

  402 else_if_list: else_if_list ELSE_IF '(' cond_predicate ')' statement
  403             | ε

  404 case_statement: unique_priority_optional case_keyword '(' expression ')' case_item_list ENDCASE

  405 subroutine_call_statement: subroutine_call ';'
  406                          | VOID TOK_SING_QUOT '(' subroutine_call ')' ';'

  407 unique_priority_optional: UNIQUE
  408                         | UNIQUE0
  409                         | PRIORITY
  410                         | ε

  411 case_keyword: CASE
  412             | CASEZ
  413             | CASEX

  414 case_item_list: case_item_list case_item
  415               | case_item

  416 case_item: expression_list ':' statement
  417          | DEFAULT ':' statement
  418          | DEFAULT statement

  419 seq_block: _BEGIN block_end_identifier_optional block_item_declaration_list statement_list END block_end_identifier_optional
  420          | _BEGIN block_end_identifier_optional block_item_declaration_list END block_end_identifier_optional
  421          | _BEGIN block_end_identifier_optional statement_list END block_end_identifier_optional
  422          | _BEGIN block_end_identifier_optional END block_end_identifier_optional

  423 par_block: FORK block_end_identifier_optional block_item_declaration_list statement_list join_keyword block_end_identifier_optional
  424          | FORK block_end_identifier_optional block_item_declaration_list join_keyword block_end_identifier_optional
  425          | FORK block_end_identifier_optional statement_list join_keyword block_end_identifier_optional
  426          | FORK block_end_identifier_optional join_keyword block_end_identifier_optional

  427 join_keyword: JOIN
  428             | JOIN_ANY
  429             | JOIN_NONE

  430 block_item_declaration_list: block_item_declaration_list block_item_declaration
  431                            | block_item_declaration

  432 expression_list: expression_list ',' expression
  433                | expression

  434 event_trigger: TOK_IMP hierarchical_identifier ';'
  435              | TOK_IMP TOK_LOG_GT hierarchical_identifier ';'

  436 disable_statement: DISABLE hierarchical_identifier ';'
  437                  | DISABLE FORK ';'

  438 wait_statement: WAIT '(' expression ')' statement
  439               | WAIT FORK ';'
  440               | WAIT_ORDER '(' hierarchical_identifier_list ')' action_block

  441 hierarchical_identifier_list: hierarchical_identifier_list ',' hierarchical_identifier
  442                             | hierarchical_identifier

  443 action_block: statement
  444             | statement ELSE statement
  445             | ELSE statement

  446 blocking_assignment: lvalue '=' delay_or_event_control expression
  447                    | lvalue assignment_operator dynamic_array_new
  448                    | lvalue assignment_operator class_new
  449                    | operator_assignment

  450 class_new: class_scope NEW '(' argument_list ')'
  451          | class_scope NEW
  452          | NEW '(' argument_list ')'
  453          | NEW

  454 class_scope: ps_identifier_tok
  455            | identifier parameter_value_assignment SCOPE

  456 dynamic_array_new: NEW '[' expression ']' '(' expression ')'
  457                  | NEW '[' expression ']'

  458 nonblocking_assignment: lvalue TOK_LOG_LEQ delay_or_event_control expression
  459                       | lvalue TOK_LOG_LEQ expression

  460 procedural_continuous_assignment: ASSIGN variable_assignment
  461                                 | DEASSIGN lvalue
  462                                 | FORCE variable_assignment
  463                                 | RELEASE lvalue

  464 variable_assignment: lvalue '=' expression

  465 jump_statement: RETURN expression ';'
  466               | RETURN ';'
  467               | BREAK ';'
  468               | CONTINUE ';'

  469 statement_list: statement_list statement
  470               | statement

  471 tf_item_declaration_list: tf_item_declaration_list tf_item_declaration
  472                         | ε

  473 tf_item_declaration: block_item_declaration

  474 block_item_declaration: attribute_instance_list data_declaration
  475                       | attribute_instance_list local_parameter_declaration ';'
  476                       | attribute_instance_list parameter_declaration ';'
  477                       | attribute_instance_list overload_declaration

  478 overload_declaration: BIND overload_operator FUNCTION data_type identifier '(' overload_proto_formals ')' ';'

  479 overload_operator: TOK_PLUS
  480                  | TOK_INC
  481                  | TOK_MINUS
  482                  | TOK_DEC
  483                  | TOK_MUL
  484                  | TOK_PWR
  485                  | TOK_DIV
  486                  | TOK_MOD
  487                  | TOK_LOG_EQ
  488                  | TOK_LOG_NEQ
  489                  | TOK_LOG_LT
  490                  | TOK_LOG_LEQ
  491                  | TOK_LOG_GT
  492                  | TOK_LOG_GEQ
  493                  | '='

  494 overload_proto_formals: overload_proto_formals ',' data_type
  495                       | data_type

  496 local_parameter_declaration: LOCALPARAM data_type param_assignment_list
  497                            | LOCALPARAM param_assignment_list
  498                            | LOCALPARAM TYPE type_assignment_list

  499 parameter_declaration: PARAMETER data_type param_assignment_list
  500                      | PARAMETER param_assignment_list
  501                      | PARAMETER TYPE type_assignment_list

  502 param_assignment_list: param_assignment_list ',' param_assignment
  503                      | param_assignment

  504 type_assignment_list: type_assignment_list ',' type_assignment
  505                     | type_assignment

  506 param_assignment: identifier '=' constant_param_expression
  507                 | identifier

  508 constant_param_expression: mintypmax_expression

  509 constant_mintypmax_expression: expression ':' expression ':' expression
  510                              | expression

  511 type_assignment: identifier '=' data_type
  512                | identifier

  513 data_declaration: variable_qualifier_list data_type variable_decl_assignment_list ';'
  514                 | variable_qualifier_list variable_decl_assignment_list ';'
  515                 | method_variable_qualifier_list data_type variable_decl_assignment_list ';'
  516                 | method_variable_qualifier_list variable_decl_assignment_list ';'
  517                 | data_type variable_decl_assignment_list ';'
  518                 | type_declaration
  519                 | package_import_declaration

  520 method_variable_qualifier_list: method_variable_qualifier_list method_variable_qualifier
  521                               | method_variable_qualifier

  522 variable_qualifier_list: variable_qualifier_list variable_qualifier
  523                        | variable_qualifier

  524 variable_qualifier: CONST
  525                   | VAR
  526                   | RAND
  527                   | RANDC

  528 method_qualifier: PURE
  529                 | VIRTUAL

  530 method_variable_qualifier: lifetime
  531                          | PROTECTED
  532                          | LOCAL

  533 variable_decl_assignment_list: variable_decl_assignment_list ',' variable_decl_assignment
  534                              | variable_decl_assignment

  535 variable_decl_assignment: identifier variable_dimension_list_optional '=' expression
  536                         | identifier variable_dimension_list_optional

  537 type_declaration: TYPEDEF data_type identifier ';'
  538                 | TYPEDEF ENUM identifier ';'
  539                 | TYPEDEF STRUCT identifier ';'
  540                 | TYPEDEF UNION identifier ';'
  541                 | TYPEDEF CLASS identifier ';'
  542                 | TYPEDEF INTERFACE CLASS identifier ';'

  543 package_import_declaration: IMPORT package_import_item_list ';'

  544 package_import_item_list: package_import_item_list ',' package_import_item
  545                         | package_import_item

  546 package_import_item: ps_identifier
  547                    | ps_identifier_tok TOK_MUL

  548 block_end_identifier_optional: ':' identifier
  549                              | ε

  550 lifetime_optional: lifetime
  551                  | ε

  552 attribute_instance_list: attribute_instance_list attribute_instance
  553                        | ε

  554 attribute_instance: '(' TOK_MUL attr_spec_list TOK_MUL ')'

  555 attr_spec_list: attr_spec_list ',' identifier '=' constant_primary
  556               | attr_spec_list ',' identifier
  557               | identifier '=' constant_primary
  558               | identifier

  559 timeunits_declaration_optional: timeunits_declaration
  560                               | ε

  561 timeunits_declaration: TIMEUNIT time_literal TOK_DIV time_literal ';'
  562                      | TIMEPRECISION time_literal ';'
  563                      | TIMEUNIT time_literal ';' TIMEPRECISION time_literal ';'
  564                      | TIMEPRECISION time_literal ';' TIMEUNIT time_literal ';'

  565 time_literal: unsigned_number time_unit
  566             | fixed_point_number time_unit

  567 primary_literal: time_literal
  568                | string_literal
  569                | unsigned_number

  570 concatenation: '{' concatenation_expression_list '}'

  571 multiple_concatenation: '{' expression concatenation '}'

  572 concatenation_expression_list: concatenation_expression_list ',' expression
  573                              | expression

  574 primary: primary_literal
  575        | hierarchical_identifier
  576        | ps_identifier
  577        | '{' '}'
  578        | concatenation
  579        | multiple_concatenation
  580        | subroutine_call
  581        | '(' mintypmax_expression ')'
  582        | casting_type TOK_SING_QUOT '(' expression ')'
  583        | THIS
  584        | '$'
  585        | _NULL

  586 casting_type: constant_primary
  587             | signing
  588             | STRING
  589             | CONST
  590             | simple_type

  591 simple_type: integer_type
  592            | non_integer_type
  593            | identifier
  594            | ps_identifier

  595 integer_type: integer_vector_type
  596             | integer_atom_type

  597 integer_atom_type: BYTE
  598                  | SHORTINT
  599                  | INT
  600                  | LONGINT
  601                  | INTEGER
  602                  | TIME

  603 non_integer_type: SHORTREAL
  604                 | REAL
  605                 | REALTIME

  606 mintypmax_expression: expression ':' expression ':' expression
  607                     | expression

  608 subroutine_call: tf_call
  609                | randomize_call
  610                | STD SCOPE randomize_call

  611 tf_call: ps_or_hierarchical_identifier attribute_instance_list '(' argument_list ')'
  612        | implicit_class_handle '.' identifier attribute_instance_list '(' argument_list ')'

  613 implicit_class_handle: THIS
  614                      | SUPER

  615 randomize_call: RANDOMIZE attribute_instance_list
  616               | RANDOMIZE attribute_instance_list '(' identifier_list ')'
  617               | RANDOMIZE attribute_instance_list '(' ')'
  618               | RANDOMIZE attribute_instance_list '(' _NULL ')'

  619 identifier_list: identifier_list ',' identifier
  620                | identifier

  621 ps_identifier: ps_identifier_tok identifier
  622              | '$' UNIT SCOPE identifier

  623 ps_or_hierarchical_identifier: ps_identifier
  624                              | identifier parameter_value_assignment SCOPE identifier
  625                              | hierarchical_identifier

  626 hierarchical_identifier: hierarchical_identifier '.' identifier unpacked_dimension_list_optional
  627                        | identifier unpacked_dimension_list_optional

  628 part_select_range: expression ':' expression
  629                  | expression TOK_UPTO expression
  630                  | expression TOK_DNTO expression
  631                  | expression

  632 argument_list: expression_list
  633              | expression_list ',' identifier_expression_list
  634              | identifier_expression_list
  635              | ε

  636 identifier_expression_list: identifier_expression_list ',' '.' identifier '(' expression_optional ')'
  637                           | '.' identifier '(' expression_optional ')'

  638 expression_optional: expression
  639                    | ε

  640 expression: primary
  641           | TOK_PLUS primary
  642           | TOK_MINUS primary
  643           | TOK_LOG_NOT primary
  644           | TOK_BIT_NOT primary
  645           | TOK_BIT_AND primary
  646           | TOK_BIT_NAND primary
  647           | TOK_BIT_OR primary
  648           | TOK_BIT_NOR primary
  649           | TOK_BIT_XOR primary
  650           | TOK_BIT_XNOR primary
  651           | inc_or_dec_expression
  652           | '(' operator_assignment ')'
  653           | expression TOK_PLUS expression
  654           | expression TOK_MINUS expression
  655           | expression TOK_MUL expression
  656           | expression TOK_DIV expression
  657           | expression TOK_MOD expression
  658           | expression TOK_LOG_EQ expression
  659           | expression TOK_LOG_NEQ expression
  660           | expression TOK_LOG_XEQ expression
  661           | expression TOK_LOG_XNEQ expression
  662           | expression TOK_LOG_WEQ expression
  663           | expression TOK_LOG_WNEQ expression
  664           | expression TOK_LOG_AND expression
  665           | expression TOK_LOG_OR expression
  666           | expression TOK_PWR expression
  667           | expression TOK_LOG_LT expression
  668           | expression TOK_LOG_LEQ expression
  669           | expression TOK_LOG_GT expression
  670           | expression TOK_LOG_GEQ expression
  671           | expression TOK_BIT_AND expression
  672           | expression TOK_BIT_OR expression
  673           | expression TOK_BIT_XOR expression
  674           | expression TOK_BIT_XNOR expression
  675           | expression TOK_BIT_SR expression
  676           | expression TOK_BIT_SL expression
  677           | expression TOK_BIT_SRA expression
  678           | expression TOK_BIT_SLA expression
  679           | expression TOK_IMP expression
  680           | expression TOK_EQUIV expression
  681           | expression '?' expression ':' expression
  682           | expression INSIDE '{' value_range_list '}'
  683           | TAGGED identifier expression

  684 inc_or_dec_expression: TOK_INC lvalue
  685                      | TOK_DEC lvalue
  686                      | lvalue TOK_INC
  687                      | lvalue TOK_DEC

  688 operator_assignment: lvalue assignment_operator expression

  689 lvalue: hierarchical_identifier

  690 cond_predicate: expression_or_cond_pattern

  691 expression_or_cond_pattern: expression

  692 value_range_list: value_range_list ',' value_range
  693                 | value_range

  694 value_range: '[' expression ':' expression ']'
  695            | expression

  696 time_unit: S
  697          | MS
  698          | US
  699          | NS
  700          | PS
  701          | FS

  702 lifetime: STATIC
  703         | AUTOMATIC

  704 identifier: simple_identifier
  705           | escaped_identifier


Terminals, with rules where they appear

    $end (0) 0
    '#' (35) 35 36 37 149 150 151 353 354
    '$' (36) 67 68 69 70 584 622
    '(' (40) 12 13 21 22 35 36 37 67 68 69 70 95 96 97 103 137 138 139 146 149 150 151 157 158 216 263 294 296 300 301 311 312 347 352 354 360 362 368 377 379 380 381 382 383 400 401 402 404 406 438 440 450 452 456 478 554 581 582 611 612 616 617 618 636 637 652
    ')' (41) 12 13 21 22 35 36 37 67 68 69 70 95 96 97 103 137 138 139 146 149 150 151 157 158 216 263 294 296 300 301 311 312 347 352 354 360 362 368 377 379 380 381 382 383 400 401 402 404 406 438 440 450 452 456 478 554 581 582 611 612 616 617 618 636 637 652
    ',' (44) 15 63 67 69 75 135 141 144 152 154 168 181 187 217 268 315 367 386 394 397 432 441 494 502 504 533 544 555 556 572 619 633 636 692
    '.' (46) 21 22 146 147 148 157 158 228 612 626 636 637
    ':' (58) 100 101 105 106 107 303 416 417 509 548 606 628 681 694
    ';' (59) 10 11 48 62 71 72 73 74 103 129 132 133 134 166 167 249 257 258 259 260 276 277 278 284 285 286 287 299 300 301 310 311 312 331 332 333 334 337 347 348 381 382 405 406 434 435 436 437 439 465 466 467 468 475 476 478 513 514 515 516 517 537 538 539 540 541 542 543 561 562 563 564
    '=' (61) 17 19 65 67 68 69 70 109 110 116 129 130 131 170 321 397 398 399 446 464 493 506 511 535 555 557
    '?' (63) 681
    '@' (64) 359 360 361 362
    '[' (91) 196 197 198 199 243 244 383 456 457 694
    ']' (93) 196 197 198 199 243 244 383 456 457 694
    '{' (123) 570 571 577 682
    '}' (125) 570 571 577 682
    error (256)
    LIBRARY (258)
    INCLUDE (259)
    MODULE (260) 42
    ENDMODULE (261) 6 7
    NEXTTIME (262)
    EXTERN (263) 8 9 286 287
    MACROMODULE (264) 43
    INTERFACE (265) 542
    ENDINTERFACE (266)
    PROGRAM (267)
    ENDPROGRAM (268)
    CHECKER (269)
    ENDCHECKER (270)
    VIRTUAL (271) 234 261 529
    CLASS (272) 260 541 542
    ENDCLASS (273) 260
    EXTENDS (274) 263 264
    IMPLEMENTS (275) 266
    PURE (276) 528
    PACKAGE (277) 249
    ENDPACKAGE (278) 249
    TYPE (279) 41 498 501
    RAND (280) 526
    GENVAR (281) 109
    INPUT (282) 27 176 177
    OUTPUT (283) 28 178 179
    INOUT (284) 29 175
    REF (285) 30 180 324
    DEFPARAM (286) 167
    IMPORT (287) 543
    FATAL (288)
    ERROR (289)
    WARNING (290)
    INFO (291)
    LIBLIST (292)
    USE (293)
    DEFAULT (294) 101 102 166 417 418
    CLOCKING (295) 166
    DISABLE (296) 436 437
    IFF (297) 363 365
    CONST (298) 324 524 589
    EXPORT (299)
    CONFIG (300)
    ENDCONFIG (301)
    DESIGN (302)
    INSTANCE (303)
    CELL (304)
    FORK (305) 423 424 425 426 437 439
    JOIN (306) 427
    FORKJOIN (307)
    JOIN_ALL (308)
    JOIN_ANY (309) 428
    JOIN_NONE (310) 429
    FUNCTION (311) 294 295 298 478
    NEW (312) 303 305 306 307 450 451 452 453 456 457
    STATIC (313) 702
    PROTECTED (314) 531
    LOCAL (315) 532
    RANDC (316) 527
    SUPER (317) 614
    CONSTRAINT (318)
    SOLVE (319)
    BEFORE (320)
    SOFT (321)
    FOREACH (322) 383
    IF (323) 95 96 400 401
    ELSE (324) 95 401 444 445
    ELSE_IF (325) 402
    UNIQUE (326) 407
    LOCALPARAM (327) 496 497 498
    PARAMETER (328) 499 500 501
    SPECPARAM (329) 62
    VAR (330) 215 317 318 398 525
    INTERCONNECT (331) 201
    VECTORED (332)
    SCALARED (333)
    TYPEDEF (334) 537 538 539 540 541 542
    ENUM (335) 538
    STRUCT (336) 539
    UNION (337) 540
    NETTYPE (338)
    WITH (339)
    AUTOMATIC (340) 703
    STRING (341) 226 588
    CHANDLE (342) 227
    EVENT (343) 230
    PACKED (344)
    BYTE (345) 597
    SHORTINT (346) 598
    INT (347) 599
    LONGINT (348) 600
    INTEGER (349) 601
    TIME (350) 602
    BIT (351) 246
    LOGIC (352) 247
    REG (353) 248
    SHORTREAL (354) 603
    REAL (355) 604
    REALTIME (356) 605
    SUPPLY0 (357) 202
    SUPPLY1 (358) 203
    TRI (359) 204
    TRIAND (360) 205
    TRIOR (361) 206
    TRIREG (362) 207
    TRI0 (363) 208
    TRI1 (364) 209
    UWIRE (365) 210
    WIRE (366) 211
    WAND (367) 212
    WOR (368) 213
    UNSIGNED (369) 240
    VOID (370) 329 406
    TAGGED (371) 683
    HIGHZ1 (372)
    HIGHZ0 (373)
    STRONG0 (374)
    PULL0 (375)
    WEAK0 (376)
    STRONG1 (377)
    PULL1 (378)
    WEAK1 (379)
    SMALL (380)
    MEDIUM (381)
    LARGE (382)
    _1STEP (383) 358
    TASK (384) 296 297 309
    ENDTASK (385) 310 311 312
    DPIC (386)
    DPI (387)
    CONTEXT (388)
    ASSERT (389)
    PROPERTY (390)
    ASSUME (391)
    COVER (392)
    COVERGROUP (393)
    EXPECT (394)
    SEQUENCE (395)
    RESTRICT (396)
    ENDPROPERTY (397)
    NOT (398)
    CASE (399) 97 411
    ENDCASE (400) 97 404
    OPTION (401)
    _BEGIN (402) 105 106 107 108 419 420 421 422
    PMOS (403)
    TABLE (404)
    UNTIL (405)
    PRIORITY (406) 409
    ENDFUNCTION (407) 299 300 301
    ROOT (408)
    PS (409) 700
    POSEDGE (410) 369
    WIDTH (411)
    TRANIF0 (412)
    BUFIF0 (413)
    FORCE (414) 462
    ENDSEQUENCE (415)
    REJECT_ON (416)
    FULLSKEW (417)
    S_EVENTUALLY (418)
    WHILE (419) 380 382
    NOSHOWCANCELLED (420) 74
    FOREVER (421) 378
    NAND (422)
    THIS (423) 583 613
    PATHPULSE (424) 67 68 69 70
    ALIAS (425) 129
    DIST (426)
    WAIT (427) 438 439
    SHOWCANCELLED (428) 73
    US (429) 698
    SETUPHOLD (430)
    RECOVERY (431)
    XOR (432)
    DEFAULT_SEQUENCE (433)
    TRANIF1 (434)
    INSIDE (435) 682
    DO (436) 382
    SAMPLE (437)
    S (438) 696
    NOTIF0 (439)
    ENDGENERATE (440) 78
    UNTIL_WITH (441)
    FINAL (442) 90
    WAIT_ORDER (443) 440
    WITHIN (444)
    THROUGHOUT (445)
    PULSESTYLE_ONDETECT (446) 72
    XNOR (447)
    RPMOS (448)
    END (449) 105 106 107 108 419 420 421 422
    FIRST_MATCH (450)
    SYNC_REJECT_ON (451)
    RTRANIF0 (452)
    SIGNED (453) 239
    CASEZ (454) 412
    TIMEUNIT (455) 561 563 564
    BUF (456)
    MODPORT (457)
    ASSIGN (458) 132 460
    RELEASE (459) 463
    ALWAYS (460) 161
    NOCHANGE (461)
    WEAK (462)
    BINS (463)
    TRAN (464)
    BIND (465) 133 478
    PRIMITIVE (466)
    STRONG (467)
    S_UNTIL (468)
    PERIOD (469)
    NOTIF1 (470)
    REPEAT (471) 352 379
    _INITIAL (472) 89
    SETUP (473)
    RTRAN (474)
    ALWAYS_LATCH (475) 163
    RNMOS (476)
    INTERSECT (477)
    PULLDOWN (478)
    MATCHES (479)
    REMOVAL (480)
    TIMESKEW (481)
    ALWAYS_FF (482) 164
    RANDCASE (483)
    DEASSIGN (484) 461
    CASEX (485) 413
    TIMEPRECISION (486) 562 563 564
    SKEW (487)
    NS (488) 699
    NMOS (489)
    UNTYPED (490)
    IMPLIES (491)
    RANDOMIZE (492) 615 616 617 618
    SPECIFY (493) 56
    NEGEDGE (494) 370
    S_NEXTTIME (495)
    INCDIR (496)
    ALWAYS_COMB (497) 162
    ENDPRIMITIVE (498)
    IFNONE (499)
    BINSOF (500)
    CMOS (501)
    SYNC_ACCEPT_ON (502)
    NOR (503)
    PULSESTYLE_ONEVENT (504) 71
    S_UNTIL_WITH (505)
    STD (506) 610
    ENDCLOCKING (507)
    HOLD (508)
    GENERATE (509) 78
    PULLUP (510)
    TYPE_OPTION (511)
    MS (512) 697
    ENDTABLE (513)
    IGNORE_BINS (514)
    BUFIF1 (515)
    FOR (516) 103 381
    RETURN (517) 465 466
    _NULL (518) 585 618
    GLOBAL (519)
    ILLEGAL_BINS (520)
    UNIQUE0 (521) 408
    RANDSEQUENCE (522)
    LET (523)
    EVENTUALLY (524)
    EDGE (525) 371
    ACCEPT_ON (526)
    CONTINUE (527) 468
    ENDSPECIFY (528) 56
    PURE_VIRTUAL (529) 284 285
    RECREM (530)
    BREAK (531) 467
    S_ALWAYS (532)
    ENDGROUP (533)
    RTRANIF1 (534)
    COVERPOINT (535)
    CROSS (536)
    FS (537) 701
    WILDCARD (538)
    RCMOS (539)
    UNIT (540) 622
    TOK_UPTO (541) 629
    TOK_DNTO (542) 630
    SUPER_NEW (543) 347 348
    c_identifier <sval> (544)
    escaped_identifier <sval> (545) 705
    system_tf_identifier <sval> (546)
    simple_identifier <sval> (547) 704
    string_literal <sval> (548) 568
    block_identifier <sval> (549)
    class_identifier <sval> (550)
    package_identifier <sval> (551)
    type_identifier <sval> (552)
    ps_identifier_tok <sval> (553) 306 454 547 621
    binary_number (554)
    octal_number (555)
    hex_number (556)
    decimal_number (557)
    unsigned_number <ival> (558) 355 375 565 569
    fixed_point_number <fval> (559) 566
    TOK_LOG_XEQ (560) 660
    TOK_LOG_XNEQ (561) 661
    TOK_LOG_WEQ (562) 662
    TOK_LOG_WNEQ (563) 663
    TOK_BIT_SRA (564) 677
    TOK_DLY (565) 375 376 377
    TOK_BIT_SLA (566) 678
    TOK_EQUIV (567) 680
    TOK_IMP_OVLP (568)
    TOK_IMP_NON_OVLP (569)
    TOK_IMP (570) 434 435 679
    TOK_LOG_AND (571) 664
    TOK_LOG_OR (572) 665
    TOK_LOG_EQ (573) 487 658
    TOK_LOG_NEQ (574) 488 659
    TOK_LOG_LEQ (575) 458 459 490 668
    TOK_LOG_GEQ (576) 492 670
    TOK_BIT_SR (577) 675
    OR (578) 366
    AND (579)
    TOK_BIT_SL (580) 676
    TOK_BIT_NAND (581) 646
    TOK_BIT_NOR (582) 648
    TOK_BIT_XNOR (583) 650 674
    TOK_PWR (584) 484 666
    TOK_PLUS (585) 479 641 653
    TOK_MINUS (586) 481 642 654
    TOK_3AMP (587)
    TOK_MUL (588) 148 197 361 362 483 547 554 655
    TOK_DIV (589) 485 561 656
    TOK_MOD (590) 486 657
    TOK_LOG_NOT (591) 643
    TOK_LOG_LT (592) 489 667
    TOK_LOG_GT (593) 435 491 669
    TOK_BIT_AND (594) 645 671
    TOK_BIT_OR (595) 647 672
    TOK_BIT_XOR (596) 649 673
    TOK_BIT_NOT (597) 644
    TOK_INC (598) 112 114 480 684 686
    TOK_DEC (599) 113 115 482 685 687
    SCOPE (600) 305 455 610 622 624
    TOK_SING_QUOT (601) 406 582
    TOK_SL_EQ (602) 117
    TOK_SR_EQ (603) 118
    TOK_SLA_EQ (604) 119
    TOK_SRA_EQ (605) 120
    TOK_PLUS_EQ (606) 121
    TOK_MINUS_EQ (607) 122
    TOK_MUL_EQ (608) 123
    TOK_DIV_EQ (609) 124
    TOK_MOD_EQ (610) 125
    TOK_AND_EQ (611) 126
    TOK_OR_EQ (612) 127
    TOK_XOR_EQ (613) 128
    THEN (614)
    VIRTUAL_INTERFACE (615) 233


Nonterminals, with rules where they appear

    $accept (376)
        on left: 0
    source_text <ast_node> (377)
        on left: 1
        on right: 0
    description_list <ast_node_list> (378)
        on left: 2 3
        on right: 1 2
    description <ast_node> (379)
        on left: 4 5
        on right: 2
    module_declaration <ast_module> (380)
        on left: 6 7 8 9
        on right: 5 54
    module_nonansi_header (381)
        on left: 10
        on right: 6 8
    module_ansi_header (382)
        on left: 11
        on right: 7 9
    port_declaration_list (383)
        on left: 12 13 14
        on right: 11
    ansi_port_declaration_list (384)
        on left: 15 16
        on right: 12 15
    ansi_port_declaration (385)
        on left: 17 18 19 20 21 22
        on right: 15 16
    net_port_header (386)
        on left: 23 24
        on right: 17 18
    variable_port_header (387)
        on left: 25 26
        on right: 19 20
    port_direction (388)
        on left: 27 28 29 30
        on right: 21 23 25 323
    package_import_declaration_list (389)
        on left: 31 32
        on right: 10 11 31
    parameter_port_list_optional (390)
        on left: 33 34
        on right: 10 11 260
    parameter_port_list (391)
        on left: 35 36 37
        on right: 33
    parameter_port_declaration (392)
        on left: 38 39 40 41
        on right: 36
    module_keyword (393)
        on left: 42 43
        on right: 10 11
    module_item_list (394)
        on left: 44 45
        on right: 6 44
    non_port_module_item_list (395)
        on left: 46 47
        on right: 7 46
    module_item (396)
        on left: 48 49
        on right: 44
    non_port_module_item (397)
        on left: 50 51 52 53 54 55
        on right: 46 49
    specify_block (398)
        on left: 56
        on right: 52
    specify_item_list (399)
        on left: 57 58
        on right: 56 57
    specify_item (400)
        on left: 59 60 61
        on right: 57
    specparam_declaration (401)
        on left: 62
        on right: 53 59
    specparam_assignment_list (402)
        on left: 63 64
        on right: 62 63
    specparam_assignment (403)
        on left: 65 66
        on right: 63 64
    pulse_control_specparam (404)
        on left: 67 68 69 70
        on right: 66
    pulsestyle_declaration (405)
        on left: 71 72
        on right: 60
    showcancelled_declaration (406)
        on left: 73 74
        on right: 61
    path_output_list (407)
        on left: 75 76
        on right: 71 72 73 74 75
    specify_terminal_descriptor (408)
        on left: 77
        on right: 75 76
    generate_region (409)
        on left: 78
        on right: 50
    generate_item_list (410)
        on left: 79 80
        on right: 78 79 105 106 107 108
    generate_item (411)
        on left: 81
        on right: 79 104
    module_or_generate_item (412)
        on left: 82 83
        on right: 51 81
    module_common_item (413)
        on left: 84 85 86 87 88 89 90 91 92 93 94
        on right: 83
    if_generate_construct (414)
        on left: 95 96
        on right: 93
    case_generate_construct (415)
        on left: 97
        on right: 94
    case_generate_item_list (416)
        on left: 98 99
        on right: 97 98
    case_generate_item (417)
        on left: 100 101 102
        on right: 98 99
    loop_generate_construct (418)
        on left: 103
        on right: 92
    generate_block (419)
        on left: 104 105 106 107 108
        on right: 95 96 100 101 102 103
    genvar_initialization (420)
        on left: 109 110
        on right: 103
    genvar_iteration (421)
        on left: 111 112 113 114 115
        on right: 103
    assignment_operator (422)
        on left: 116 117 118 119 120 121 122 123 124 125 126 127 128
        on right: 111 447 448 688
    net_alias (423)
        on left: 129
        on right: 88
    lvalue_list (424)
        on left: 130 131
        on right: 129 130
    continuous_assign (425)
        on left: 132
        on right: 87
    bind_directive (426)
        on left: 133
        on right: 86
    generic_instantiation (427)
        on left: 134
        on right: 85 133
    hierarchical_instance_list (428)
        on left: 135 136
        on right: 134 135
    hierarchical_instance (429)
        on left: 137 138 139
        on right: 135 136
    name_of_instance (430)
        on left: 140
        on right: 137 138 139
    ordered_port_connection_list (431)
        on left: 141 142
        on right: 137 141
    ordered_port_connection (432)
        on left: 143
        on right: 141 142
    named_port_connection_list (433)
        on left: 144 145
        on right: 138 144
    named_port_connection (434)
        on left: 146 147 148
        on right: 144 145
    parameter_value_assignment (435)
        on left: 149 150 151
        on right: 222 231 455 624
    ordered_parameter_assignment_list (436)
        on left: 152 153
        on right: 149 152
    named_parameter_assignment_list (437)
        on left: 154 155
        on right: 150 154
    ordered_parameter_assignment (438)
        on left: 156
        on right: 152 153
    named_parameter_assignment (439)
        on left: 157 158
        on right: 154 155
    param_expression (440)
        on left: 159 160
        on right: 156 157
    always_keyword (441)
        on left: 161 162 163 164
        on right: 91
    module_or_generate_item_declaration (442)
        on left: 165 166
        on right: 84
    parameter_override (443)
        on left: 167
        on right: 82
    defparam_assignment_list (444)
        on left: 168 169
        on right: 167 168
    defparam_assignment (445)
        on left: 170
        on right: 168 169
    port_declaration (446)
        on left: 171 172 173 174
        on right: 48
    inout_declaration (447)
        on left: 175
        on right: 171
    input_declaration (448)
        on left: 176 177
        on right: 172
    output_declaration (449)
        on left: 178 179
        on right: 173
    ref_declaration (450)
        on left: 180
        on right: 174
    port_identifier_list (451)
        on left: 181 182
        on right: 175 176 178 181
    unpacked_dimension_list_optional (452)
        on left: 183 184
        on right: 17 18 140 181 182 626 627
    unpacked_dimension_list (453)
        on left: 185 186
        on right: 183 185
    variable_identifier_list (454)
        on left: 187 188
        on right: 177 179 180 187
    variable_dimension_list_optional (455)
        on left: 189 190
        on right: 19 20 187 188 317 319 535 536
    variable_dimension_list (456)
        on left: 191 192
        on right: 189 191
    variable_dimension (457)
        on left: 193 194 195
        on right: 191 192
    associative_dimension (458)
        on left: 196 197
        on right: 195
    unpacked_dimension (459)
        on left: 198
        on right: 185 186 194
    unsized_dimension (460)
        on left: 199
        on right: 193
    net_port_type (461)
        on left: 200 201
        on right: 23 24 175 176 178
    net_type (462)
        on left: 202 203 204 205 206 207 208 209 210 211 212 213
        on right: 200
    variable_port_type (463)
        on left: 214 215
        on right: 25 26 177 179 180
    list_of_ports <ast_node_list> (464)
        on left: 216
        on right: 10
    port_list <ast_node_list> (465)
        on left: 217 218
        on right: 216 217
    data_type (466)
        on left: 219 220 221 222
        on right: 40 134 214 317 318 319 320 328 398 399 478 494 495 496 499 511 513 515 517 537
    data_type_no_identifier (467)
        on left: 223 224 225 226 227 228 229 230
        on right: 160 196 219
    parameter_value_assignment_optional (468)
        on left: 231 232
        on right: 228 229 263 264 270
    virtual_interface_type (469)
        on left: 233 234
        on right: 228 229
    signing_optional (470)
        on left: 235 236
        on right: 201 223 224
    packed_dimension_list_optional (471)
        on left: 237 238
        on right: 62 201 221 223
    signing (472)
        on left: 239 240
        on right: 235 587
    packed_dimension_list (473)
        on left: 241 242
        on right: 237 241
    packed_dimension (474)
        on left: 243 244
        on right: 241 242
    constant_primary (475)
        on left: 245
        on right: 555 557 586
    integer_vector_type (476)
        on left: 246 247 248
        on right: 223 595
    package_declaration <ast_package> (477)
        on left: 249
        on right: 4
    package_item_list_optional (478)
        on left: 250 251
        on right: 249 250
    package_item (479)
        on left: 252
        on right: 250
    package_or_generate_item_declaration (480)
        on left: 253 254 255 256 257 258 259
        on right: 165 252
    class_declaration (481)
        on left: 260
        on right: 256 275
    virtual_optional (482)
        on left: 261 262
        on right: 260
    extends_class_optional (483)
        on left: 263 264 265
        on right: 260
    implements_interface_optional (484)
        on left: 266 267
        on right: 260
    interface_class_type_list (485)
        on left: 268 269
        on right: 266 268
    interface_class_type (486)
        on left: 270
        on right: 268 269
    class_item_list (487)
        on left: 271 272
        on right: 260 271
    class_item (488)
        on left: 273 274 275 276 277 278
        on right: 271
    class_property (489)
        on left: 279
        on right: 273
    class_method (490)
        on left: 280 281 282 283 284 285 286 287
        on right: 274
    method_prototype (491)
        on left: 288 289
        on right: 284 285 286 287
    class_method_qualifier_list (492)
        on left: 290 291
        on right: 280 281 284 286
    method_qualifier_list (493)
        on left: 292 293
        on right: 291 292
    function_prototype (494)
        on left: 294 295
        on right: 289
    task_prototype (495)
        on left: 296 297
        on right: 288
    function_declaration (496)
        on left: 298
        on right: 255 281 283
    function_body_declaration (497)
        on left: 299 300 301
        on right: 298
    function_block_end_identifier_optional (498)
        on left: 302 303
        on right: 299 300 301
    function_type_name (499)
        on left: 304 305 306 307 308
        on right: 294 295 299 300 301
    task_declaration (500)
        on left: 309
        on right: 254 280 282
    task_body_declaration (501)
        on left: 310 311 312
        on right: 309
    tf_port_list_optional (502)
        on left: 313 314
        on right: 294 296 300 301 311 312
    tf_port_list (503)
        on left: 315 316
        on right: 313 315
    tf_port_item (504)
        on left: 317 318 319 320
        on right: 315 316
    equals_expression_optional (505)
        on left: 321 322
        on right: 317 318 319 320
    tf_port_direction (506)
        on left: 323 324 325
        on right: 317 318 319 320
    statement_list_optional (507)
        on left: 326 327
        on right: 299 300 301 310 311 312
    function_data_type (508)
        on left: 328 329
        on right: 304 305 308
    statement (509)
        on left: 330 331
        on right: 89 90 91 349 378 379 380 381 382 383 400 401 402 416 417 418 438 443 444 445 469 470
    statement_item (510)
        on left: 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348
        on right: 330
    procedural_timing_control_statement (511)
        on left: 349
        on right: 344
    delay_or_event_control (512)
        on left: 350 351 352
        on right: 446 458
    delay_control (513)
        on left: 353 354
        on right: 350 372
    delay_value (514)
        on left: 355 356 357 358
        on right: 353
    event_control (515)
        on left: 359 360 361 362
        on right: 351 352 373
    event_expression (516)
        on left: 363 364 365 366 367 368
        on right: 360 366 367 368
    edge_identifier (517)
        on left: 369 370 371
        on right: 363 364
    procedural_timing_control (518)
        on left: 372 373 374
        on right: 349
    cycle_delay (519)
        on left: 375 376 377
        on right: 374
    loop_statement (520)
        on left: 378 379 380 381 382 383
        on right: 341
    for_step (521)
        on left: 384 385
        on right: 381
    for_step_assignment_list (522)
        on left: 386 387
        on right: 384 386
    for_step_assignment (523)
        on left: 388 389 390
        on right: 386 387
    for_initialization (524)
        on left: 391 392 393
        on right: 381
    variable_assignment_list (525)
        on left: 394 395
        on right: 132 391 394
    for_variable_declaration_list (526)
        on left: 396
        on right: 392
    for_variable_declaration (527)
        on left: 397 398 399
        on right: 396 397
    conditional_statement (528)
        on left: 400 401
        on right: 336
    else_if_list (529)
        on left: 402 403
        on right: 400 401 402
    case_statement (530)
        on left: 404
        on right: 335
    subroutine_call_statement (531)
        on left: 405 406
        on right: 338
    unique_priority_optional (532)
        on left: 407 408 409 410
        on right: 400 401 404
    case_keyword (533)
        on left: 411 412 413
        on right: 404
    case_item_list (534)
        on left: 414 415
        on right: 404 414
    case_item (535)
        on left: 416 417 418
        on right: 414 415
    seq_block (536)
        on left: 419 420 421 422
        on right: 345
    par_block (537)
        on left: 423 424 425 426
        on right: 343
    join_keyword (538)
        on left: 427 428 429
        on right: 423 424 425 426
    block_item_declaration_list (539)
        on left: 430 431
        on right: 300 311 419 420 423 424 430
    expression_list (540)
        on left: 432 433
        on right: 100 416 432 632 633
    event_trigger (541)
        on left: 434 435
        on right: 340
    disable_statement (542)
        on left: 436 437
        on right: 339
    wait_statement (543)
        on left: 438 439 440
        on right: 346
    hierarchical_identifier_list (544)
        on left: 441 442
        on right: 440 441
    action_block (545)
        on left: 443 444 445
        on right: 440
    blocking_assignment (546)
        on left: 446 447 448 449
        on right: 332
    class_new (547)
        on left: 450 451 452 453
        on right: 448
    class_scope (548)
        on left: 454 455
        on right: 450 451
    dynamic_array_new (549)
        on left: 456 457
        on right: 447
    nonblocking_assignment (550)
        on left: 458 459
        on right: 333
    procedural_continuous_assignment (551)
        on left: 460 461 462 463
        on right: 334
    variable_assignment (552)
        on left: 464
        on right: 394 395 460 462
    jump_statement (553)
        on left: 465 466 467 468
        on right: 342
    statement_list (554)
        on left: 469 470
        on right: 326 419 421 423 425 469
    tf_item_declaration_list (555)
        on left: 471 472
        on right: 299 310 471
    tf_item_declaration (556)
        on left: 473
        on right: 471
    block_item_declaration (557)
        on left: 474 475 476 477
        on right: 430 431 473
    overload_declaration (558)
        on left: 478
        on right: 477
    overload_operator (559)
        on left: 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493
        on right: 478
    overload_proto_formals (560)
        on left: 494 495
        on right: 478 494
    local_parameter_declaration (561)
        on left: 496 497 498
        on right: 39 257 276 475
    parameter_declaration (562)
        on left: 499 500 501
        on right: 38 258 277 476
    param_assignment_list (563)
        on left: 502 503
        on right: 35 40 496 497 499 500 502
    type_assignment_list (564)
        on left: 504 505
        on right: 41 498 501 504
    param_assignment (565)
        on left: 506 507
        on right: 502 503
    constant_param_expression (566)
        on left: 508
        on right: 506
    constant_mintypmax_expression (567)
        on left: 509 510
        on right: 65 67 68 69 70 170
    type_assignment (568)
        on left: 511 512
        on right: 504 505
    data_declaration (569)
        on left: 513 514 515 516 517 518 519
        on right: 253 279 474
    method_variable_qualifier_list (570)
        on left: 520 521
        on right: 290 515 516 520
    variable_qualifier_list (571)
        on left: 522 523
        on right: 513 514 522
    variable_qualifier (572)
        on left: 524 525 526 527
        on right: 522 523
    method_qualifier (573)
        on left: 528 529
        on right: 292 293
    method_variable_qualifier (574)
        on left: 530 531 532
        on right: 520 521
    variable_decl_assignment_list (575)
        on left: 533 534
        on right: 513 514 515 516 517 533
    variable_decl_assignment (576)
        on left: 535 536
        on right: 533 534
    type_declaration (577)
        on left: 537 538 539 540 541 542
        on right: 518
    package_import_declaration (578)
        on left: 543
        on right: 31 519
    package_import_item_list (579)
        on left: 544 545
        on right: 543 544
    package_import_item (580)
        on left: 546 547
        on right: 544 545
    block_end_identifier_optional <ast_identifier> (581)
        on left: 548 549
        on right: 6 7 105 106 107 108 249 260 302 310 311 312 419 420 421 422 423 424 425 426
    lifetime_optional <ast_lifetime> (582)
        on left: 550 551
        on right: 10 11 249 260 298 309
    attribute_instance_list <ast_node_list> (583)
        on left: 552 553
        on right: 10 11 53 143 146 147 148 171 172 173 174 249 317 318 319 320 330 331 474 475 476 477 552 611 612 615 616 617 618
    attribute_instance <ast_node_list> (584)
        on left: 554
        on right: 552
    attr_spec_list <ast_node_list> (585)
        on left: 555 556 557 558
        on right: 554 555 556
    timeunits_declaration_optional <ast_timeunits_decl> (586)
        on left: 559 560
        on right: 249
    timeunits_declaration <ast_timeunits_decl> (587)
        on left: 561 562 563 564
        on right: 55 559
    time_literal <ast_time_literal> (588)
        on left: 565 566
        on right: 357 561 562 563 564 567
    primary_literal <ast_node> (589)
        on left: 567 568 569
        on right: 245 574
    concatenation (590)
        on left: 570
        on right: 571 578
    multiple_concatenation (591)
        on left: 571
        on right: 579
    concatenation_expression_list (592)
        on left: 572 573
        on right: 570 572
    primary <ast_node> (593)
        on left: 574 575 576 577 578 579 580 581 582 583 584 585
        on right: 640 641 642 643 644 645 646 647 648 649 650
    casting_type (594)
        on left: 586 587 588 589 590
        on right: 582
    simple_type (595)
        on left: 591 592 593 594
        on right: 590
    integer_type (596)
        on left: 595 596
        on right: 591
    integer_atom_type (597)
        on left: 597 598 599 600 601 602
        on right: 224 596
    non_integer_type (598)
        on left: 603 604 605
        on right: 225 592
    mintypmax_expression (599)
        on left: 606 607
        on right: 159 354 508 581
    subroutine_call (600)
        on left: 608 609 610
        on right: 390 405 406 580
    tf_call (601)
        on left: 611 612
        on right: 608
    implicit_class_handle (602)
        on left: 613 614
        on right: 612
    randomize_call (603)
        on left: 615 616 617 618
        on right: 609 610
    identifier_list (604)
        on left: 619 620
        on right: 383 616 619
    ps_identifier (605)
        on left: 621 622
        on right: 221 356 546 576 594 623
    ps_or_hierarchical_identifier (606)
        on left: 623 624 625
        on right: 296 297 304 310 311 312 611
    hierarchical_identifier (607)
        on left: 626 627
        on right: 69 70 77 133 170 220 263 264 270 359 434 435 436 441 442 575 625 626 689
    part_select_range (608)
        on left: 628 629 630 631
        on right: 198 244
    argument_list (609)
        on left: 632 633 634 635
        on right: 263 347 450 452 611 612
    identifier_expression_list (610)
        on left: 636 637
        on right: 633 634 636
    expression_optional (611)
        on left: 638 639
        on right: 21 22 146 381 636 637
    expression <ast_expr> (612)
        on left: 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683
        on right: 17 19 95 96 97 103 109 110 111 143 321 352 363 364 365 377 379 380 382 397 398 399 404 432 433 438 446 456 457 458 459 464 465 509 510 535 571 572 573 582 606 607 628 629 630 631 638 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 688 691 694 695
    inc_or_dec_expression (613)
        on left: 684 685 686 687
        on right: 337 389 651
    operator_assignment (614)
        on left: 688
        on right: 388 449 652
    lvalue (615)
        on left: 689
        on right: 129 130 131 446 447 448 458 459 461 463 464 684 685 686 687 688
    cond_predicate (616)
        on left: 690
        on right: 400 401 402
    expression_or_cond_pattern (617)
        on left: 691
        on right: 690
    value_range_list (618)
        on left: 692 693
        on right: 682 692
    value_range (619)
        on left: 694 695
        on right: 692 693
    time_unit <ast_time_unit> (620)
        on left: 696 697 698 699 700 701
        on right: 565 566
    lifetime <ast_lifetime> (621)
        on left: 702 703
        on right: 530 550
    identifier <ast_identifier> (622)
        on left: 704 705
        on right: 10 11 17 18 19 20 21 22 65 105 106 107 109 110 111 112 113 114 115 140 146 147 157 158 166 181 182 187 188 217 218 222 228 229 249 260 317 319 376 383 397 398 399 455 478 506 507 511 512 535 536 537 538 539 540 541 542 548 555 556 557 558 593 612 619 620 621 622 624 626 627 636 637 683


State 0

    0 $accept: • source_text $end

    $default  reduce using rule 3 (description_list)

    source_text       go to state 1
    description_list  go to state 2


State 1

    0 $accept: source_text • $end

    $end  shift, and go to state 3


State 2

    1 source_text: description_list •
    2 description_list: description_list • description

    EXTERN  shift, and go to state 4

    $end      reduce using rule 1 (source_text)
    $default  reduce using rule 553 (attribute_instance_list)

    description              go to state 5
    module_declaration       go to state 6
    module_nonansi_header    go to state 7
    module_ansi_header       go to state 8
    package_declaration      go to state 9
    attribute_instance_list  go to state 10


State 3

    0 $accept: source_text $end •

    $default  accept


State 4

    8 module_declaration: EXTERN • module_nonansi_header
    9                   | EXTERN • module_ansi_header

    $default  reduce using rule 553 (attribute_instance_list)

    module_nonansi_header    go to state 11
    module_ansi_header       go to state 12
    attribute_instance_list  go to state 13


State 5

    2 description_list: description_list description •

    $default  reduce using rule 2 (description_list)


State 6

    5 description: module_declaration •

    $default  reduce using rule 5 (description)


State 7

    6 module_declaration: module_nonansi_header • module_item_list ENDMODULE block_end_identifier_optional

    $default  reduce using rule 45 (module_item_list)

    module_item_list  go to state 14


State 8

    7 module_declaration: module_ansi_header • non_port_module_item_list ENDMODULE block_end_identifier_optional

    $default  reduce using rule 47 (non_port_module_item_list)

    non_port_module_item_list  go to state 15


State 9

    4 description: package_declaration •

    $default  reduce using rule 4 (description)


State 10

   10 module_nonansi_header: attribute_instance_list • module_keyword lifetime_optional identifier package_import_declaration_list parameter_port_list_optional list_of_ports ';'
   11 module_ansi_header: attribute_instance_list • module_keyword lifetime_optional identifier package_import_declaration_list parameter_port_list_optional port_declaration_list ';'
  249 package_declaration: attribute_instance_list • PACKAGE lifetime_optional identifier ';' timeunits_declaration_optional package_item_list_optional ENDPACKAGE block_end_identifier_optional
  552 attribute_instance_list: attribute_instance_list • attribute_instance

    MODULE       shift, and go to state 16
    MACROMODULE  shift, and go to state 17
    PACKAGE      shift, and go to state 18
    '('          shift, and go to state 19

    module_keyword      go to state 20
    attribute_instance  go to state 21


State 11

    8 module_declaration: EXTERN module_nonansi_header •

    $default  reduce using rule 8 (module_declaration)


State 12

    9 module_declaration: EXTERN module_ansi_header •

    $default  reduce using rule 9 (module_declaration)


State 13

   10 module_nonansi_header: attribute_instance_list • module_keyword lifetime_optional identifier package_import_declaration_list parameter_port_list_optional list_of_ports ';'
   11 module_ansi_header: attribute_instance_list • module_keyword lifetime_optional identifier package_import_declaration_list parameter_port_list_optional port_declaration_list ';'
  552 attribute_instance_list: attribute_instance_list • attribute_instance

    MODULE       shift, and go to state 16
    MACROMODULE  shift, and go to state 17
    '('          shift, and go to state 19

    module_keyword      go to state 20
    attribute_instance  go to state 21


State 14

    6 module_declaration: module_nonansi_header module_item_list • ENDMODULE block_end_identifier_optional
   44 module_item_list: module_item_list • module_item

    ENDMODULE           shift, and go to state 22
    EXTERN              shift, and go to state 4
    VIRTUAL             shift, and go to state 23
    RAND                shift, and go to state 24
    DEFPARAM            shift, and go to state 25
    IMPORT              shift, and go to state 26
    DEFAULT             shift, and go to state 27
    CONST               shift, and go to state 28
    FUNCTION            shift, and go to state 29
    STATIC              shift, and go to state 30
    PROTECTED           shift, and go to state 31
    LOCAL               shift, and go to state 32
    RANDC               shift, and go to state 33
    IF                  shift, and go to state 34
    LOCALPARAM          shift, and go to state 35
    PARAMETER           shift, and go to state 36
    VAR                 shift, and go to state 37
    TYPEDEF             shift, and go to state 38
    AUTOMATIC           shift, and go to state 39
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    TASK                shift, and go to state 55
    CASE                shift, and go to state 56
    ALIAS               shift, and go to state 57
    FINAL               shift, and go to state 58
    TIMEUNIT            shift, and go to state 59
    ASSIGN              shift, and go to state 60
    ALWAYS              shift, and go to state 61
    BIND                shift, and go to state 62
    _INITIAL            shift, and go to state 63
    ALWAYS_LATCH        shift, and go to state 64
    ALWAYS_FF           shift, and go to state 65
    TIMEPRECISION       shift, and go to state 66
    SPECIFY             shift, and go to state 67
    ALWAYS_COMB         shift, and go to state 68
    GENERATE            shift, and go to state 69
    FOR                 shift, and go to state 70
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    ';'                 shift, and go to state 75
    '$'                 shift, and go to state 76

    CLASS     reduce using rule 262 (virtual_optional)
    $default  reduce using rule 553 (attribute_instance_list)

    module_declaration                    go to state 77
    module_nonansi_header                 go to state 7
    module_ansi_header                    go to state 8
    module_item                           go to state 78
    non_port_module_item                  go to state 79
    specify_block                         go to state 80
    generate_region                       go to state 81
    module_or_generate_item               go to state 82
    module_common_item                    go to state 83
    if_generate_construct                 go to state 84
    case_generate_construct               go to state 85
    loop_generate_construct               go to state 86
    net_alias                             go to state 87
    continuous_assign                     go to state 88
    bind_directive                        go to state 89
    generic_instantiation                 go to state 90
    always_keyword                        go to state 91
    module_or_generate_item_declaration   go to state 92
    parameter_override                    go to state 93
    port_declaration                      go to state 94
    data_type                             go to state 95
    data_type_no_identifier               go to state 96
    virtual_interface_type                go to state 97
    integer_vector_type                   go to state 98
    package_or_generate_item_declaration  go to state 99
    class_declaration                     go to state 100
    virtual_optional                      go to state 101
    function_declaration                  go to state 102
    task_declaration                      go to state 103
    local_parameter_declaration           go to state 104
    parameter_declaration                 go to state 105
    data_declaration                      go to state 106
    method_variable_qualifier_list        go to state 107
    variable_qualifier_list               go to state 108
    variable_qualifier                    go to state 109
    method_variable_qualifier             go to state 110
    type_declaration                      go to state 111
    package_import_declaration            go to state 112
    attribute_instance_list               go to state 113
    timeunits_declaration                 go to state 114
    integer_atom_type                     go to state 115
    non_integer_type                      go to state 116
    ps_identifier                         go to state 117
    hierarchical_identifier               go to state 118
    lifetime                              go to state 119
    identifier                            go to state 120


State 15

    7 module_declaration: module_ansi_header non_port_module_item_list • ENDMODULE block_end_identifier_optional
   46 non_port_module_item_list: non_port_module_item_list • non_port_module_item

    ENDMODULE           shift, and go to state 121
    EXTERN              shift, and go to state 4
    VIRTUAL             shift, and go to state 23
    RAND                shift, and go to state 24
    DEFPARAM            shift, and go to state 25
    IMPORT              shift, and go to state 26
    DEFAULT             shift, and go to state 27
    CONST               shift, and go to state 28
    FUNCTION            shift, and go to state 29
    STATIC              shift, and go to state 30
    PROTECTED           shift, and go to state 31
    LOCAL               shift, and go to state 32
    RANDC               shift, and go to state 33
    IF                  shift, and go to state 34
    LOCALPARAM          shift, and go to state 35
    PARAMETER           shift, and go to state 36
    VAR                 shift, and go to state 37
    TYPEDEF             shift, and go to state 38
    AUTOMATIC           shift, and go to state 39
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    TASK                shift, and go to state 55
    CASE                shift, and go to state 56
    ALIAS               shift, and go to state 57
    FINAL               shift, and go to state 58
    TIMEUNIT            shift, and go to state 59
    ASSIGN              shift, and go to state 60
    ALWAYS              shift, and go to state 61
    BIND                shift, and go to state 62
    _INITIAL            shift, and go to state 63
    ALWAYS_LATCH        shift, and go to state 64
    ALWAYS_FF           shift, and go to state 65
    TIMEPRECISION       shift, and go to state 66
    SPECIFY             shift, and go to state 67
    ALWAYS_COMB         shift, and go to state 68
    GENERATE            shift, and go to state 69
    FOR                 shift, and go to state 70
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    ';'                 shift, and go to state 75
    '$'                 shift, and go to state 76

    CLASS     reduce using rule 262 (virtual_optional)
    $default  reduce using rule 553 (attribute_instance_list)

    module_declaration                    go to state 77
    module_nonansi_header                 go to state 7
    module_ansi_header                    go to state 8
    non_port_module_item                  go to state 122
    specify_block                         go to state 80
    generate_region                       go to state 81
    module_or_generate_item               go to state 82
    module_common_item                    go to state 83
    if_generate_construct                 go to state 84
    case_generate_construct               go to state 85
    loop_generate_construct               go to state 86
    net_alias                             go to state 87
    continuous_assign                     go to state 88
    bind_directive                        go to state 89
    generic_instantiation                 go to state 90
    always_keyword                        go to state 91
    module_or_generate_item_declaration   go to state 92
    parameter_override                    go to state 93
    data_type                             go to state 95
    data_type_no_identifier               go to state 96
    virtual_interface_type                go to state 97
    integer_vector_type                   go to state 98
    package_or_generate_item_declaration  go to state 99
    class_declaration                     go to state 100
    virtual_optional                      go to state 101
    function_declaration                  go to state 102
    task_declaration                      go to state 103
    local_parameter_declaration           go to state 104
    parameter_declaration                 go to state 105
    data_declaration                      go to state 106
    method_variable_qualifier_list        go to state 107
    variable_qualifier_list               go to state 108
    variable_qualifier                    go to state 109
    method_variable_qualifier             go to state 110
    type_declaration                      go to state 111
    package_import_declaration            go to state 112
    attribute_instance_list               go to state 123
    timeunits_declaration                 go to state 114
    integer_atom_type                     go to state 115
    non_integer_type                      go to state 116
    ps_identifier                         go to state 117
    hierarchical_identifier               go to state 118
    lifetime                              go to state 119
    identifier                            go to state 120


State 16

   42 module_keyword: MODULE •

    $default  reduce using rule 42 (module_keyword)


State 17

   43 module_keyword: MACROMODULE •

    $default  reduce using rule 43 (module_keyword)


State 18

  249 package_declaration: attribute_instance_list PACKAGE • lifetime_optional identifier ';' timeunits_declaration_optional package_item_list_optional ENDPACKAGE block_end_identifier_optional

    STATIC     shift, and go to state 30
    AUTOMATIC  shift, and go to state 39

    $default  reduce using rule 551 (lifetime_optional)

    lifetime_optional  go to state 124
    lifetime           go to state 125


State 19

  554 attribute_instance: '(' • TOK_MUL attr_spec_list TOK_MUL ')'

    TOK_MUL  shift, and go to state 126


State 20

   10 module_nonansi_header: attribute_instance_list module_keyword • lifetime_optional identifier package_import_declaration_list parameter_port_list_optional list_of_ports ';'
   11 module_ansi_header: attribute_instance_list module_keyword • lifetime_optional identifier package_import_declaration_list parameter_port_list_optional port_declaration_list ';'

    STATIC     shift, and go to state 30
    AUTOMATIC  shift, and go to state 39

    $default  reduce using rule 551 (lifetime_optional)

    lifetime_optional  go to state 127
    lifetime           go to state 125


State 21

  552 attribute_instance_list: attribute_instance_list attribute_instance •

    $default  reduce using rule 552 (attribute_instance_list)


State 22

    6 module_declaration: module_nonansi_header module_item_list ENDMODULE • block_end_identifier_optional

    ':'  shift, and go to state 128

    $default  reduce using rule 549 (block_end_identifier_optional)

    block_end_identifier_optional  go to state 129


State 23

  234 virtual_interface_type: VIRTUAL •
  261 virtual_optional: VIRTUAL •

    CLASS     reduce using rule 261 (virtual_optional)
    $default  reduce using rule 234 (virtual_interface_type)


State 24

  526 variable_qualifier: RAND •

    $default  reduce using rule 526 (variable_qualifier)


State 25

  167 parameter_override: DEFPARAM • defparam_assignment_list ';'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    defparam_assignment_list  go to state 130
    defparam_assignment       go to state 131
    hierarchical_identifier   go to state 132
    identifier                go to state 133


State 26

  543 package_import_declaration: IMPORT • package_import_item_list ';'

    ps_identifier_tok  shift, and go to state 134
    '$'                shift, and go to state 76

    package_import_item_list  go to state 135
    package_import_item       go to state 136
    ps_identifier             go to state 137


State 27

  166 module_or_generate_item_declaration: DEFAULT • CLOCKING identifier ';'

    CLOCKING  shift, and go to state 138


State 28

  524 variable_qualifier: CONST •

    $default  reduce using rule 524 (variable_qualifier)


State 29

  298 function_declaration: FUNCTION • lifetime_optional function_body_declaration

    STATIC     shift, and go to state 30
    AUTOMATIC  shift, and go to state 39

    $default  reduce using rule 551 (lifetime_optional)

    lifetime_optional  go to state 139
    lifetime           go to state 125


State 30

  702 lifetime: STATIC •

    $default  reduce using rule 702 (lifetime)


State 31

  531 method_variable_qualifier: PROTECTED •

    $default  reduce using rule 531 (method_variable_qualifier)


State 32

  532 method_variable_qualifier: LOCAL •

    $default  reduce using rule 532 (method_variable_qualifier)


State 33

  527 variable_qualifier: RANDC •

    $default  reduce using rule 527 (variable_qualifier)


State 34

   95 if_generate_construct: IF • '(' expression ')' generate_block ELSE generate_block
   96                      | IF • '(' expression ')' generate_block

    '('  shift, and go to state 140


State 35

  496 local_parameter_declaration: LOCALPARAM • data_type param_assignment_list
  497                            | LOCALPARAM • param_assignment_list
  498                            | LOCALPARAM • TYPE type_assignment_list

    VIRTUAL             shift, and go to state 141
    TYPE                shift, and go to state 142
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    '$'                 shift, and go to state 76

    data_type                go to state 143
    data_type_no_identifier  go to state 96
    virtual_interface_type   go to state 97
    integer_vector_type      go to state 98
    param_assignment_list    go to state 144
    param_assignment         go to state 145
    integer_atom_type        go to state 115
    non_integer_type         go to state 116
    ps_identifier            go to state 117
    hierarchical_identifier  go to state 118
    identifier               go to state 146


State 36

  499 parameter_declaration: PARAMETER • data_type param_assignment_list
  500                      | PARAMETER • param_assignment_list
  501                      | PARAMETER • TYPE type_assignment_list

    VIRTUAL             shift, and go to state 141
    TYPE                shift, and go to state 147
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    '$'                 shift, and go to state 76

    data_type                go to state 148
    data_type_no_identifier  go to state 96
    virtual_interface_type   go to state 97
    integer_vector_type      go to state 98
    param_assignment_list    go to state 149
    param_assignment         go to state 145
    integer_atom_type        go to state 115
    non_integer_type         go to state 116
    ps_identifier            go to state 117
    hierarchical_identifier  go to state 118
    identifier               go to state 146


State 37

  525 variable_qualifier: VAR •

    $default  reduce using rule 525 (variable_qualifier)


State 38

  537 type_declaration: TYPEDEF • data_type identifier ';'
  538                 | TYPEDEF • ENUM identifier ';'
  539                 | TYPEDEF • STRUCT identifier ';'
  540                 | TYPEDEF • UNION identifier ';'
  541                 | TYPEDEF • CLASS identifier ';'
  542                 | TYPEDEF • INTERFACE CLASS identifier ';'

    INTERFACE           shift, and go to state 150
    VIRTUAL             shift, and go to state 141
    CLASS               shift, and go to state 151
    ENUM                shift, and go to state 152
    STRUCT              shift, and go to state 153
    UNION               shift, and go to state 154
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    '$'                 shift, and go to state 76

    data_type                go to state 155
    data_type_no_identifier  go to state 96
    virtual_interface_type   go to state 97
    integer_vector_type      go to state 98
    integer_atom_type        go to state 115
    non_integer_type         go to state 116
    ps_identifier            go to state 117
    hierarchical_identifier  go to state 118
    identifier               go to state 120


State 39

  703 lifetime: AUTOMATIC •

    $default  reduce using rule 703 (lifetime)


State 40

  226 data_type_no_identifier: STRING •

    $default  reduce using rule 226 (data_type_no_identifier)


State 41

  227 data_type_no_identifier: CHANDLE •

    $default  reduce using rule 227 (data_type_no_identifier)


State 42

  230 data_type_no_identifier: EVENT •

    $default  reduce using rule 230 (data_type_no_identifier)


State 43

  597 integer_atom_type: BYTE •

    $default  reduce using rule 597 (integer_atom_type)


State 44

  598 integer_atom_type: SHORTINT •

    $default  reduce using rule 598 (integer_atom_type)


State 45

  599 integer_atom_type: INT •

    $default  reduce using rule 599 (integer_atom_type)


State 46

  600 integer_atom_type: LONGINT •

    $default  reduce using rule 600 (integer_atom_type)


State 47

  601 integer_atom_type: INTEGER •

    $default  reduce using rule 601 (integer_atom_type)


State 48

  602 integer_atom_type: TIME •

    $default  reduce using rule 602 (integer_atom_type)


State 49

  246 integer_vector_type: BIT •

    $default  reduce using rule 246 (integer_vector_type)


State 50

  247 integer_vector_type: LOGIC •

    $default  reduce using rule 247 (integer_vector_type)


State 51

  248 integer_vector_type: REG •

    $default  reduce using rule 248 (integer_vector_type)


State 52

  603 non_integer_type: SHORTREAL •

    $default  reduce using rule 603 (non_integer_type)


State 53

  604 non_integer_type: REAL •

    $default  reduce using rule 604 (non_integer_type)


State 54

  605 non_integer_type: REALTIME •

    $default  reduce using rule 605 (non_integer_type)


State 55

  309 task_declaration: TASK • lifetime_optional task_body_declaration

    STATIC     shift, and go to state 30
    AUTOMATIC  shift, and go to state 39

    $default  reduce using rule 551 (lifetime_optional)

    lifetime_optional  go to state 156
    lifetime           go to state 125


State 56

   97 case_generate_construct: CASE • '(' expression ')' case_generate_item_list ENDCASE

    '('  shift, and go to state 157


State 57

  129 net_alias: ALIAS • lvalue '=' lvalue lvalue_list ';'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    hierarchical_identifier  go to state 158
    lvalue                   go to state 159
    identifier               go to state 133


State 58

   90 module_common_item: FINAL • statement

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 160
    attribute_instance_list  go to state 161


State 59

  561 timeunits_declaration: TIMEUNIT • time_literal TOK_DIV time_literal ';'
  563                      | TIMEUNIT • time_literal ';' TIMEPRECISION time_literal ';'

    unsigned_number     shift, and go to state 162
    fixed_point_number  shift, and go to state 163

    time_literal  go to state 164


State 60

  132 continuous_assign: ASSIGN • variable_assignment_list ';'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    variable_assignment_list  go to state 165
    variable_assignment       go to state 166
    hierarchical_identifier   go to state 158
    lvalue                    go to state 167
    identifier                go to state 133


State 61

  161 always_keyword: ALWAYS •

    $default  reduce using rule 161 (always_keyword)


State 62

  133 bind_directive: BIND • hierarchical_identifier generic_instantiation ';'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    hierarchical_identifier  go to state 168
    identifier               go to state 133


State 63

   89 module_common_item: _INITIAL • statement

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 169
    attribute_instance_list  go to state 161


State 64

  163 always_keyword: ALWAYS_LATCH •

    $default  reduce using rule 163 (always_keyword)


State 65

  164 always_keyword: ALWAYS_FF •

    $default  reduce using rule 164 (always_keyword)


State 66

  562 timeunits_declaration: TIMEPRECISION • time_literal ';'
  564                      | TIMEPRECISION • time_literal ';' TIMEUNIT time_literal ';'

    unsigned_number     shift, and go to state 162
    fixed_point_number  shift, and go to state 163

    time_literal  go to state 170


State 67

   56 specify_block: SPECIFY • specify_item_list ENDSPECIFY

    $default  reduce using rule 58 (specify_item_list)

    specify_item_list  go to state 171


State 68

  162 always_keyword: ALWAYS_COMB •

    $default  reduce using rule 162 (always_keyword)


State 69

   78 generate_region: GENERATE • generate_item_list ENDGENERATE

    $default  reduce using rule 80 (generate_item_list)

    generate_item_list  go to state 172


State 70

  103 loop_generate_construct: FOR • '(' genvar_initialization ';' expression ';' genvar_iteration ')' generate_block

    '('  shift, and go to state 173


State 71

  705 identifier: escaped_identifier •

    $default  reduce using rule 705 (identifier)


State 72

  704 identifier: simple_identifier •

    $default  reduce using rule 704 (identifier)


State 73

  621 ps_identifier: ps_identifier_tok • identifier

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 174


State 74

  233 virtual_interface_type: VIRTUAL_INTERFACE •

    $default  reduce using rule 233 (virtual_interface_type)


State 75

  259 package_or_generate_item_declaration: ';' •

    $default  reduce using rule 259 (package_or_generate_item_declaration)


State 76

  622 ps_identifier: '$' • UNIT SCOPE identifier

    UNIT  shift, and go to state 175


State 77

   54 non_port_module_item: module_declaration •

    $default  reduce using rule 54 (non_port_module_item)


State 78

   44 module_item_list: module_item_list module_item •

    $default  reduce using rule 44 (module_item_list)


State 79

   49 module_item: non_port_module_item •

    $default  reduce using rule 49 (module_item)


State 80

   52 non_port_module_item: specify_block •

    $default  reduce using rule 52 (non_port_module_item)


State 81

   50 non_port_module_item: generate_region •

    $default  reduce using rule 50 (non_port_module_item)


State 82

   51 non_port_module_item: module_or_generate_item •

    $default  reduce using rule 51 (non_port_module_item)


State 83

   83 module_or_generate_item: module_common_item •

    $default  reduce using rule 83 (module_or_generate_item)


State 84

   93 module_common_item: if_generate_construct •

    $default  reduce using rule 93 (module_common_item)


State 85

   94 module_common_item: case_generate_construct •

    $default  reduce using rule 94 (module_common_item)


State 86

   92 module_common_item: loop_generate_construct •

    $default  reduce using rule 92 (module_common_item)


State 87

   88 module_common_item: net_alias •

    $default  reduce using rule 88 (module_common_item)


State 88

   87 module_common_item: continuous_assign •

    $default  reduce using rule 87 (module_common_item)


State 89

   86 module_common_item: bind_directive •

    $default  reduce using rule 86 (module_common_item)


State 90

   85 module_common_item: generic_instantiation •

    $default  reduce using rule 85 (module_common_item)


State 91

   91 module_common_item: always_keyword • statement

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 176
    attribute_instance_list  go to state 161


State 92

   84 module_common_item: module_or_generate_item_declaration •

    $default  reduce using rule 84 (module_common_item)


State 93

   82 module_or_generate_item: parameter_override •

    $default  reduce using rule 82 (module_or_generate_item)


State 94

   48 module_item: port_declaration • ';'

    ';'  shift, and go to state 177


State 95

  134 generic_instantiation: data_type • hierarchical_instance_list ';'
  517 data_declaration: data_type • variable_decl_assignment_list ';'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    hierarchical_instance_list     go to state 178
    hierarchical_instance          go to state 179
    name_of_instance               go to state 180
    variable_decl_assignment_list  go to state 181
    variable_decl_assignment       go to state 182
    identifier                     go to state 183


State 96

  219 data_type: data_type_no_identifier •

    $default  reduce using rule 219 (data_type)


State 97

  228 data_type_no_identifier: virtual_interface_type • identifier parameter_value_assignment_optional '.' identifier
  229                        | virtual_interface_type • identifier parameter_value_assignment_optional

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 184


State 98

  223 data_type_no_identifier: integer_vector_type • signing_optional packed_dimension_list_optional

    UNSIGNED  shift, and go to state 185
    SIGNED    shift, and go to state 186

    $default  reduce using rule 236 (signing_optional)

    signing_optional  go to state 187
    signing           go to state 188


State 99

  165 module_or_generate_item_declaration: package_or_generate_item_declaration •

    $default  reduce using rule 165 (module_or_generate_item_declaration)


State 100

  256 package_or_generate_item_declaration: class_declaration •

    $default  reduce using rule 256 (package_or_generate_item_declaration)


State 101

  260 class_declaration: virtual_optional • CLASS lifetime_optional identifier parameter_port_list_optional extends_class_optional implements_interface_optional ';' class_item_list ENDCLASS block_end_identifier_optional

    CLASS  shift, and go to state 189


State 102

  255 package_or_generate_item_declaration: function_declaration •

    $default  reduce using rule 255 (package_or_generate_item_declaration)


State 103

  254 package_or_generate_item_declaration: task_declaration •

    $default  reduce using rule 254 (package_or_generate_item_declaration)


State 104

  257 package_or_generate_item_declaration: local_parameter_declaration • ';'

    ';'  shift, and go to state 190


State 105

  258 package_or_generate_item_declaration: parameter_declaration • ';'

    ';'  shift, and go to state 191


State 106

  253 package_or_generate_item_declaration: data_declaration •

    $default  reduce using rule 253 (package_or_generate_item_declaration)


State 107

  515 data_declaration: method_variable_qualifier_list • data_type variable_decl_assignment_list ';'
  516                 | method_variable_qualifier_list • variable_decl_assignment_list ';'
  520 method_variable_qualifier_list: method_variable_qualifier_list • method_variable_qualifier

    VIRTUAL             shift, and go to state 141
    STATIC              shift, and go to state 30
    PROTECTED           shift, and go to state 31
    LOCAL               shift, and go to state 32
    AUTOMATIC           shift, and go to state 39
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    '$'                 shift, and go to state 76

    data_type                      go to state 192
    data_type_no_identifier        go to state 96
    virtual_interface_type         go to state 97
    integer_vector_type            go to state 98
    method_variable_qualifier      go to state 193
    variable_decl_assignment_list  go to state 194
    variable_decl_assignment       go to state 182
    integer_atom_type              go to state 115
    non_integer_type               go to state 116
    ps_identifier                  go to state 117
    hierarchical_identifier        go to state 118
    lifetime                       go to state 119
    identifier                     go to state 195


State 108

  513 data_declaration: variable_qualifier_list • data_type variable_decl_assignment_list ';'
  514                 | variable_qualifier_list • variable_decl_assignment_list ';'
  522 variable_qualifier_list: variable_qualifier_list • variable_qualifier

    VIRTUAL             shift, and go to state 141
    RAND                shift, and go to state 24
    CONST               shift, and go to state 28
    RANDC               shift, and go to state 33
    VAR                 shift, and go to state 37
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    '$'                 shift, and go to state 76

    data_type                      go to state 196
    data_type_no_identifier        go to state 96
    virtual_interface_type         go to state 97
    integer_vector_type            go to state 98
    variable_qualifier             go to state 197
    variable_decl_assignment_list  go to state 198
    variable_decl_assignment       go to state 182
    integer_atom_type              go to state 115
    non_integer_type               go to state 116
    ps_identifier                  go to state 117
    hierarchical_identifier        go to state 118
    identifier                     go to state 195


State 109

  523 variable_qualifier_list: variable_qualifier •

    $default  reduce using rule 523 (variable_qualifier_list)


State 110

  521 method_variable_qualifier_list: method_variable_qualifier •

    $default  reduce using rule 521 (method_variable_qualifier_list)


State 111

  518 data_declaration: type_declaration •

    $default  reduce using rule 518 (data_declaration)


State 112

  519 data_declaration: package_import_declaration •

    $default  reduce using rule 519 (data_declaration)


State 113

   10 module_nonansi_header: attribute_instance_list • module_keyword lifetime_optional identifier package_import_declaration_list parameter_port_list_optional list_of_ports ';'
   11 module_ansi_header: attribute_instance_list • module_keyword lifetime_optional identifier package_import_declaration_list parameter_port_list_optional port_declaration_list ';'
   53 non_port_module_item: attribute_instance_list • specparam_declaration
  171 port_declaration: attribute_instance_list • inout_declaration
  172                 | attribute_instance_list • input_declaration
  173                 | attribute_instance_list • output_declaration
  174                 | attribute_instance_list • ref_declaration
  552 attribute_instance_list: attribute_instance_list • attribute_instance

    MODULE       shift, and go to state 16
    MACROMODULE  shift, and go to state 17
    INPUT        shift, and go to state 199
    OUTPUT       shift, and go to state 200
    INOUT        shift, and go to state 201
    REF          shift, and go to state 202
    SPECPARAM    shift, and go to state 203
    '('          shift, and go to state 19

    module_keyword         go to state 20
    specparam_declaration  go to state 204
    inout_declaration      go to state 205
    input_declaration      go to state 206
    output_declaration     go to state 207
    ref_declaration        go to state 208
    attribute_instance     go to state 21


State 114

   55 non_port_module_item: timeunits_declaration •

    $default  reduce using rule 55 (non_port_module_item)


State 115

  224 data_type_no_identifier: integer_atom_type • signing_optional

    UNSIGNED  shift, and go to state 185
    SIGNED    shift, and go to state 186

    $default  reduce using rule 236 (signing_optional)

    signing_optional  go to state 209
    signing           go to state 188


State 116

  225 data_type_no_identifier: non_integer_type •

    $default  reduce using rule 225 (data_type_no_identifier)


State 117

  221 data_type: ps_identifier • packed_dimension_list_optional

    '['  shift, and go to state 210

    $default  reduce using rule 238 (packed_dimension_list_optional)

    packed_dimension_list_optional  go to state 211
    packed_dimension_list           go to state 212
    packed_dimension                go to state 213


State 118

  220 data_type: hierarchical_identifier •
  626 hierarchical_identifier: hierarchical_identifier • '.' identifier unpacked_dimension_list_optional

    '.'  shift, and go to state 214

    $default  reduce using rule 220 (data_type)


State 119

  530 method_variable_qualifier: lifetime •

    $default  reduce using rule 530 (method_variable_qualifier)


State 120

  222 data_type: identifier • parameter_value_assignment
  627 hierarchical_identifier: identifier • unpacked_dimension_list_optional

    '['  shift, and go to state 215
    '#'  shift, and go to state 216

    $default  reduce using rule 184 (unpacked_dimension_list_optional)

    parameter_value_assignment        go to state 217
    unpacked_dimension_list_optional  go to state 218
    unpacked_dimension_list           go to state 219
    unpacked_dimension                go to state 220


State 121

    7 module_declaration: module_ansi_header non_port_module_item_list ENDMODULE • block_end_identifier_optional

    ':'  shift, and go to state 128

    $default  reduce using rule 549 (block_end_identifier_optional)

    block_end_identifier_optional  go to state 221


State 122

   46 non_port_module_item_list: non_port_module_item_list non_port_module_item •

    $default  reduce using rule 46 (non_port_module_item_list)


State 123

   10 module_nonansi_header: attribute_instance_list • module_keyword lifetime_optional identifier package_import_declaration_list parameter_port_list_optional list_of_ports ';'
   11 module_ansi_header: attribute_instance_list • module_keyword lifetime_optional identifier package_import_declaration_list parameter_port_list_optional port_declaration_list ';'
   53 non_port_module_item: attribute_instance_list • specparam_declaration
  552 attribute_instance_list: attribute_instance_list • attribute_instance

    MODULE       shift, and go to state 16
    MACROMODULE  shift, and go to state 17
    SPECPARAM    shift, and go to state 203
    '('          shift, and go to state 19

    module_keyword         go to state 20
    specparam_declaration  go to state 204
    attribute_instance     go to state 21


State 124

  249 package_declaration: attribute_instance_list PACKAGE lifetime_optional • identifier ';' timeunits_declaration_optional package_item_list_optional ENDPACKAGE block_end_identifier_optional

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 222


State 125

  550 lifetime_optional: lifetime •

    $default  reduce using rule 550 (lifetime_optional)


State 126

  554 attribute_instance: '(' TOK_MUL • attr_spec_list TOK_MUL ')'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    attr_spec_list  go to state 223
    identifier      go to state 224


State 127

   10 module_nonansi_header: attribute_instance_list module_keyword lifetime_optional • identifier package_import_declaration_list parameter_port_list_optional list_of_ports ';'
   11 module_ansi_header: attribute_instance_list module_keyword lifetime_optional • identifier package_import_declaration_list parameter_port_list_optional port_declaration_list ';'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 225


State 128

  548 block_end_identifier_optional: ':' • identifier

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 226


State 129

    6 module_declaration: module_nonansi_header module_item_list ENDMODULE block_end_identifier_optional •

    $default  reduce using rule 6 (module_declaration)


State 130

  167 parameter_override: DEFPARAM defparam_assignment_list • ';'
  168 defparam_assignment_list: defparam_assignment_list • ',' defparam_assignment

    ','  shift, and go to state 227
    ';'  shift, and go to state 228


State 131

  169 defparam_assignment_list: defparam_assignment •

    $default  reduce using rule 169 (defparam_assignment_list)


State 132

  170 defparam_assignment: hierarchical_identifier • '=' constant_mintypmax_expression
  626 hierarchical_identifier: hierarchical_identifier • '.' identifier unpacked_dimension_list_optional

    '='  shift, and go to state 229
    '.'  shift, and go to state 214


State 133

  627 hierarchical_identifier: identifier • unpacked_dimension_list_optional

    '['  shift, and go to state 215

    $default  reduce using rule 184 (unpacked_dimension_list_optional)

    unpacked_dimension_list_optional  go to state 218
    unpacked_dimension_list           go to state 219
    unpacked_dimension                go to state 220


State 134

  547 package_import_item: ps_identifier_tok • TOK_MUL
  621 ps_identifier: ps_identifier_tok • identifier

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    TOK_MUL             shift, and go to state 230

    identifier  go to state 174


State 135

  543 package_import_declaration: IMPORT package_import_item_list • ';'
  544 package_import_item_list: package_import_item_list • ',' package_import_item

    ','  shift, and go to state 231
    ';'  shift, and go to state 232


State 136

  545 package_import_item_list: package_import_item •

    $default  reduce using rule 545 (package_import_item_list)


State 137

  546 package_import_item: ps_identifier •

    $default  reduce using rule 546 (package_import_item)


State 138

  166 module_or_generate_item_declaration: DEFAULT CLOCKING • identifier ';'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 233


State 139

  298 function_declaration: FUNCTION lifetime_optional • function_body_declaration

    VIRTUAL             shift, and go to state 141
    NEW                 shift, and go to state 234
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    VOID                shift, and go to state 235
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 236
    VIRTUAL_INTERFACE   shift, and go to state 74
    '$'                 shift, and go to state 76

    data_type                  go to state 237
    data_type_no_identifier    go to state 96
    virtual_interface_type     go to state 97
    integer_vector_type        go to state 98
    function_body_declaration  go to state 238
    function_type_name         go to state 239
    function_data_type         go to state 240
    integer_atom_type          go to state 115
    non_integer_type           go to state 116
    ps_identifier              go to state 117
    hierarchical_identifier    go to state 118
    identifier                 go to state 120


State 140

   95 if_generate_construct: IF '(' • expression ')' generate_block ELSE generate_block
   96                      | IF '(' • expression ')' generate_block

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 286
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 141

  234 virtual_interface_type: VIRTUAL •

    $default  reduce using rule 234 (virtual_interface_type)


State 142

  498 local_parameter_declaration: LOCALPARAM TYPE • type_assignment_list

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    type_assignment_list  go to state 290
    type_assignment       go to state 291
    identifier            go to state 292


State 143

  496 local_parameter_declaration: LOCALPARAM data_type • param_assignment_list

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    param_assignment_list  go to state 293
    param_assignment       go to state 145
    identifier             go to state 294


State 144

  497 local_parameter_declaration: LOCALPARAM param_assignment_list •
  502 param_assignment_list: param_assignment_list • ',' param_assignment

    ','  shift, and go to state 295

    $default  reduce using rule 497 (local_parameter_declaration)


State 145

  503 param_assignment_list: param_assignment •

    $default  reduce using rule 503 (param_assignment_list)


State 146

  222 data_type: identifier • parameter_value_assignment
  506 param_assignment: identifier • '=' constant_param_expression
  507                 | identifier •
  627 hierarchical_identifier: identifier • unpacked_dimension_list_optional

    '['  shift, and go to state 215
    '='  shift, and go to state 296
    '#'  shift, and go to state 216

    ','       reduce using rule 507 (param_assignment)
    ';'       reduce using rule 507 (param_assignment)
    ')'       reduce using rule 507 (param_assignment)
    $default  reduce using rule 184 (unpacked_dimension_list_optional)

    parameter_value_assignment        go to state 217
    unpacked_dimension_list_optional  go to state 218
    unpacked_dimension_list           go to state 219
    unpacked_dimension                go to state 220


State 147

  501 parameter_declaration: PARAMETER TYPE • type_assignment_list

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    type_assignment_list  go to state 297
    type_assignment       go to state 291
    identifier            go to state 292


State 148

  499 parameter_declaration: PARAMETER data_type • param_assignment_list

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    param_assignment_list  go to state 298
    param_assignment       go to state 145
    identifier             go to state 294


State 149

  500 parameter_declaration: PARAMETER param_assignment_list •
  502 param_assignment_list: param_assignment_list • ',' param_assignment

    ','  shift, and go to state 295

    $default  reduce using rule 500 (parameter_declaration)


State 150

  542 type_declaration: TYPEDEF INTERFACE • CLASS identifier ';'

    CLASS  shift, and go to state 299


State 151

  541 type_declaration: TYPEDEF CLASS • identifier ';'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 300


State 152

  538 type_declaration: TYPEDEF ENUM • identifier ';'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 301


State 153

  539 type_declaration: TYPEDEF STRUCT • identifier ';'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 302


State 154

  540 type_declaration: TYPEDEF UNION • identifier ';'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 303


State 155

  537 type_declaration: TYPEDEF data_type • identifier ';'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 304


State 156

  309 task_declaration: TASK lifetime_optional • task_body_declaration

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    '$'                 shift, and go to state 76

    task_body_declaration          go to state 305
    ps_identifier                  go to state 306
    ps_or_hierarchical_identifier  go to state 307
    hierarchical_identifier        go to state 308
    identifier                     go to state 309


State 157

   97 case_generate_construct: CASE '(' • expression ')' case_generate_item_list ENDCASE

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 310
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 158

  626 hierarchical_identifier: hierarchical_identifier • '.' identifier unpacked_dimension_list_optional
  689 lvalue: hierarchical_identifier •

    '.'  shift, and go to state 214

    $default  reduce using rule 689 (lvalue)


State 159

  129 net_alias: ALIAS lvalue • '=' lvalue lvalue_list ';'

    '='  shift, and go to state 311


State 160

   90 module_common_item: FINAL statement •

    $default  reduce using rule 90 (module_common_item)


State 161

  330 statement: attribute_instance_list • statement_item
  331          | attribute_instance_list • ';'
  552 attribute_instance_list: attribute_instance_list • attribute_instance

    DISABLE             shift, and go to state 312
    FORK                shift, and go to state 313
    SUPER               shift, and go to state 242
    FOREACH             shift, and go to state 314
    UNIQUE              shift, and go to state 315
    VOID                shift, and go to state 316
    _BEGIN              shift, and go to state 317
    PRIORITY            shift, and go to state 318
    FORCE               shift, and go to state 319
    WHILE               shift, and go to state 320
    FOREVER             shift, and go to state 321
    THIS                shift, and go to state 322
    WAIT                shift, and go to state 323
    DO                  shift, and go to state 324
    WAIT_ORDER          shift, and go to state 325
    ASSIGN              shift, and go to state 326
    RELEASE             shift, and go to state 327
    REPEAT              shift, and go to state 328
    DEASSIGN            shift, and go to state 329
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    FOR                 shift, and go to state 330
    RETURN              shift, and go to state 331
    UNIQUE0             shift, and go to state 332
    CONTINUE            shift, and go to state 333
    BREAK               shift, and go to state 334
    SUPER_NEW           shift, and go to state 335
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    TOK_DLY             shift, and go to state 336
    TOK_IMP             shift, and go to state 337
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    ';'                 shift, and go to state 338
    '('                 shift, and go to state 19
    '#'                 shift, and go to state 339
    '$'                 shift, and go to state 76
    '@'                 shift, and go to state 340

    $default  reduce using rule 410 (unique_priority_optional)

    statement_item                       go to state 341
    procedural_timing_control_statement  go to state 342
    delay_control                        go to state 343
    event_control                        go to state 344
    procedural_timing_control            go to state 345
    cycle_delay                          go to state 346
    loop_statement                       go to state 347
    conditional_statement                go to state 348
    case_statement                       go to state 349
    subroutine_call_statement            go to state 350
    unique_priority_optional             go to state 351
    seq_block                            go to state 352
    par_block                            go to state 353
    event_trigger                        go to state 354
    disable_statement                    go to state 355
    wait_statement                       go to state 356
    blocking_assignment                  go to state 357
    nonblocking_assignment               go to state 358
    procedural_continuous_assignment     go to state 359
    jump_statement                       go to state 360
    attribute_instance                   go to state 21
    subroutine_call                      go to state 361
    tf_call                              go to state 280
    implicit_class_handle                go to state 281
    randomize_call                       go to state 282
    ps_identifier                        go to state 306
    ps_or_hierarchical_identifier        go to state 284
    hierarchical_identifier              go to state 362
    inc_or_dec_expression                go to state 363
    operator_assignment                  go to state 364
    lvalue                               go to state 365
    identifier                           go to state 309


State 162

  565 time_literal: unsigned_number • time_unit

    PS  shift, and go to state 366
    US  shift, and go to state 367
    S   shift, and go to state 368
    NS  shift, and go to state 369
    MS  shift, and go to state 370
    FS  shift, and go to state 371

    time_unit  go to state 372


State 163

  566 time_literal: fixed_point_number • time_unit

    PS  shift, and go to state 366
    US  shift, and go to state 367
    S   shift, and go to state 368
    NS  shift, and go to state 369
    MS  shift, and go to state 370
    FS  shift, and go to state 371

    time_unit  go to state 373


State 164

  561 timeunits_declaration: TIMEUNIT time_literal • TOK_DIV time_literal ';'
  563                      | TIMEUNIT time_literal • ';' TIMEPRECISION time_literal ';'

    TOK_DIV  shift, and go to state 374
    ';'      shift, and go to state 375


State 165

  132 continuous_assign: ASSIGN variable_assignment_list • ';'
  394 variable_assignment_list: variable_assignment_list • ',' variable_assignment

    ','  shift, and go to state 376
    ';'  shift, and go to state 377


State 166

  395 variable_assignment_list: variable_assignment •

    $default  reduce using rule 395 (variable_assignment_list)


State 167

  464 variable_assignment: lvalue • '=' expression

    '='  shift, and go to state 378


State 168

  133 bind_directive: BIND hierarchical_identifier • generic_instantiation ';'
  626 hierarchical_identifier: hierarchical_identifier • '.' identifier unpacked_dimension_list_optional

    VIRTUAL             shift, and go to state 141
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    '.'                 shift, and go to state 214
    '$'                 shift, and go to state 76

    generic_instantiation    go to state 379
    data_type                go to state 380
    data_type_no_identifier  go to state 96
    virtual_interface_type   go to state 97
    integer_vector_type      go to state 98
    integer_atom_type        go to state 115
    non_integer_type         go to state 116
    ps_identifier            go to state 117
    hierarchical_identifier  go to state 118
    identifier               go to state 120


State 169

   89 module_common_item: _INITIAL statement •

    $default  reduce using rule 89 (module_common_item)


State 170

  562 timeunits_declaration: TIMEPRECISION time_literal • ';'
  564                      | TIMEPRECISION time_literal • ';' TIMEUNIT time_literal ';'

    ';'  shift, and go to state 381


State 171

   56 specify_block: SPECIFY specify_item_list • ENDSPECIFY
   57 specify_item_list: specify_item_list • specify_item

    SPECPARAM            shift, and go to state 203
    NOSHOWCANCELLED      shift, and go to state 382
    SHOWCANCELLED        shift, and go to state 383
    PULSESTYLE_ONDETECT  shift, and go to state 384
    PULSESTYLE_ONEVENT   shift, and go to state 385
    ENDSPECIFY           shift, and go to state 386

    specify_item               go to state 387
    specparam_declaration      go to state 388
    pulsestyle_declaration     go to state 389
    showcancelled_declaration  go to state 390


State 172

   78 generate_region: GENERATE generate_item_list • ENDGENERATE
   79 generate_item_list: generate_item_list • generate_item

    VIRTUAL             shift, and go to state 23
    RAND                shift, and go to state 24
    DEFPARAM            shift, and go to state 25
    IMPORT              shift, and go to state 26
    DEFAULT             shift, and go to state 27
    CONST               shift, and go to state 28
    FUNCTION            shift, and go to state 29
    STATIC              shift, and go to state 30
    PROTECTED           shift, and go to state 31
    LOCAL               shift, and go to state 32
    RANDC               shift, and go to state 33
    IF                  shift, and go to state 34
    LOCALPARAM          shift, and go to state 35
    PARAMETER           shift, and go to state 36
    VAR                 shift, and go to state 37
    TYPEDEF             shift, and go to state 38
    AUTOMATIC           shift, and go to state 39
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    TASK                shift, and go to state 55
    CASE                shift, and go to state 56
    ALIAS               shift, and go to state 57
    ENDGENERATE         shift, and go to state 391
    FINAL               shift, and go to state 58
    ASSIGN              shift, and go to state 60
    ALWAYS              shift, and go to state 61
    BIND                shift, and go to state 62
    _INITIAL            shift, and go to state 63
    ALWAYS_LATCH        shift, and go to state 64
    ALWAYS_FF           shift, and go to state 65
    ALWAYS_COMB         shift, and go to state 68
    FOR                 shift, and go to state 70
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    ';'                 shift, and go to state 75
    '$'                 shift, and go to state 76

    $default  reduce using rule 262 (virtual_optional)

    generate_item                         go to state 392
    module_or_generate_item               go to state 393
    module_common_item                    go to state 83
    if_generate_construct                 go to state 84
    case_generate_construct               go to state 85
    loop_generate_construct               go to state 86
    net_alias                             go to state 87
    continuous_assign                     go to state 88
    bind_directive                        go to state 89
    generic_instantiation                 go to state 90
    always_keyword                        go to state 91
    module_or_generate_item_declaration   go to state 92
    parameter_override                    go to state 93
    data_type                             go to state 95
    data_type_no_identifier               go to state 96
    virtual_interface_type                go to state 97
    integer_vector_type                   go to state 98
    package_or_generate_item_declaration  go to state 99
    class_declaration                     go to state 100
    virtual_optional                      go to state 101
    function_declaration                  go to state 102
    task_declaration                      go to state 103
    local_parameter_declaration           go to state 104
    parameter_declaration                 go to state 105
    data_declaration                      go to state 106
    method_variable_qualifier_list        go to state 107
    variable_qualifier_list               go to state 108
    variable_qualifier                    go to state 109
    method_variable_qualifier             go to state 110
    type_declaration                      go to state 111
    package_import_declaration            go to state 112
    integer_atom_type                     go to state 115
    non_integer_type                      go to state 116
    ps_identifier                         go to state 117
    hierarchical_identifier               go to state 118
    lifetime                              go to state 119
    identifier                            go to state 120


State 173

  103 loop_generate_construct: FOR '(' • genvar_initialization ';' expression ';' genvar_iteration ')' generate_block

    GENVAR              shift, and go to state 394
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    genvar_initialization  go to state 395
    identifier             go to state 396


State 174

  621 ps_identifier: ps_identifier_tok identifier •

    $default  reduce using rule 621 (ps_identifier)


State 175

  622 ps_identifier: '$' UNIT • SCOPE identifier

    SCOPE  shift, and go to state 397


State 176

   91 module_common_item: always_keyword statement •

    $default  reduce using rule 91 (module_common_item)


State 177

   48 module_item: port_declaration ';' •

    $default  reduce using rule 48 (module_item)


State 178

  134 generic_instantiation: data_type hierarchical_instance_list • ';'
  135 hierarchical_instance_list: hierarchical_instance_list • ',' hierarchical_instance

    ','  shift, and go to state 398
    ';'  shift, and go to state 399


State 179

  136 hierarchical_instance_list: hierarchical_instance •

    $default  reduce using rule 136 (hierarchical_instance_list)


State 180

  137 hierarchical_instance: name_of_instance • '(' ordered_port_connection_list ')'
  138                      | name_of_instance • '(' named_port_connection_list ')'
  139                      | name_of_instance • '(' ')'

    '('  shift, and go to state 400


State 181

  517 data_declaration: data_type variable_decl_assignment_list • ';'
  533 variable_decl_assignment_list: variable_decl_assignment_list • ',' variable_decl_assignment

    ','  shift, and go to state 401
    ';'  shift, and go to state 402


State 182

  534 variable_decl_assignment_list: variable_decl_assignment •

    $default  reduce using rule 534 (variable_decl_assignment_list)


State 183

  140 name_of_instance: identifier • unpacked_dimension_list_optional
  535 variable_decl_assignment: identifier • variable_dimension_list_optional '=' expression
  536                         | identifier • variable_dimension_list_optional

    '['  shift, and go to state 403

    '('       reduce using rule 184 (unpacked_dimension_list_optional)
    $default  reduce using rule 190 (variable_dimension_list_optional)

    unpacked_dimension_list_optional  go to state 404
    unpacked_dimension_list           go to state 219
    variable_dimension_list_optional  go to state 405
    variable_dimension_list           go to state 406
    variable_dimension                go to state 407
    associative_dimension             go to state 408
    unpacked_dimension                go to state 409
    unsized_dimension                 go to state 410


State 184

  228 data_type_no_identifier: virtual_interface_type identifier • parameter_value_assignment_optional '.' identifier
  229                        | virtual_interface_type identifier • parameter_value_assignment_optional

    '#'  shift, and go to state 216

    $default  reduce using rule 232 (parameter_value_assignment_optional)

    parameter_value_assignment           go to state 411
    parameter_value_assignment_optional  go to state 412


State 185

  240 signing: UNSIGNED •

    $default  reduce using rule 240 (signing)


State 186

  239 signing: SIGNED •

    $default  reduce using rule 239 (signing)


State 187

  223 data_type_no_identifier: integer_vector_type signing_optional • packed_dimension_list_optional

    '['  shift, and go to state 210

    $default  reduce using rule 238 (packed_dimension_list_optional)

    packed_dimension_list_optional  go to state 413
    packed_dimension_list           go to state 212
    packed_dimension                go to state 213


State 188

  235 signing_optional: signing •

    $default  reduce using rule 235 (signing_optional)


State 189

  260 class_declaration: virtual_optional CLASS • lifetime_optional identifier parameter_port_list_optional extends_class_optional implements_interface_optional ';' class_item_list ENDCLASS block_end_identifier_optional

    STATIC     shift, and go to state 30
    AUTOMATIC  shift, and go to state 39

    $default  reduce using rule 551 (lifetime_optional)

    lifetime_optional  go to state 414
    lifetime           go to state 125


State 190

  257 package_or_generate_item_declaration: local_parameter_declaration ';' •

    $default  reduce using rule 257 (package_or_generate_item_declaration)


State 191

  258 package_or_generate_item_declaration: parameter_declaration ';' •

    $default  reduce using rule 258 (package_or_generate_item_declaration)


State 192

  515 data_declaration: method_variable_qualifier_list data_type • variable_decl_assignment_list ';'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    variable_decl_assignment_list  go to state 415
    variable_decl_assignment       go to state 182
    identifier                     go to state 416


State 193

  520 method_variable_qualifier_list: method_variable_qualifier_list method_variable_qualifier •

    $default  reduce using rule 520 (method_variable_qualifier_list)


State 194

  516 data_declaration: method_variable_qualifier_list variable_decl_assignment_list • ';'
  533 variable_decl_assignment_list: variable_decl_assignment_list • ',' variable_decl_assignment

    ','  shift, and go to state 401
    ';'  shift, and go to state 417


State 195

  222 data_type: identifier • parameter_value_assignment
  535 variable_decl_assignment: identifier • variable_dimension_list_optional '=' expression
  536                         | identifier • variable_dimension_list_optional
  627 hierarchical_identifier: identifier • unpacked_dimension_list_optional

    '['  shift, and go to state 403
    '#'  shift, and go to state 216

    ','       reduce using rule 190 (variable_dimension_list_optional)
    ';'       reduce using rule 190 (variable_dimension_list_optional)
    '='       reduce using rule 190 (variable_dimension_list_optional)
    $default  reduce using rule 184 (unpacked_dimension_list_optional)

    parameter_value_assignment        go to state 217
    unpacked_dimension_list_optional  go to state 218
    unpacked_dimension_list           go to state 219
    variable_dimension_list_optional  go to state 405
    variable_dimension_list           go to state 406
    variable_dimension                go to state 407
    associative_dimension             go to state 408
    unpacked_dimension                go to state 409
    unsized_dimension                 go to state 410


State 196

  513 data_declaration: variable_qualifier_list data_type • variable_decl_assignment_list ';'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    variable_decl_assignment_list  go to state 418
    variable_decl_assignment       go to state 182
    identifier                     go to state 416


State 197

  522 variable_qualifier_list: variable_qualifier_list variable_qualifier •

    $default  reduce using rule 522 (variable_qualifier_list)


State 198

  514 data_declaration: variable_qualifier_list variable_decl_assignment_list • ';'
  533 variable_decl_assignment_list: variable_decl_assignment_list • ',' variable_decl_assignment

    ','  shift, and go to state 401
    ';'  shift, and go to state 419


State 199

  176 input_declaration: INPUT • net_port_type port_identifier_list
  177                  | INPUT • variable_port_type variable_identifier_list

    VIRTUAL             shift, and go to state 141
    VAR                 shift, and go to state 420
    INTERCONNECT        shift, and go to state 421
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    SUPPLY0             shift, and go to state 422
    SUPPLY1             shift, and go to state 423
    TRI                 shift, and go to state 424
    TRIAND              shift, and go to state 425
    TRIOR               shift, and go to state 426
    TRIREG              shift, and go to state 427
    TRI0                shift, and go to state 428
    TRI1                shift, and go to state 429
    UWIRE               shift, and go to state 430
    WIRE                shift, and go to state 431
    WAND                shift, and go to state 432
    WOR                 shift, and go to state 433
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    '$'                 shift, and go to state 76

    net_port_type            go to state 434
    net_type                 go to state 435
    variable_port_type       go to state 436
    data_type                go to state 437
    data_type_no_identifier  go to state 96
    virtual_interface_type   go to state 97
    integer_vector_type      go to state 98
    integer_atom_type        go to state 115
    non_integer_type         go to state 116
    ps_identifier            go to state 117
    hierarchical_identifier  go to state 118
    identifier               go to state 120


State 200

  178 output_declaration: OUTPUT • net_port_type port_identifier_list
  179                   | OUTPUT • variable_port_type variable_identifier_list

    VIRTUAL             shift, and go to state 141
    VAR                 shift, and go to state 420
    INTERCONNECT        shift, and go to state 421
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    SUPPLY0             shift, and go to state 422
    SUPPLY1             shift, and go to state 423
    TRI                 shift, and go to state 424
    TRIAND              shift, and go to state 425
    TRIOR               shift, and go to state 426
    TRIREG              shift, and go to state 427
    TRI0                shift, and go to state 428
    TRI1                shift, and go to state 429
    UWIRE               shift, and go to state 430
    WIRE                shift, and go to state 431
    WAND                shift, and go to state 432
    WOR                 shift, and go to state 433
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    '$'                 shift, and go to state 76

    net_port_type            go to state 438
    net_type                 go to state 435
    variable_port_type       go to state 439
    data_type                go to state 437
    data_type_no_identifier  go to state 96
    virtual_interface_type   go to state 97
    integer_vector_type      go to state 98
    integer_atom_type        go to state 115
    non_integer_type         go to state 116
    ps_identifier            go to state 117
    hierarchical_identifier  go to state 118
    identifier               go to state 120


State 201

  175 inout_declaration: INOUT • net_port_type port_identifier_list

    INTERCONNECT  shift, and go to state 421
    SUPPLY0       shift, and go to state 422
    SUPPLY1       shift, and go to state 423
    TRI           shift, and go to state 424
    TRIAND        shift, and go to state 425
    TRIOR         shift, and go to state 426
    TRIREG        shift, and go to state 427
    TRI0          shift, and go to state 428
    TRI1          shift, and go to state 429
    UWIRE         shift, and go to state 430
    WIRE          shift, and go to state 431
    WAND          shift, and go to state 432
    WOR           shift, and go to state 433

    net_port_type  go to state 440
    net_type       go to state 435


State 202

  180 ref_declaration: REF • variable_port_type variable_identifier_list

    VIRTUAL             shift, and go to state 141
    VAR                 shift, and go to state 420
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    '$'                 shift, and go to state 76

    variable_port_type       go to state 441
    data_type                go to state 437
    data_type_no_identifier  go to state 96
    virtual_interface_type   go to state 97
    integer_vector_type      go to state 98
    integer_atom_type        go to state 115
    non_integer_type         go to state 116
    ps_identifier            go to state 117
    hierarchical_identifier  go to state 118
    identifier               go to state 120


State 203

   62 specparam_declaration: SPECPARAM • packed_dimension_list_optional specparam_assignment_list ';'

    '['  shift, and go to state 210

    $default  reduce using rule 238 (packed_dimension_list_optional)

    packed_dimension_list_optional  go to state 442
    packed_dimension_list           go to state 212
    packed_dimension                go to state 213


State 204

   53 non_port_module_item: attribute_instance_list specparam_declaration •

    $default  reduce using rule 53 (non_port_module_item)


State 205

  171 port_declaration: attribute_instance_list inout_declaration •

    $default  reduce using rule 171 (port_declaration)


State 206

  172 port_declaration: attribute_instance_list input_declaration •

    $default  reduce using rule 172 (port_declaration)


State 207

  173 port_declaration: attribute_instance_list output_declaration •

    $default  reduce using rule 173 (port_declaration)


State 208

  174 port_declaration: attribute_instance_list ref_declaration •

    $default  reduce using rule 174 (port_declaration)


State 209

  224 data_type_no_identifier: integer_atom_type signing_optional •

    $default  reduce using rule 224 (data_type_no_identifier)


State 210

  243 packed_dimension: '[' • ']'
  244                 | '[' • part_select_range ']'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    ']'                 shift, and go to state 443
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    part_select_range              go to state 444
    expression                     go to state 445
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 211

  221 data_type: ps_identifier packed_dimension_list_optional •

    $default  reduce using rule 221 (data_type)


State 212

  237 packed_dimension_list_optional: packed_dimension_list •
  241 packed_dimension_list: packed_dimension_list • packed_dimension

    '['  shift, and go to state 210

    $default  reduce using rule 237 (packed_dimension_list_optional)

    packed_dimension  go to state 446


State 213

  242 packed_dimension_list: packed_dimension •

    $default  reduce using rule 242 (packed_dimension_list)


State 214

  626 hierarchical_identifier: hierarchical_identifier '.' • identifier unpacked_dimension_list_optional

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 447


State 215

  198 unpacked_dimension: '[' • part_select_range ']'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    part_select_range              go to state 448
    expression                     go to state 445
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 216

  149 parameter_value_assignment: '#' • '(' ordered_parameter_assignment_list ')'
  150                           | '#' • '(' named_parameter_assignment_list ')'
  151                           | '#' • '(' ')'

    '('  shift, and go to state 449


State 217

  222 data_type: identifier parameter_value_assignment •

    $default  reduce using rule 222 (data_type)


State 218

  627 hierarchical_identifier: identifier unpacked_dimension_list_optional •

    $default  reduce using rule 627 (hierarchical_identifier)


State 219

  183 unpacked_dimension_list_optional: unpacked_dimension_list •
  185 unpacked_dimension_list: unpacked_dimension_list • unpacked_dimension

    '['  shift, and go to state 215

    $default  reduce using rule 183 (unpacked_dimension_list_optional)

    unpacked_dimension  go to state 450


State 220

  186 unpacked_dimension_list: unpacked_dimension •

    $default  reduce using rule 186 (unpacked_dimension_list)


State 221

    7 module_declaration: module_ansi_header non_port_module_item_list ENDMODULE block_end_identifier_optional •

    $default  reduce using rule 7 (module_declaration)


State 222

  249 package_declaration: attribute_instance_list PACKAGE lifetime_optional identifier • ';' timeunits_declaration_optional package_item_list_optional ENDPACKAGE block_end_identifier_optional

    ';'  shift, and go to state 451


State 223

  554 attribute_instance: '(' TOK_MUL attr_spec_list • TOK_MUL ')'
  555 attr_spec_list: attr_spec_list • ',' identifier '=' constant_primary
  556               | attr_spec_list • ',' identifier

    TOK_MUL  shift, and go to state 452
    ','      shift, and go to state 453


State 224

  557 attr_spec_list: identifier • '=' constant_primary
  558               | identifier •

    '='  shift, and go to state 454

    $default  reduce using rule 558 (attr_spec_list)


State 225

   10 module_nonansi_header: attribute_instance_list module_keyword lifetime_optional identifier • package_import_declaration_list parameter_port_list_optional list_of_ports ';'
   11 module_ansi_header: attribute_instance_list module_keyword lifetime_optional identifier • package_import_declaration_list parameter_port_list_optional port_declaration_list ';'

    $default  reduce using rule 32 (package_import_declaration_list)

    package_import_declaration_list  go to state 455


State 226

  548 block_end_identifier_optional: ':' identifier •

    $default  reduce using rule 548 (block_end_identifier_optional)


State 227

  168 defparam_assignment_list: defparam_assignment_list ',' • defparam_assignment

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    defparam_assignment      go to state 456
    hierarchical_identifier  go to state 132
    identifier               go to state 133


State 228

  167 parameter_override: DEFPARAM defparam_assignment_list ';' •

    $default  reduce using rule 167 (parameter_override)


State 229

  170 defparam_assignment: hierarchical_identifier '=' • constant_mintypmax_expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    constant_mintypmax_expression  go to state 457
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 458
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 230

  547 package_import_item: ps_identifier_tok TOK_MUL •

    $default  reduce using rule 547 (package_import_item)


State 231

  544 package_import_item_list: package_import_item_list ',' • package_import_item

    ps_identifier_tok  shift, and go to state 134
    '$'                shift, and go to state 76

    package_import_item  go to state 459
    ps_identifier        go to state 137


State 232

  543 package_import_declaration: IMPORT package_import_item_list ';' •

    $default  reduce using rule 543 (package_import_declaration)


State 233

  166 module_or_generate_item_declaration: DEFAULT CLOCKING identifier • ';'

    ';'  shift, and go to state 460


State 234

  307 function_type_name: NEW •

    $default  reduce using rule 307 (function_type_name)


State 235

  329 function_data_type: VOID •

    $default  reduce using rule 329 (function_data_type)


State 236

  306 function_type_name: ps_identifier_tok • NEW
  621 ps_identifier: ps_identifier_tok • identifier

    NEW                 shift, and go to state 461
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 174


State 237

  328 function_data_type: data_type •

    $default  reduce using rule 328 (function_data_type)


State 238

  298 function_declaration: FUNCTION lifetime_optional function_body_declaration •

    $default  reduce using rule 298 (function_declaration)


State 239

  299 function_body_declaration: function_type_name • ';' tf_item_declaration_list statement_list_optional ENDFUNCTION function_block_end_identifier_optional
  300                          | function_type_name • '(' tf_port_list_optional ')' ';' block_item_declaration_list statement_list_optional ENDFUNCTION function_block_end_identifier_optional
  301                          | function_type_name • '(' tf_port_list_optional ')' ';' statement_list_optional ENDFUNCTION function_block_end_identifier_optional

    ';'  shift, and go to state 462
    '('  shift, and go to state 463


State 240

  304 function_type_name: function_data_type • ps_or_hierarchical_identifier
  305                   | function_data_type • SCOPE NEW
  308                   | function_data_type •

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    SCOPE               shift, and go to state 464
    '$'                 shift, and go to state 76

    $default  reduce using rule 308 (function_type_name)

    ps_identifier                  go to state 306
    ps_or_hierarchical_identifier  go to state 465
    hierarchical_identifier        go to state 308
    identifier                     go to state 309


State 241

  589 casting_type: CONST •

    $default  reduce using rule 589 (casting_type)


State 242

  614 implicit_class_handle: SUPER •

    $default  reduce using rule 614 (implicit_class_handle)


State 243

  588 casting_type: STRING •

    $default  reduce using rule 588 (casting_type)


State 244

  683 expression: TAGGED • identifier expression

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 466


State 245

  583 primary: THIS •
  613 implicit_class_handle: THIS •

    '.'       reduce using rule 613 (implicit_class_handle)
    $default  reduce using rule 583 (primary)


State 246

  615 randomize_call: RANDOMIZE • attribute_instance_list
  616               | RANDOMIZE • attribute_instance_list '(' identifier_list ')'
  617               | RANDOMIZE • attribute_instance_list '(' ')'
  618               | RANDOMIZE • attribute_instance_list '(' _NULL ')'

    $default  reduce using rule 553 (attribute_instance_list)

    attribute_instance_list  go to state 467


State 247

  610 subroutine_call: STD • SCOPE randomize_call

    SCOPE  shift, and go to state 468


State 248

  585 primary: _NULL •

    $default  reduce using rule 585 (primary)


State 249

  568 primary_literal: string_literal •

    $default  reduce using rule 568 (primary_literal)


State 250

  565 time_literal: unsigned_number • time_unit
  569 primary_literal: unsigned_number •

    PS  shift, and go to state 366
    US  shift, and go to state 367
    S   shift, and go to state 368
    NS  shift, and go to state 369
    MS  shift, and go to state 370
    FS  shift, and go to state 371

    $default  reduce using rule 569 (primary_literal)

    time_unit  go to state 372


State 251

  646 expression: TOK_BIT_NAND • primary

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    '('                 shift, and go to state 469
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 470
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 471
    identifier                     go to state 289


State 252

  648 expression: TOK_BIT_NOR • primary

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    '('                 shift, and go to state 469
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 472
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 471
    identifier                     go to state 289


State 253

  650 expression: TOK_BIT_XNOR • primary

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    '('                 shift, and go to state 469
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 473
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 471
    identifier                     go to state 289


State 254

  641 expression: TOK_PLUS • primary

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    '('                 shift, and go to state 469
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 474
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 471
    identifier                     go to state 289


State 255

  642 expression: TOK_MINUS • primary

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    '('                 shift, and go to state 469
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 475
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 471
    identifier                     go to state 289


State 256

  643 expression: TOK_LOG_NOT • primary

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    '('                 shift, and go to state 469
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 476
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 471
    identifier                     go to state 289


State 257

  645 expression: TOK_BIT_AND • primary

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    '('                 shift, and go to state 469
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 477
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 471
    identifier                     go to state 289


State 258

  647 expression: TOK_BIT_OR • primary

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    '('                 shift, and go to state 469
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 478
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 471
    identifier                     go to state 289


State 259

  649 expression: TOK_BIT_XOR • primary

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    '('                 shift, and go to state 469
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 479
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 471
    identifier                     go to state 289


State 260

  644 expression: TOK_BIT_NOT • primary

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    '('                 shift, and go to state 469
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 480
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 471
    identifier                     go to state 289


State 261

  684 inc_or_dec_expression: TOK_INC • lvalue

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    hierarchical_identifier  go to state 158
    lvalue                   go to state 481
    identifier               go to state 133


State 262

  685 inc_or_dec_expression: TOK_DEC • lvalue

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    hierarchical_identifier  go to state 158
    lvalue                   go to state 482
    identifier               go to state 133


State 263

  581 primary: '(' • mintypmax_expression ')'
  652 expression: '(' • operator_assignment ')'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    mintypmax_expression           go to state 483
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 484
    inc_or_dec_expression          go to state 287
    operator_assignment            go to state 485
    lvalue                         go to state 486
    identifier                     go to state 289


State 264

  584 primary: '$' •
  622 ps_identifier: '$' • UNIT SCOPE identifier

    UNIT  shift, and go to state 175

    $default  reduce using rule 584 (primary)


State 265

  570 concatenation: '{' • concatenation_expression_list '}'
  571 multiple_concatenation: '{' • expression concatenation '}'
  577 primary: '{' • '}'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265
    '}'                 shift, and go to state 487

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    concatenation_expression_list  go to state 488
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 489
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 266

  587 casting_type: signing •

    $default  reduce using rule 587 (casting_type)


State 267

  586 casting_type: constant_primary •

    $default  reduce using rule 586 (casting_type)


State 268

  595 integer_type: integer_vector_type •

    $default  reduce using rule 595 (integer_type)


State 269

  567 primary_literal: time_literal •

    $default  reduce using rule 567 (primary_literal)


State 270

  245 constant_primary: primary_literal •
  574 primary: primary_literal •

    TOK_SING_QUOT  reduce using rule 245 (constant_primary)
    $default       reduce using rule 574 (primary)


State 271

  578 primary: concatenation •

    $default  reduce using rule 578 (primary)


State 272

  579 primary: multiple_concatenation •

    $default  reduce using rule 579 (primary)


State 273

  640 expression: primary •

    $default  reduce using rule 640 (expression)


State 274

  582 primary: casting_type • TOK_SING_QUOT '(' expression ')'

    TOK_SING_QUOT  shift, and go to state 490


State 275

  590 casting_type: simple_type •

    $default  reduce using rule 590 (casting_type)


State 276

  591 simple_type: integer_type •

    $default  reduce using rule 591 (simple_type)


State 277

  596 integer_type: integer_atom_type •

    $default  reduce using rule 596 (integer_type)


State 278

  592 simple_type: non_integer_type •

    $default  reduce using rule 592 (simple_type)


State 279

  580 primary: subroutine_call •

    $default  reduce using rule 580 (primary)


State 280

  608 subroutine_call: tf_call •

    $default  reduce using rule 608 (subroutine_call)


State 281

  612 tf_call: implicit_class_handle • '.' identifier attribute_instance_list '(' argument_list ')'

    '.'  shift, and go to state 491


State 282

  609 subroutine_call: randomize_call •

    $default  reduce using rule 609 (subroutine_call)


State 283

  576 primary: ps_identifier •
  594 simple_type: ps_identifier •
  623 ps_or_hierarchical_identifier: ps_identifier •

    TOK_SING_QUOT  reduce using rule 594 (simple_type)
    '('            reduce using rule 623 (ps_or_hierarchical_identifier)
    $default       reduce using rule 576 (primary)


State 284

  611 tf_call: ps_or_hierarchical_identifier • attribute_instance_list '(' argument_list ')'

    $default  reduce using rule 553 (attribute_instance_list)

    attribute_instance_list  go to state 492


State 285

  575 primary: hierarchical_identifier •
  625 ps_or_hierarchical_identifier: hierarchical_identifier •
  626 hierarchical_identifier: hierarchical_identifier • '.' identifier unpacked_dimension_list_optional
  689 lvalue: hierarchical_identifier •

    '.'  shift, and go to state 214

    TOK_INC       reduce using rule 689 (lvalue)
    TOK_DEC       reduce using rule 689 (lvalue)
    TOK_SL_EQ     reduce using rule 689 (lvalue)
    TOK_SR_EQ     reduce using rule 689 (lvalue)
    TOK_SLA_EQ    reduce using rule 689 (lvalue)
    TOK_SRA_EQ    reduce using rule 689 (lvalue)
    TOK_PLUS_EQ   reduce using rule 689 (lvalue)
    TOK_MINUS_EQ  reduce using rule 689 (lvalue)
    TOK_MUL_EQ    reduce using rule 689 (lvalue)
    TOK_DIV_EQ    reduce using rule 689 (lvalue)
    TOK_MOD_EQ    reduce using rule 689 (lvalue)
    TOK_AND_EQ    reduce using rule 689 (lvalue)
    TOK_OR_EQ     reduce using rule 689 (lvalue)
    TOK_XOR_EQ    reduce using rule 689 (lvalue)
    '('           reduce using rule 625 (ps_or_hierarchical_identifier)
    '='           reduce using rule 689 (lvalue)
    $default      reduce using rule 575 (primary)


State 286

   95 if_generate_construct: IF '(' expression • ')' generate_block ELSE generate_block
   96                      | IF '(' expression • ')' generate_block
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522
    ')'           shift, and go to state 523


State 287

  651 expression: inc_or_dec_expression •

    $default  reduce using rule 651 (expression)


State 288

  686 inc_or_dec_expression: lvalue • TOK_INC
  687                      | lvalue • TOK_DEC

    TOK_INC  shift, and go to state 524
    TOK_DEC  shift, and go to state 525


State 289

  593 simple_type: identifier •
  624 ps_or_hierarchical_identifier: identifier • parameter_value_assignment SCOPE identifier
  627 hierarchical_identifier: identifier • unpacked_dimension_list_optional

    '['  shift, and go to state 215
    '#'  shift, and go to state 216

    TOK_SING_QUOT  reduce using rule 593 (simple_type)
    $default       reduce using rule 184 (unpacked_dimension_list_optional)

    parameter_value_assignment        go to state 526
    unpacked_dimension_list_optional  go to state 218
    unpacked_dimension_list           go to state 219
    unpacked_dimension                go to state 220


State 290

  498 local_parameter_declaration: LOCALPARAM TYPE type_assignment_list •
  504 type_assignment_list: type_assignment_list • ',' type_assignment

    ','  shift, and go to state 527

    $default  reduce using rule 498 (local_parameter_declaration)


State 291

  505 type_assignment_list: type_assignment •

    $default  reduce using rule 505 (type_assignment_list)


State 292

  511 type_assignment: identifier • '=' data_type
  512                | identifier •

    '='  shift, and go to state 528

    $default  reduce using rule 512 (type_assignment)


State 293

  496 local_parameter_declaration: LOCALPARAM data_type param_assignment_list •
  502 param_assignment_list: param_assignment_list • ',' param_assignment

    ','  shift, and go to state 295

    $default  reduce using rule 496 (local_parameter_declaration)


State 294

  506 param_assignment: identifier • '=' constant_param_expression
  507                 | identifier •

    '='  shift, and go to state 296

    $default  reduce using rule 507 (param_assignment)


State 295

  502 param_assignment_list: param_assignment_list ',' • param_assignment

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    param_assignment  go to state 529
    identifier        go to state 294


State 296

  506 param_assignment: identifier '=' • constant_param_expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    constant_param_expression      go to state 530
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    mintypmax_expression           go to state 531
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 484
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 297

  501 parameter_declaration: PARAMETER TYPE type_assignment_list •
  504 type_assignment_list: type_assignment_list • ',' type_assignment

    ','  shift, and go to state 527

    $default  reduce using rule 501 (parameter_declaration)


State 298

  499 parameter_declaration: PARAMETER data_type param_assignment_list •
  502 param_assignment_list: param_assignment_list • ',' param_assignment

    ','  shift, and go to state 295

    $default  reduce using rule 499 (parameter_declaration)


State 299

  542 type_declaration: TYPEDEF INTERFACE CLASS • identifier ';'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 532


State 300

  541 type_declaration: TYPEDEF CLASS identifier • ';'

    ';'  shift, and go to state 533


State 301

  538 type_declaration: TYPEDEF ENUM identifier • ';'

    ';'  shift, and go to state 534


State 302

  539 type_declaration: TYPEDEF STRUCT identifier • ';'

    ';'  shift, and go to state 535


State 303

  540 type_declaration: TYPEDEF UNION identifier • ';'

    ';'  shift, and go to state 536


State 304

  537 type_declaration: TYPEDEF data_type identifier • ';'

    ';'  shift, and go to state 537


State 305

  309 task_declaration: TASK lifetime_optional task_body_declaration •

    $default  reduce using rule 309 (task_declaration)


State 306

  623 ps_or_hierarchical_identifier: ps_identifier •

    $default  reduce using rule 623 (ps_or_hierarchical_identifier)


State 307

  310 task_body_declaration: ps_or_hierarchical_identifier • ';' tf_item_declaration_list statement_list_optional ENDTASK block_end_identifier_optional
  311                      | ps_or_hierarchical_identifier • '(' tf_port_list_optional ')' ';' block_item_declaration_list statement_list_optional ENDTASK block_end_identifier_optional
  312                      | ps_or_hierarchical_identifier • '(' tf_port_list_optional ')' ';' statement_list_optional ENDTASK block_end_identifier_optional

    ';'  shift, and go to state 538
    '('  shift, and go to state 539


State 308

  625 ps_or_hierarchical_identifier: hierarchical_identifier •
  626 hierarchical_identifier: hierarchical_identifier • '.' identifier unpacked_dimension_list_optional

    '.'  shift, and go to state 214

    $default  reduce using rule 625 (ps_or_hierarchical_identifier)


State 309

  624 ps_or_hierarchical_identifier: identifier • parameter_value_assignment SCOPE identifier
  627 hierarchical_identifier: identifier • unpacked_dimension_list_optional

    '['  shift, and go to state 215
    '#'  shift, and go to state 216

    $default  reduce using rule 184 (unpacked_dimension_list_optional)

    parameter_value_assignment        go to state 526
    unpacked_dimension_list_optional  go to state 218
    unpacked_dimension_list           go to state 219
    unpacked_dimension                go to state 220


State 310

   97 case_generate_construct: CASE '(' expression • ')' case_generate_item_list ENDCASE
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522
    ')'           shift, and go to state 540


State 311

  129 net_alias: ALIAS lvalue '=' • lvalue lvalue_list ';'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    hierarchical_identifier  go to state 158
    lvalue                   go to state 541
    identifier               go to state 133


State 312

  436 disable_statement: DISABLE • hierarchical_identifier ';'
  437                  | DISABLE • FORK ';'

    FORK                shift, and go to state 542
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    hierarchical_identifier  go to state 543
    identifier               go to state 133


State 313

  423 par_block: FORK • block_end_identifier_optional block_item_declaration_list statement_list join_keyword block_end_identifier_optional
  424          | FORK • block_end_identifier_optional block_item_declaration_list join_keyword block_end_identifier_optional
  425          | FORK • block_end_identifier_optional statement_list join_keyword block_end_identifier_optional
  426          | FORK • block_end_identifier_optional join_keyword block_end_identifier_optional

    ':'  shift, and go to state 128

    $default  reduce using rule 549 (block_end_identifier_optional)

    block_end_identifier_optional  go to state 544


State 314

  383 loop_statement: FOREACH • '(' identifier '[' identifier_list ']' ')' statement

    '('  shift, and go to state 545


State 315

  407 unique_priority_optional: UNIQUE •

    $default  reduce using rule 407 (unique_priority_optional)


State 316

  406 subroutine_call_statement: VOID • TOK_SING_QUOT '(' subroutine_call ')' ';'

    TOK_SING_QUOT  shift, and go to state 546


State 317

  419 seq_block: _BEGIN • block_end_identifier_optional block_item_declaration_list statement_list END block_end_identifier_optional
  420          | _BEGIN • block_end_identifier_optional block_item_declaration_list END block_end_identifier_optional
  421          | _BEGIN • block_end_identifier_optional statement_list END block_end_identifier_optional
  422          | _BEGIN • block_end_identifier_optional END block_end_identifier_optional

    ':'  shift, and go to state 128

    $default  reduce using rule 549 (block_end_identifier_optional)

    block_end_identifier_optional  go to state 547


State 318

  409 unique_priority_optional: PRIORITY •

    $default  reduce using rule 409 (unique_priority_optional)


State 319

  462 procedural_continuous_assignment: FORCE • variable_assignment

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    variable_assignment      go to state 548
    hierarchical_identifier  go to state 158
    lvalue                   go to state 167
    identifier               go to state 133


State 320

  380 loop_statement: WHILE • '(' expression ')' statement

    '('  shift, and go to state 549


State 321

  378 loop_statement: FOREVER • statement

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 550
    attribute_instance_list  go to state 161


State 322

  613 implicit_class_handle: THIS •

    $default  reduce using rule 613 (implicit_class_handle)


State 323

  438 wait_statement: WAIT • '(' expression ')' statement
  439               | WAIT • FORK ';'

    FORK  shift, and go to state 551
    '('   shift, and go to state 552


State 324

  382 loop_statement: DO • statement WHILE '(' expression ')' ';'

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 553
    attribute_instance_list  go to state 161


State 325

  440 wait_statement: WAIT_ORDER • '(' hierarchical_identifier_list ')' action_block

    '('  shift, and go to state 554


State 326

  460 procedural_continuous_assignment: ASSIGN • variable_assignment

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    variable_assignment      go to state 555
    hierarchical_identifier  go to state 158
    lvalue                   go to state 167
    identifier               go to state 133


State 327

  463 procedural_continuous_assignment: RELEASE • lvalue

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    hierarchical_identifier  go to state 158
    lvalue                   go to state 556
    identifier               go to state 133


State 328

  379 loop_statement: REPEAT • '(' expression ')' statement

    '('  shift, and go to state 557


State 329

  461 procedural_continuous_assignment: DEASSIGN • lvalue

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    hierarchical_identifier  go to state 158
    lvalue                   go to state 558
    identifier               go to state 133


State 330

  381 loop_statement: FOR • '(' for_initialization ';' expression_optional ';' for_step ')' statement

    '('  shift, and go to state 559


State 331

  465 jump_statement: RETURN • expression ';'
  466               | RETURN • ';'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    ';'                 shift, and go to state 560
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 561
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 332

  408 unique_priority_optional: UNIQUE0 •

    $default  reduce using rule 408 (unique_priority_optional)


State 333

  468 jump_statement: CONTINUE • ';'

    ';'  shift, and go to state 562


State 334

  467 jump_statement: BREAK • ';'

    ';'  shift, and go to state 563


State 335

  347 statement_item: SUPER_NEW • '(' argument_list ')' ';'
  348               | SUPER_NEW • ';'

    ';'  shift, and go to state 564
    '('  shift, and go to state 565


State 336

  375 cycle_delay: TOK_DLY • unsigned_number
  376            | TOK_DLY • identifier
  377            | TOK_DLY • '(' expression ')'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    unsigned_number     shift, and go to state 566
    '('                 shift, and go to state 567

    identifier  go to state 568


State 337

  434 event_trigger: TOK_IMP • hierarchical_identifier ';'
  435              | TOK_IMP • TOK_LOG_GT hierarchical_identifier ';'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    TOK_LOG_GT          shift, and go to state 569

    hierarchical_identifier  go to state 570
    identifier               go to state 133


State 338

  331 statement: attribute_instance_list ';' •

    $default  reduce using rule 331 (statement)


State 339

  353 delay_control: '#' • delay_value
  354              | '#' • '(' mintypmax_expression ')'

    _1STEP              shift, and go to state 571
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 572
    fixed_point_number  shift, and go to state 163
    '('                 shift, and go to state 573
    '$'                 shift, and go to state 76

    delay_value    go to state 574
    time_literal   go to state 575
    ps_identifier  go to state 576


State 340

  359 event_control: '@' • hierarchical_identifier
  360              | '@' • '(' event_expression ')'
  361              | '@' • TOK_MUL
  362              | '@' • '(' TOK_MUL ')'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    TOK_MUL             shift, and go to state 577
    '('                 shift, and go to state 578

    hierarchical_identifier  go to state 579
    identifier               go to state 133


State 341

  330 statement: attribute_instance_list statement_item •

    $default  reduce using rule 330 (statement)


State 342

  344 statement_item: procedural_timing_control_statement •

    $default  reduce using rule 344 (statement_item)


State 343

  372 procedural_timing_control: delay_control •

    $default  reduce using rule 372 (procedural_timing_control)


State 344

  373 procedural_timing_control: event_control •

    $default  reduce using rule 373 (procedural_timing_control)


State 345

  349 procedural_timing_control_statement: procedural_timing_control • statement

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 580
    attribute_instance_list  go to state 161


State 346

  374 procedural_timing_control: cycle_delay •

    $default  reduce using rule 374 (procedural_timing_control)


State 347

  341 statement_item: loop_statement •

    $default  reduce using rule 341 (statement_item)


State 348

  336 statement_item: conditional_statement •

    $default  reduce using rule 336 (statement_item)


State 349

  335 statement_item: case_statement •

    $default  reduce using rule 335 (statement_item)


State 350

  338 statement_item: subroutine_call_statement •

    $default  reduce using rule 338 (statement_item)


State 351

  400 conditional_statement: unique_priority_optional • IF '(' cond_predicate ')' statement else_if_list
  401                      | unique_priority_optional • IF '(' cond_predicate ')' statement else_if_list ELSE statement
  404 case_statement: unique_priority_optional • case_keyword '(' expression ')' case_item_list ENDCASE

    IF     shift, and go to state 581
    CASE   shift, and go to state 582
    CASEZ  shift, and go to state 583
    CASEX  shift, and go to state 584

    case_keyword  go to state 585


State 352

  345 statement_item: seq_block •

    $default  reduce using rule 345 (statement_item)


State 353

  343 statement_item: par_block •

    $default  reduce using rule 343 (statement_item)


State 354

  340 statement_item: event_trigger •

    $default  reduce using rule 340 (statement_item)


State 355

  339 statement_item: disable_statement •

    $default  reduce using rule 339 (statement_item)


State 356

  346 statement_item: wait_statement •

    $default  reduce using rule 346 (statement_item)


State 357

  332 statement_item: blocking_assignment • ';'

    ';'  shift, and go to state 586


State 358

  333 statement_item: nonblocking_assignment • ';'

    ';'  shift, and go to state 587


State 359

  334 statement_item: procedural_continuous_assignment • ';'

    ';'  shift, and go to state 588


State 360

  342 statement_item: jump_statement •

    $default  reduce using rule 342 (statement_item)


State 361

  405 subroutine_call_statement: subroutine_call • ';'

    ';'  shift, and go to state 589


State 362

  625 ps_or_hierarchical_identifier: hierarchical_identifier •
  626 hierarchical_identifier: hierarchical_identifier • '.' identifier unpacked_dimension_list_optional
  689 lvalue: hierarchical_identifier •

    '.'  shift, and go to state 214

    '('       reduce using rule 625 (ps_or_hierarchical_identifier)
    $default  reduce using rule 689 (lvalue)


State 363

  337 statement_item: inc_or_dec_expression • ';'

    ';'  shift, and go to state 590


State 364

  449 blocking_assignment: operator_assignment •

    $default  reduce using rule 449 (blocking_assignment)


State 365

  446 blocking_assignment: lvalue • '=' delay_or_event_control expression
  447                    | lvalue • assignment_operator dynamic_array_new
  448                    | lvalue • assignment_operator class_new
  458 nonblocking_assignment: lvalue • TOK_LOG_LEQ delay_or_event_control expression
  459                       | lvalue • TOK_LOG_LEQ expression
  686 inc_or_dec_expression: lvalue • TOK_INC
  687                      | lvalue • TOK_DEC
  688 operator_assignment: lvalue • assignment_operator expression

    TOK_LOG_LEQ   shift, and go to state 591
    TOK_INC       shift, and go to state 524
    TOK_DEC       shift, and go to state 525
    TOK_SL_EQ     shift, and go to state 592
    TOK_SR_EQ     shift, and go to state 593
    TOK_SLA_EQ    shift, and go to state 594
    TOK_SRA_EQ    shift, and go to state 595
    TOK_PLUS_EQ   shift, and go to state 596
    TOK_MINUS_EQ  shift, and go to state 597
    TOK_MUL_EQ    shift, and go to state 598
    TOK_DIV_EQ    shift, and go to state 599
    TOK_MOD_EQ    shift, and go to state 600
    TOK_AND_EQ    shift, and go to state 601
    TOK_OR_EQ     shift, and go to state 602
    TOK_XOR_EQ    shift, and go to state 603
    '='           shift, and go to state 604

    assignment_operator  go to state 605


State 366

  700 time_unit: PS •

    $default  reduce using rule 700 (time_unit)


State 367

  698 time_unit: US •

    $default  reduce using rule 698 (time_unit)


State 368

  696 time_unit: S •

    $default  reduce using rule 696 (time_unit)


State 369

  699 time_unit: NS •

    $default  reduce using rule 699 (time_unit)


State 370

  697 time_unit: MS •

    $default  reduce using rule 697 (time_unit)


State 371

  701 time_unit: FS •

    $default  reduce using rule 701 (time_unit)


State 372

  565 time_literal: unsigned_number time_unit •

    $default  reduce using rule 565 (time_literal)


State 373

  566 time_literal: fixed_point_number time_unit •

    $default  reduce using rule 566 (time_literal)


State 374

  561 timeunits_declaration: TIMEUNIT time_literal TOK_DIV • time_literal ';'

    unsigned_number     shift, and go to state 162
    fixed_point_number  shift, and go to state 163

    time_literal  go to state 606


State 375

  563 timeunits_declaration: TIMEUNIT time_literal ';' • TIMEPRECISION time_literal ';'

    TIMEPRECISION  shift, and go to state 607


State 376

  394 variable_assignment_list: variable_assignment_list ',' • variable_assignment

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    variable_assignment      go to state 608
    hierarchical_identifier  go to state 158
    lvalue                   go to state 167
    identifier               go to state 133


State 377

  132 continuous_assign: ASSIGN variable_assignment_list ';' •

    $default  reduce using rule 132 (continuous_assign)


State 378

  464 variable_assignment: lvalue '=' • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 609
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 379

  133 bind_directive: BIND hierarchical_identifier generic_instantiation • ';'

    ';'  shift, and go to state 610


State 380

  134 generic_instantiation: data_type • hierarchical_instance_list ';'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    hierarchical_instance_list  go to state 178
    hierarchical_instance       go to state 179
    name_of_instance            go to state 180
    identifier                  go to state 611


State 381

  562 timeunits_declaration: TIMEPRECISION time_literal ';' •
  564                      | TIMEPRECISION time_literal ';' • TIMEUNIT time_literal ';'

    TIMEUNIT  shift, and go to state 612

    $default  reduce using rule 562 (timeunits_declaration)


State 382

   74 showcancelled_declaration: NOSHOWCANCELLED • path_output_list ';'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    path_output_list             go to state 613
    specify_terminal_descriptor  go to state 614
    hierarchical_identifier      go to state 615
    identifier                   go to state 133


State 383

   73 showcancelled_declaration: SHOWCANCELLED • path_output_list ';'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    path_output_list             go to state 616
    specify_terminal_descriptor  go to state 614
    hierarchical_identifier      go to state 615
    identifier                   go to state 133


State 384

   72 pulsestyle_declaration: PULSESTYLE_ONDETECT • path_output_list ';'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    path_output_list             go to state 617
    specify_terminal_descriptor  go to state 614
    hierarchical_identifier      go to state 615
    identifier                   go to state 133


State 385

   71 pulsestyle_declaration: PULSESTYLE_ONEVENT • path_output_list ';'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    path_output_list             go to state 618
    specify_terminal_descriptor  go to state 614
    hierarchical_identifier      go to state 615
    identifier                   go to state 133


State 386

   56 specify_block: SPECIFY specify_item_list ENDSPECIFY •

    $default  reduce using rule 56 (specify_block)


State 387

   57 specify_item_list: specify_item_list specify_item •

    $default  reduce using rule 57 (specify_item_list)


State 388

   59 specify_item: specparam_declaration •

    $default  reduce using rule 59 (specify_item)


State 389

   60 specify_item: pulsestyle_declaration •

    $default  reduce using rule 60 (specify_item)


State 390

   61 specify_item: showcancelled_declaration •

    $default  reduce using rule 61 (specify_item)


State 391

   78 generate_region: GENERATE generate_item_list ENDGENERATE •

    $default  reduce using rule 78 (generate_region)


State 392

   79 generate_item_list: generate_item_list generate_item •

    $default  reduce using rule 79 (generate_item_list)


State 393

   81 generate_item: module_or_generate_item •

    $default  reduce using rule 81 (generate_item)


State 394

  109 genvar_initialization: GENVAR • identifier '=' expression

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 619


State 395

  103 loop_generate_construct: FOR '(' genvar_initialization • ';' expression ';' genvar_iteration ')' generate_block

    ';'  shift, and go to state 620


State 396

  110 genvar_initialization: identifier • '=' expression

    '='  shift, and go to state 621


State 397

  622 ps_identifier: '$' UNIT SCOPE • identifier

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 622


State 398

  135 hierarchical_instance_list: hierarchical_instance_list ',' • hierarchical_instance

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    hierarchical_instance  go to state 623
    name_of_instance       go to state 180
    identifier             go to state 611


State 399

  134 generic_instantiation: data_type hierarchical_instance_list ';' •

    $default  reduce using rule 134 (generic_instantiation)


State 400

  137 hierarchical_instance: name_of_instance '(' • ordered_port_connection_list ')'
  138                      | name_of_instance '(' • named_port_connection_list ')'
  139                      | name_of_instance '(' • ')'

    ')'  shift, and go to state 624

    $default  reduce using rule 553 (attribute_instance_list)

    ordered_port_connection_list  go to state 625
    ordered_port_connection       go to state 626
    named_port_connection_list    go to state 627
    named_port_connection         go to state 628
    attribute_instance_list       go to state 629


State 401

  533 variable_decl_assignment_list: variable_decl_assignment_list ',' • variable_decl_assignment

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    variable_decl_assignment  go to state 630
    identifier                go to state 416


State 402

  517 data_declaration: data_type variable_decl_assignment_list ';' •

    $default  reduce using rule 517 (data_declaration)


State 403

  196 associative_dimension: '[' • data_type_no_identifier ']'
  197                      | '[' • TOK_MUL ']'
  198 unpacked_dimension: '[' • part_select_range ']'
  199 unsized_dimension: '[' • ']'

    VIRTUAL             shift, and go to state 141
    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 631
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_MUL             shift, and go to state 632
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    VIRTUAL_INTERFACE   shift, and go to state 74
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    ']'                 shift, and go to state 633
    '{'                 shift, and go to state 265

    data_type_no_identifier        go to state 634
    virtual_interface_type         go to state 97
    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 635
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 636
    non_integer_type               go to state 637
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    part_select_range              go to state 448
    expression                     go to state 445
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 404

  140 name_of_instance: identifier unpacked_dimension_list_optional •

    $default  reduce using rule 140 (name_of_instance)


State 405

  535 variable_decl_assignment: identifier variable_dimension_list_optional • '=' expression
  536                         | identifier variable_dimension_list_optional •

    '='  shift, and go to state 638

    $default  reduce using rule 536 (variable_decl_assignment)


State 406

  189 variable_dimension_list_optional: variable_dimension_list •
  191 variable_dimension_list: variable_dimension_list • variable_dimension

    '['  shift, and go to state 403

    $default  reduce using rule 189 (variable_dimension_list_optional)

    variable_dimension     go to state 639
    associative_dimension  go to state 408
    unpacked_dimension     go to state 640
    unsized_dimension      go to state 410


State 407

  192 variable_dimension_list: variable_dimension •

    $default  reduce using rule 192 (variable_dimension_list)


State 408

  195 variable_dimension: associative_dimension •

    $default  reduce using rule 195 (variable_dimension)


State 409

  186 unpacked_dimension_list: unpacked_dimension •
  194 variable_dimension: unpacked_dimension •

    ','       reduce using rule 194 (variable_dimension)
    '['       reduce using rule 186 (unpacked_dimension_list)
    '['       [reduce using rule 194 (variable_dimension)]
    ';'       reduce using rule 194 (variable_dimension)
    '='       reduce using rule 194 (variable_dimension)
    $default  reduce using rule 186 (unpacked_dimension_list)


State 410

  193 variable_dimension: unsized_dimension •

    $default  reduce using rule 193 (variable_dimension)


State 411

  231 parameter_value_assignment_optional: parameter_value_assignment •

    $default  reduce using rule 231 (parameter_value_assignment_optional)


State 412

  228 data_type_no_identifier: virtual_interface_type identifier parameter_value_assignment_optional • '.' identifier
  229                        | virtual_interface_type identifier parameter_value_assignment_optional •

    '.'  shift, and go to state 641

    $default  reduce using rule 229 (data_type_no_identifier)


State 413

  223 data_type_no_identifier: integer_vector_type signing_optional packed_dimension_list_optional •

    $default  reduce using rule 223 (data_type_no_identifier)


State 414

  260 class_declaration: virtual_optional CLASS lifetime_optional • identifier parameter_port_list_optional extends_class_optional implements_interface_optional ';' class_item_list ENDCLASS block_end_identifier_optional

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 642


State 415

  515 data_declaration: method_variable_qualifier_list data_type variable_decl_assignment_list • ';'
  533 variable_decl_assignment_list: variable_decl_assignment_list • ',' variable_decl_assignment

    ','  shift, and go to state 401
    ';'  shift, and go to state 643


State 416

  535 variable_decl_assignment: identifier • variable_dimension_list_optional '=' expression
  536                         | identifier • variable_dimension_list_optional

    '['  shift, and go to state 403

    $default  reduce using rule 190 (variable_dimension_list_optional)

    variable_dimension_list_optional  go to state 405
    variable_dimension_list           go to state 406
    variable_dimension                go to state 407
    associative_dimension             go to state 408
    unpacked_dimension                go to state 640
    unsized_dimension                 go to state 410


State 417

  516 data_declaration: method_variable_qualifier_list variable_decl_assignment_list ';' •

    $default  reduce using rule 516 (data_declaration)


State 418

  513 data_declaration: variable_qualifier_list data_type variable_decl_assignment_list • ';'
  533 variable_decl_assignment_list: variable_decl_assignment_list • ',' variable_decl_assignment

    ','  shift, and go to state 401
    ';'  shift, and go to state 644


State 419

  514 data_declaration: variable_qualifier_list variable_decl_assignment_list ';' •

    $default  reduce using rule 514 (data_declaration)


State 420

  215 variable_port_type: VAR •

    $default  reduce using rule 215 (variable_port_type)


State 421

  201 net_port_type: INTERCONNECT • signing_optional packed_dimension_list_optional

    UNSIGNED  shift, and go to state 185
    SIGNED    shift, and go to state 186

    $default  reduce using rule 236 (signing_optional)

    signing_optional  go to state 645
    signing           go to state 188


State 422

  202 net_type: SUPPLY0 •

    $default  reduce using rule 202 (net_type)


State 423

  203 net_type: SUPPLY1 •

    $default  reduce using rule 203 (net_type)


State 424

  204 net_type: TRI •

    $default  reduce using rule 204 (net_type)


State 425

  205 net_type: TRIAND •

    $default  reduce using rule 205 (net_type)


State 426

  206 net_type: TRIOR •

    $default  reduce using rule 206 (net_type)


State 427

  207 net_type: TRIREG •

    $default  reduce using rule 207 (net_type)


State 428

  208 net_type: TRI0 •

    $default  reduce using rule 208 (net_type)


State 429

  209 net_type: TRI1 •

    $default  reduce using rule 209 (net_type)


State 430

  210 net_type: UWIRE •

    $default  reduce using rule 210 (net_type)


State 431

  211 net_type: WIRE •

    $default  reduce using rule 211 (net_type)


State 432

  212 net_type: WAND •

    $default  reduce using rule 212 (net_type)


State 433

  213 net_type: WOR •

    $default  reduce using rule 213 (net_type)


State 434

  176 input_declaration: INPUT net_port_type • port_identifier_list

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    port_identifier_list  go to state 646
    identifier            go to state 647


State 435

  200 net_port_type: net_type •

    $default  reduce using rule 200 (net_port_type)


State 436

  177 input_declaration: INPUT variable_port_type • variable_identifier_list

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    variable_identifier_list  go to state 648
    identifier                go to state 649


State 437

  214 variable_port_type: data_type •

    $default  reduce using rule 214 (variable_port_type)


State 438

  178 output_declaration: OUTPUT net_port_type • port_identifier_list

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    port_identifier_list  go to state 650
    identifier            go to state 647


State 439

  179 output_declaration: OUTPUT variable_port_type • variable_identifier_list

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    variable_identifier_list  go to state 651
    identifier                go to state 649


State 440

  175 inout_declaration: INOUT net_port_type • port_identifier_list

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    port_identifier_list  go to state 652
    identifier            go to state 647


State 441

  180 ref_declaration: REF variable_port_type • variable_identifier_list

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    variable_identifier_list  go to state 653
    identifier                go to state 649


State 442

   62 specparam_declaration: SPECPARAM packed_dimension_list_optional • specparam_assignment_list ';'

    PATHPULSE           shift, and go to state 654
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    specparam_assignment_list  go to state 655
    specparam_assignment       go to state 656
    pulse_control_specparam    go to state 657
    identifier                 go to state 658


State 443

  243 packed_dimension: '[' ']' •

    $default  reduce using rule 243 (packed_dimension)


State 444

  244 packed_dimension: '[' part_select_range • ']'

    ']'  shift, and go to state 659


State 445

  628 part_select_range: expression • ':' expression
  629                  | expression • TOK_UPTO expression
  630                  | expression • TOK_DNTO expression
  631                  | expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_UPTO      shift, and go to state 660
    TOK_DNTO      shift, and go to state 661
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522
    ':'           shift, and go to state 662

    $default  reduce using rule 631 (part_select_range)


State 446

  241 packed_dimension_list: packed_dimension_list packed_dimension •

    $default  reduce using rule 241 (packed_dimension_list)


State 447

  626 hierarchical_identifier: hierarchical_identifier '.' identifier • unpacked_dimension_list_optional

    '['  shift, and go to state 215

    $default  reduce using rule 184 (unpacked_dimension_list_optional)

    unpacked_dimension_list_optional  go to state 663
    unpacked_dimension_list           go to state 219
    unpacked_dimension                go to state 220


State 448

  198 unpacked_dimension: '[' part_select_range • ']'

    ']'  shift, and go to state 664


State 449

  149 parameter_value_assignment: '#' '(' • ordered_parameter_assignment_list ')'
  150                           | '#' '(' • named_parameter_assignment_list ')'
  151                           | '#' '(' • ')'

    VIRTUAL             shift, and go to state 141
    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 631
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    VIRTUAL_INTERFACE   shift, and go to state 74
    '('                 shift, and go to state 263
    ')'                 shift, and go to state 665
    '.'                 shift, and go to state 666
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    ordered_parameter_assignment_list  go to state 667
    named_parameter_assignment_list    go to state 668
    ordered_parameter_assignment       go to state 669
    named_parameter_assignment         go to state 670
    param_expression                   go to state 671
    data_type_no_identifier            go to state 672
    virtual_interface_type             go to state 97
    signing                            go to state 266
    constant_primary                   go to state 267
    integer_vector_type                go to state 635
    time_literal                       go to state 269
    primary_literal                    go to state 270
    concatenation                      go to state 271
    multiple_concatenation             go to state 272
    primary                            go to state 273
    casting_type                       go to state 274
    simple_type                        go to state 275
    integer_type                       go to state 276
    integer_atom_type                  go to state 636
    non_integer_type                   go to state 637
    mintypmax_expression               go to state 673
    subroutine_call                    go to state 279
    tf_call                            go to state 280
    implicit_class_handle              go to state 281
    randomize_call                     go to state 282
    ps_identifier                      go to state 283
    ps_or_hierarchical_identifier      go to state 284
    hierarchical_identifier            go to state 285
    expression                         go to state 484
    inc_or_dec_expression              go to state 287
    lvalue                             go to state 288
    identifier                         go to state 289


State 450

  185 unpacked_dimension_list: unpacked_dimension_list unpacked_dimension •

    $default  reduce using rule 185 (unpacked_dimension_list)


State 451

  249 package_declaration: attribute_instance_list PACKAGE lifetime_optional identifier ';' • timeunits_declaration_optional package_item_list_optional ENDPACKAGE block_end_identifier_optional

    TIMEUNIT       shift, and go to state 59
    TIMEPRECISION  shift, and go to state 66

    $default  reduce using rule 560 (timeunits_declaration_optional)

    timeunits_declaration_optional  go to state 674
    timeunits_declaration           go to state 675


State 452

  554 attribute_instance: '(' TOK_MUL attr_spec_list TOK_MUL • ')'

    ')'  shift, and go to state 676


State 453

  555 attr_spec_list: attr_spec_list ',' • identifier '=' constant_primary
  556               | attr_spec_list ',' • identifier

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 677


State 454

  557 attr_spec_list: identifier '=' • constant_primary

    string_literal      shift, and go to state 249
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163

    constant_primary  go to state 678
    time_literal      go to state 269
    primary_literal   go to state 679


State 455

   10 module_nonansi_header: attribute_instance_list module_keyword lifetime_optional identifier package_import_declaration_list • parameter_port_list_optional list_of_ports ';'
   11 module_ansi_header: attribute_instance_list module_keyword lifetime_optional identifier package_import_declaration_list • parameter_port_list_optional port_declaration_list ';'
   31 package_import_declaration_list: package_import_declaration_list • package_import_declaration

    IMPORT  shift, and go to state 26
    '#'     shift, and go to state 680

    $default  reduce using rule 34 (parameter_port_list_optional)

    parameter_port_list_optional  go to state 681
    parameter_port_list           go to state 682
    package_import_declaration    go to state 683


State 456

  168 defparam_assignment_list: defparam_assignment_list ',' defparam_assignment •

    $default  reduce using rule 168 (defparam_assignment_list)


State 457

  170 defparam_assignment: hierarchical_identifier '=' constant_mintypmax_expression •

    $default  reduce using rule 170 (defparam_assignment)


State 458

  509 constant_mintypmax_expression: expression • ':' expression ':' expression
  510                              | expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522
    ':'           shift, and go to state 684

    $default  reduce using rule 510 (constant_mintypmax_expression)


State 459

  544 package_import_item_list: package_import_item_list ',' package_import_item •

    $default  reduce using rule 544 (package_import_item_list)


State 460

  166 module_or_generate_item_declaration: DEFAULT CLOCKING identifier ';' •

    $default  reduce using rule 166 (module_or_generate_item_declaration)


State 461

  306 function_type_name: ps_identifier_tok NEW •

    $default  reduce using rule 306 (function_type_name)


State 462

  299 function_body_declaration: function_type_name ';' • tf_item_declaration_list statement_list_optional ENDFUNCTION function_block_end_identifier_optional

    $default  reduce using rule 472 (tf_item_declaration_list)

    tf_item_declaration_list  go to state 685


State 463

  300 function_body_declaration: function_type_name '(' • tf_port_list_optional ')' ';' block_item_declaration_list statement_list_optional ENDFUNCTION function_block_end_identifier_optional
  301                          | function_type_name '(' • tf_port_list_optional ')' ';' statement_list_optional ENDFUNCTION function_block_end_identifier_optional

    ')'       reduce using rule 314 (tf_port_list_optional)
    $default  reduce using rule 553 (attribute_instance_list)

    tf_port_list_optional    go to state 686
    tf_port_list             go to state 687
    tf_port_item             go to state 688
    attribute_instance_list  go to state 689


State 464

  305 function_type_name: function_data_type SCOPE • NEW

    NEW  shift, and go to state 690


State 465

  304 function_type_name: function_data_type ps_or_hierarchical_identifier •

    $default  reduce using rule 304 (function_type_name)


State 466

  683 expression: TAGGED identifier • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 691
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 467

  552 attribute_instance_list: attribute_instance_list • attribute_instance
  615 randomize_call: RANDOMIZE attribute_instance_list •
  616               | RANDOMIZE attribute_instance_list • '(' identifier_list ')'
  617               | RANDOMIZE attribute_instance_list • '(' ')'
  618               | RANDOMIZE attribute_instance_list • '(' _NULL ')'

    '('  shift, and go to state 692

    $default  reduce using rule 615 (randomize_call)

    attribute_instance  go to state 21


State 468

  610 subroutine_call: STD SCOPE • randomize_call

    RANDOMIZE  shift, and go to state 246

    randomize_call  go to state 693


State 469

  581 primary: '(' • mintypmax_expression ')'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    mintypmax_expression           go to state 483
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 484
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 470

  646 expression: TOK_BIT_NAND primary •

    $default  reduce using rule 646 (expression)


State 471

  575 primary: hierarchical_identifier •
  625 ps_or_hierarchical_identifier: hierarchical_identifier •
  626 hierarchical_identifier: hierarchical_identifier • '.' identifier unpacked_dimension_list_optional

    '.'  shift, and go to state 214

    '('       reduce using rule 625 (ps_or_hierarchical_identifier)
    $default  reduce using rule 575 (primary)


State 472

  648 expression: TOK_BIT_NOR primary •

    $default  reduce using rule 648 (expression)


State 473

  650 expression: TOK_BIT_XNOR primary •

    $default  reduce using rule 650 (expression)


State 474

  641 expression: TOK_PLUS primary •

    $default  reduce using rule 641 (expression)


State 475

  642 expression: TOK_MINUS primary •

    $default  reduce using rule 642 (expression)


State 476

  643 expression: TOK_LOG_NOT primary •

    $default  reduce using rule 643 (expression)


State 477

  645 expression: TOK_BIT_AND primary •

    $default  reduce using rule 645 (expression)


State 478

  647 expression: TOK_BIT_OR primary •

    $default  reduce using rule 647 (expression)


State 479

  649 expression: TOK_BIT_XOR primary •

    $default  reduce using rule 649 (expression)


State 480

  644 expression: TOK_BIT_NOT primary •

    $default  reduce using rule 644 (expression)


State 481

  684 inc_or_dec_expression: TOK_INC lvalue •

    $default  reduce using rule 684 (inc_or_dec_expression)


State 482

  685 inc_or_dec_expression: TOK_DEC lvalue •

    $default  reduce using rule 685 (inc_or_dec_expression)


State 483

  581 primary: '(' mintypmax_expression • ')'

    ')'  shift, and go to state 694


State 484

  606 mintypmax_expression: expression • ':' expression ':' expression
  607                     | expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522
    ':'           shift, and go to state 695

    $default  reduce using rule 607 (mintypmax_expression)


State 485

  652 expression: '(' operator_assignment • ')'

    ')'  shift, and go to state 696


State 486

  686 inc_or_dec_expression: lvalue • TOK_INC
  687                      | lvalue • TOK_DEC
  688 operator_assignment: lvalue • assignment_operator expression

    TOK_INC       shift, and go to state 524
    TOK_DEC       shift, and go to state 525
    TOK_SL_EQ     shift, and go to state 592
    TOK_SR_EQ     shift, and go to state 593
    TOK_SLA_EQ    shift, and go to state 594
    TOK_SRA_EQ    shift, and go to state 595
    TOK_PLUS_EQ   shift, and go to state 596
    TOK_MINUS_EQ  shift, and go to state 597
    TOK_MUL_EQ    shift, and go to state 598
    TOK_DIV_EQ    shift, and go to state 599
    TOK_MOD_EQ    shift, and go to state 600
    TOK_AND_EQ    shift, and go to state 601
    TOK_OR_EQ     shift, and go to state 602
    TOK_XOR_EQ    shift, and go to state 603
    '='           shift, and go to state 697

    assignment_operator  go to state 698


State 487

  577 primary: '{' '}' •

    $default  reduce using rule 577 (primary)


State 488

  570 concatenation: '{' concatenation_expression_list • '}'
  572 concatenation_expression_list: concatenation_expression_list • ',' expression

    ','  shift, and go to state 699
    '}'  shift, and go to state 700


State 489

  571 multiple_concatenation: '{' expression • concatenation '}'
  573 concatenation_expression_list: expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522
    '{'           shift, and go to state 701

    $default  reduce using rule 573 (concatenation_expression_list)

    concatenation  go to state 702


State 490

  582 primary: casting_type TOK_SING_QUOT • '(' expression ')'

    '('  shift, and go to state 703


State 491

  612 tf_call: implicit_class_handle '.' • identifier attribute_instance_list '(' argument_list ')'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 704


State 492

  552 attribute_instance_list: attribute_instance_list • attribute_instance
  611 tf_call: ps_or_hierarchical_identifier attribute_instance_list • '(' argument_list ')'

    '('  shift, and go to state 705

    attribute_instance  go to state 21


State 493

  682 expression: expression INSIDE • '{' value_range_list '}'

    '{'  shift, and go to state 706


State 494

  660 expression: expression TOK_LOG_XEQ • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 707
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 495

  661 expression: expression TOK_LOG_XNEQ • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 708
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 496

  662 expression: expression TOK_LOG_WEQ • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 709
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 497

  663 expression: expression TOK_LOG_WNEQ • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 710
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 498

  677 expression: expression TOK_BIT_SRA • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 711
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 499

  678 expression: expression TOK_BIT_SLA • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 712
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 500

  680 expression: expression TOK_EQUIV • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 713
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 501

  679 expression: expression TOK_IMP • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 714
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 502

  664 expression: expression TOK_LOG_AND • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 715
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 503

  665 expression: expression TOK_LOG_OR • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 716
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 504

  658 expression: expression TOK_LOG_EQ • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 717
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 505

  659 expression: expression TOK_LOG_NEQ • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 718
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 506

  668 expression: expression TOK_LOG_LEQ • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 719
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 507

  670 expression: expression TOK_LOG_GEQ • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 720
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 508

  675 expression: expression TOK_BIT_SR • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 721
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 509

  676 expression: expression TOK_BIT_SL • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 722
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 510

  674 expression: expression TOK_BIT_XNOR • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 723
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 511

  666 expression: expression TOK_PWR • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 724
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 512

  653 expression: expression TOK_PLUS • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 725
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 513

  654 expression: expression TOK_MINUS • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 726
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 514

  655 expression: expression TOK_MUL • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 727
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 515

  656 expression: expression TOK_DIV • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 728
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 516

  657 expression: expression TOK_MOD • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 729
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 517

  667 expression: expression TOK_LOG_LT • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 730
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 518

  669 expression: expression TOK_LOG_GT • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 731
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 519

  671 expression: expression TOK_BIT_AND • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 732
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 520

  672 expression: expression TOK_BIT_OR • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 733
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 521

  673 expression: expression TOK_BIT_XOR • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 734
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 522

  681 expression: expression '?' • expression ':' expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 735
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 523

   95 if_generate_construct: IF '(' expression ')' • generate_block ELSE generate_block
   96                      | IF '(' expression ')' • generate_block

    VIRTUAL             shift, and go to state 23
    RAND                shift, and go to state 24
    DEFPARAM            shift, and go to state 25
    IMPORT              shift, and go to state 26
    DEFAULT             shift, and go to state 27
    CONST               shift, and go to state 28
    FUNCTION            shift, and go to state 29
    STATIC              shift, and go to state 30
    PROTECTED           shift, and go to state 31
    LOCAL               shift, and go to state 32
    RANDC               shift, and go to state 33
    IF                  shift, and go to state 34
    LOCALPARAM          shift, and go to state 35
    PARAMETER           shift, and go to state 36
    VAR                 shift, and go to state 37
    TYPEDEF             shift, and go to state 38
    AUTOMATIC           shift, and go to state 39
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    TASK                shift, and go to state 55
    CASE                shift, and go to state 56
    _BEGIN              shift, and go to state 736
    ALIAS               shift, and go to state 57
    FINAL               shift, and go to state 58
    ASSIGN              shift, and go to state 60
    ALWAYS              shift, and go to state 61
    BIND                shift, and go to state 62
    _INITIAL            shift, and go to state 63
    ALWAYS_LATCH        shift, and go to state 64
    ALWAYS_FF           shift, and go to state 65
    ALWAYS_COMB         shift, and go to state 68
    FOR                 shift, and go to state 70
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    ';'                 shift, and go to state 75
    '$'                 shift, and go to state 76

    $default  reduce using rule 262 (virtual_optional)

    generate_item                         go to state 737
    module_or_generate_item               go to state 393
    module_common_item                    go to state 83
    if_generate_construct                 go to state 84
    case_generate_construct               go to state 85
    loop_generate_construct               go to state 86
    generate_block                        go to state 738
    net_alias                             go to state 87
    continuous_assign                     go to state 88
    bind_directive                        go to state 89
    generic_instantiation                 go to state 90
    always_keyword                        go to state 91
    module_or_generate_item_declaration   go to state 92
    parameter_override                    go to state 93
    data_type                             go to state 95
    data_type_no_identifier               go to state 96
    virtual_interface_type                go to state 97
    integer_vector_type                   go to state 98
    package_or_generate_item_declaration  go to state 99
    class_declaration                     go to state 100
    virtual_optional                      go to state 101
    function_declaration                  go to state 102
    task_declaration                      go to state 103
    local_parameter_declaration           go to state 104
    parameter_declaration                 go to state 105
    data_declaration                      go to state 106
    method_variable_qualifier_list        go to state 107
    variable_qualifier_list               go to state 108
    variable_qualifier                    go to state 109
    method_variable_qualifier             go to state 110
    type_declaration                      go to state 111
    package_import_declaration            go to state 112
    integer_atom_type                     go to state 115
    non_integer_type                      go to state 116
    ps_identifier                         go to state 117
    hierarchical_identifier               go to state 118
    lifetime                              go to state 119
    identifier                            go to state 739


State 524

  686 inc_or_dec_expression: lvalue TOK_INC •

    $default  reduce using rule 686 (inc_or_dec_expression)


State 525

  687 inc_or_dec_expression: lvalue TOK_DEC •

    $default  reduce using rule 687 (inc_or_dec_expression)


State 526

  624 ps_or_hierarchical_identifier: identifier parameter_value_assignment • SCOPE identifier

    SCOPE  shift, and go to state 740


State 527

  504 type_assignment_list: type_assignment_list ',' • type_assignment

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    type_assignment  go to state 741
    identifier       go to state 292


State 528

  511 type_assignment: identifier '=' • data_type

    VIRTUAL             shift, and go to state 141
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    '$'                 shift, and go to state 76

    data_type                go to state 742
    data_type_no_identifier  go to state 96
    virtual_interface_type   go to state 97
    integer_vector_type      go to state 98
    integer_atom_type        go to state 115
    non_integer_type         go to state 116
    ps_identifier            go to state 117
    hierarchical_identifier  go to state 118
    identifier               go to state 120


State 529

  502 param_assignment_list: param_assignment_list ',' param_assignment •

    $default  reduce using rule 502 (param_assignment_list)


State 530

  506 param_assignment: identifier '=' constant_param_expression •

    $default  reduce using rule 506 (param_assignment)


State 531

  508 constant_param_expression: mintypmax_expression •

    $default  reduce using rule 508 (constant_param_expression)


State 532

  542 type_declaration: TYPEDEF INTERFACE CLASS identifier • ';'

    ';'  shift, and go to state 743


State 533

  541 type_declaration: TYPEDEF CLASS identifier ';' •

    $default  reduce using rule 541 (type_declaration)


State 534

  538 type_declaration: TYPEDEF ENUM identifier ';' •

    $default  reduce using rule 538 (type_declaration)


State 535

  539 type_declaration: TYPEDEF STRUCT identifier ';' •

    $default  reduce using rule 539 (type_declaration)


State 536

  540 type_declaration: TYPEDEF UNION identifier ';' •

    $default  reduce using rule 540 (type_declaration)


State 537

  537 type_declaration: TYPEDEF data_type identifier ';' •

    $default  reduce using rule 537 (type_declaration)


State 538

  310 task_body_declaration: ps_or_hierarchical_identifier ';' • tf_item_declaration_list statement_list_optional ENDTASK block_end_identifier_optional

    $default  reduce using rule 472 (tf_item_declaration_list)

    tf_item_declaration_list  go to state 744


State 539

  311 task_body_declaration: ps_or_hierarchical_identifier '(' • tf_port_list_optional ')' ';' block_item_declaration_list statement_list_optional ENDTASK block_end_identifier_optional
  312                      | ps_or_hierarchical_identifier '(' • tf_port_list_optional ')' ';' statement_list_optional ENDTASK block_end_identifier_optional

    ')'       reduce using rule 314 (tf_port_list_optional)
    $default  reduce using rule 553 (attribute_instance_list)

    tf_port_list_optional    go to state 745
    tf_port_list             go to state 687
    tf_port_item             go to state 688
    attribute_instance_list  go to state 689


State 540

   97 case_generate_construct: CASE '(' expression ')' • case_generate_item_list ENDCASE

    DEFAULT             shift, and go to state 746
    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    case_generate_item_list        go to state 747
    case_generate_item             go to state 748
    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    expression_list                go to state 749
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 750
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 541

  129 net_alias: ALIAS lvalue '=' lvalue • lvalue_list ';'

    '='  shift, and go to state 751

    lvalue_list  go to state 752


State 542

  437 disable_statement: DISABLE FORK • ';'

    ';'  shift, and go to state 753


State 543

  436 disable_statement: DISABLE hierarchical_identifier • ';'
  626 hierarchical_identifier: hierarchical_identifier • '.' identifier unpacked_dimension_list_optional

    ';'  shift, and go to state 754
    '.'  shift, and go to state 214


State 544

  423 par_block: FORK block_end_identifier_optional • block_item_declaration_list statement_list join_keyword block_end_identifier_optional
  424          | FORK block_end_identifier_optional • block_item_declaration_list join_keyword block_end_identifier_optional
  425          | FORK block_end_identifier_optional • statement_list join_keyword block_end_identifier_optional
  426          | FORK block_end_identifier_optional • join_keyword block_end_identifier_optional

    JOIN       shift, and go to state 755
    JOIN_ANY   shift, and go to state 756
    JOIN_NONE  shift, and go to state 757

    $default  reduce using rule 553 (attribute_instance_list)

    statement                    go to state 758
    join_keyword                 go to state 759
    block_item_declaration_list  go to state 760
    statement_list               go to state 761
    block_item_declaration       go to state 762
    attribute_instance_list      go to state 763


State 545

  383 loop_statement: FOREACH '(' • identifier '[' identifier_list ']' ')' statement

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 764


State 546

  406 subroutine_call_statement: VOID TOK_SING_QUOT • '(' subroutine_call ')' ';'

    '('  shift, and go to state 765


State 547

  419 seq_block: _BEGIN block_end_identifier_optional • block_item_declaration_list statement_list END block_end_identifier_optional
  420          | _BEGIN block_end_identifier_optional • block_item_declaration_list END block_end_identifier_optional
  421          | _BEGIN block_end_identifier_optional • statement_list END block_end_identifier_optional
  422          | _BEGIN block_end_identifier_optional • END block_end_identifier_optional

    END  shift, and go to state 766

    $default  reduce using rule 553 (attribute_instance_list)

    statement                    go to state 758
    block_item_declaration_list  go to state 767
    statement_list               go to state 768
    block_item_declaration       go to state 762
    attribute_instance_list      go to state 763


State 548

  462 procedural_continuous_assignment: FORCE variable_assignment •

    $default  reduce using rule 462 (procedural_continuous_assignment)


State 549

  380 loop_statement: WHILE '(' • expression ')' statement

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 769
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 550

  378 loop_statement: FOREVER statement •

    $default  reduce using rule 378 (loop_statement)


State 551

  439 wait_statement: WAIT FORK • ';'

    ';'  shift, and go to state 770


State 552

  438 wait_statement: WAIT '(' • expression ')' statement

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 771
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 553

  382 loop_statement: DO statement • WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 772


State 554

  440 wait_statement: WAIT_ORDER '(' • hierarchical_identifier_list ')' action_block

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    hierarchical_identifier_list  go to state 773
    hierarchical_identifier       go to state 774
    identifier                    go to state 133


State 555

  460 procedural_continuous_assignment: ASSIGN variable_assignment •

    $default  reduce using rule 460 (procedural_continuous_assignment)


State 556

  463 procedural_continuous_assignment: RELEASE lvalue •

    $default  reduce using rule 463 (procedural_continuous_assignment)


State 557

  379 loop_statement: REPEAT '(' • expression ')' statement

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 775
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 558

  461 procedural_continuous_assignment: DEASSIGN lvalue •

    $default  reduce using rule 461 (procedural_continuous_assignment)


State 559

  381 loop_statement: FOR '(' • for_initialization ';' expression_optional ';' for_step ')' statement

    VIRTUAL             shift, and go to state 141
    VAR                 shift, and go to state 776
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    '$'                 shift, and go to state 76

    $default  reduce using rule 393 (for_initialization)

    data_type                      go to state 777
    data_type_no_identifier        go to state 96
    virtual_interface_type         go to state 97
    integer_vector_type            go to state 98
    for_initialization             go to state 778
    variable_assignment_list       go to state 779
    for_variable_declaration_list  go to state 780
    for_variable_declaration       go to state 781
    variable_assignment            go to state 166
    integer_atom_type              go to state 115
    non_integer_type               go to state 116
    ps_identifier                  go to state 117
    hierarchical_identifier        go to state 782
    lvalue                         go to state 167
    identifier                     go to state 120


State 560

  466 jump_statement: RETURN ';' •

    $default  reduce using rule 466 (jump_statement)


State 561

  465 jump_statement: RETURN expression • ';'
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522
    ';'           shift, and go to state 783


State 562

  468 jump_statement: CONTINUE ';' •

    $default  reduce using rule 468 (jump_statement)


State 563

  467 jump_statement: BREAK ';' •

    $default  reduce using rule 467 (jump_statement)


State 564

  348 statement_item: SUPER_NEW ';' •

    $default  reduce using rule 348 (statement_item)


State 565

  347 statement_item: SUPER_NEW '(' • argument_list ')' ';'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '.'                 shift, and go to state 784
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    $default  reduce using rule 635 (argument_list)

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    expression_list                go to state 785
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    argument_list                  go to state 786
    identifier_expression_list     go to state 787
    expression                     go to state 750
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 566

  375 cycle_delay: TOK_DLY unsigned_number •

    $default  reduce using rule 375 (cycle_delay)


State 567

  377 cycle_delay: TOK_DLY '(' • expression ')'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 788
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 568

  376 cycle_delay: TOK_DLY identifier •

    $default  reduce using rule 376 (cycle_delay)


State 569

  435 event_trigger: TOK_IMP TOK_LOG_GT • hierarchical_identifier ';'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    hierarchical_identifier  go to state 789
    identifier               go to state 133


State 570

  434 event_trigger: TOK_IMP hierarchical_identifier • ';'
  626 hierarchical_identifier: hierarchical_identifier • '.' identifier unpacked_dimension_list_optional

    ';'  shift, and go to state 790
    '.'  shift, and go to state 214


State 571

  358 delay_value: _1STEP •

    $default  reduce using rule 358 (delay_value)


State 572

  355 delay_value: unsigned_number •
  565 time_literal: unsigned_number • time_unit

    PS  shift, and go to state 366
    US  shift, and go to state 367
    S   shift, and go to state 368
    NS  shift, and go to state 369
    MS  shift, and go to state 370
    FS  shift, and go to state 371

    $default  reduce using rule 355 (delay_value)

    time_unit  go to state 372


State 573

  354 delay_control: '#' '(' • mintypmax_expression ')'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    mintypmax_expression           go to state 791
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 484
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 574

  353 delay_control: '#' delay_value •

    $default  reduce using rule 353 (delay_control)


State 575

  357 delay_value: time_literal •

    $default  reduce using rule 357 (delay_value)


State 576

  356 delay_value: ps_identifier •

    $default  reduce using rule 356 (delay_value)


State 577

  361 event_control: '@' TOK_MUL •

    $default  reduce using rule 361 (event_control)


State 578

  360 event_control: '@' '(' • event_expression ')'
  362              | '@' '(' • TOK_MUL ')'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    POSEDGE             shift, and go to state 792
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    NEGEDGE             shift, and go to state 793
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    EDGE                shift, and go to state 794
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_MUL             shift, and go to state 795
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 796
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    event_expression               go to state 797
    edge_identifier                go to state 798
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 799
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 579

  359 event_control: '@' hierarchical_identifier •
  626 hierarchical_identifier: hierarchical_identifier • '.' identifier unpacked_dimension_list_optional

    '.'  shift, and go to state 214

    $default  reduce using rule 359 (event_control)


State 580

  349 procedural_timing_control_statement: procedural_timing_control statement •

    $default  reduce using rule 349 (procedural_timing_control_statement)


State 581

  400 conditional_statement: unique_priority_optional IF • '(' cond_predicate ')' statement else_if_list
  401                      | unique_priority_optional IF • '(' cond_predicate ')' statement else_if_list ELSE statement

    '('  shift, and go to state 800


State 582

  411 case_keyword: CASE •

    $default  reduce using rule 411 (case_keyword)


State 583

  412 case_keyword: CASEZ •

    $default  reduce using rule 412 (case_keyword)


State 584

  413 case_keyword: CASEX •

    $default  reduce using rule 413 (case_keyword)


State 585

  404 case_statement: unique_priority_optional case_keyword • '(' expression ')' case_item_list ENDCASE

    '('  shift, and go to state 801


State 586

  332 statement_item: blocking_assignment ';' •

    $default  reduce using rule 332 (statement_item)


State 587

  333 statement_item: nonblocking_assignment ';' •

    $default  reduce using rule 333 (statement_item)


State 588

  334 statement_item: procedural_continuous_assignment ';' •

    $default  reduce using rule 334 (statement_item)


State 589

  405 subroutine_call_statement: subroutine_call ';' •

    $default  reduce using rule 405 (subroutine_call_statement)


State 590

  337 statement_item: inc_or_dec_expression ';' •

    $default  reduce using rule 337 (statement_item)


State 591

  458 nonblocking_assignment: lvalue TOK_LOG_LEQ • delay_or_event_control expression
  459                       | lvalue TOK_LOG_LEQ • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    REPEAT              shift, and go to state 802
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '#'                 shift, and go to state 339
    '$'                 shift, and go to state 264
    '@'                 shift, and go to state 340
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    delay_or_event_control         go to state 803
    delay_control                  go to state 804
    event_control                  go to state 805
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 806
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 592

  117 assignment_operator: TOK_SL_EQ •

    $default  reduce using rule 117 (assignment_operator)


State 593

  118 assignment_operator: TOK_SR_EQ •

    $default  reduce using rule 118 (assignment_operator)


State 594

  119 assignment_operator: TOK_SLA_EQ •

    $default  reduce using rule 119 (assignment_operator)


State 595

  120 assignment_operator: TOK_SRA_EQ •

    $default  reduce using rule 120 (assignment_operator)


State 596

  121 assignment_operator: TOK_PLUS_EQ •

    $default  reduce using rule 121 (assignment_operator)


State 597

  122 assignment_operator: TOK_MINUS_EQ •

    $default  reduce using rule 122 (assignment_operator)


State 598

  123 assignment_operator: TOK_MUL_EQ •

    $default  reduce using rule 123 (assignment_operator)


State 599

  124 assignment_operator: TOK_DIV_EQ •

    $default  reduce using rule 124 (assignment_operator)


State 600

  125 assignment_operator: TOK_MOD_EQ •

    $default  reduce using rule 125 (assignment_operator)


State 601

  126 assignment_operator: TOK_AND_EQ •

    $default  reduce using rule 126 (assignment_operator)


State 602

  127 assignment_operator: TOK_OR_EQ •

    $default  reduce using rule 127 (assignment_operator)


State 603

  128 assignment_operator: TOK_XOR_EQ •

    $default  reduce using rule 128 (assignment_operator)


State 604

  116 assignment_operator: '=' •
  446 blocking_assignment: lvalue '=' • delay_or_event_control expression

    REPEAT  shift, and go to state 802
    '#'     shift, and go to state 339
    '@'     shift, and go to state 340

    $default  reduce using rule 116 (assignment_operator)

    delay_or_event_control  go to state 807
    delay_control           go to state 804
    event_control           go to state 805


State 605

  447 blocking_assignment: lvalue assignment_operator • dynamic_array_new
  448                    | lvalue assignment_operator • class_new
  688 operator_assignment: lvalue assignment_operator • expression

    CONST               shift, and go to state 241
    NEW                 shift, and go to state 808
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 809
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    class_new                      go to state 810
    class_scope                    go to state 811
    dynamic_array_new              go to state 812
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 813
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 814


State 606

  561 timeunits_declaration: TIMEUNIT time_literal TOK_DIV time_literal • ';'

    ';'  shift, and go to state 815


State 607

  563 timeunits_declaration: TIMEUNIT time_literal ';' TIMEPRECISION • time_literal ';'

    unsigned_number     shift, and go to state 162
    fixed_point_number  shift, and go to state 163

    time_literal  go to state 816


State 608

  394 variable_assignment_list: variable_assignment_list ',' variable_assignment •

    $default  reduce using rule 394 (variable_assignment_list)


State 609

  464 variable_assignment: lvalue '=' expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 464 (variable_assignment)


State 610

  133 bind_directive: BIND hierarchical_identifier generic_instantiation ';' •

    $default  reduce using rule 133 (bind_directive)


State 611

  140 name_of_instance: identifier • unpacked_dimension_list_optional

    '['  shift, and go to state 215

    $default  reduce using rule 184 (unpacked_dimension_list_optional)

    unpacked_dimension_list_optional  go to state 404
    unpacked_dimension_list           go to state 219
    unpacked_dimension                go to state 220


State 612

  564 timeunits_declaration: TIMEPRECISION time_literal ';' TIMEUNIT • time_literal ';'

    unsigned_number     shift, and go to state 162
    fixed_point_number  shift, and go to state 163

    time_literal  go to state 817


State 613

   74 showcancelled_declaration: NOSHOWCANCELLED path_output_list • ';'
   75 path_output_list: path_output_list • ',' specify_terminal_descriptor

    ','  shift, and go to state 818
    ';'  shift, and go to state 819


State 614

   76 path_output_list: specify_terminal_descriptor •

    $default  reduce using rule 76 (path_output_list)


State 615

   77 specify_terminal_descriptor: hierarchical_identifier •
  626 hierarchical_identifier: hierarchical_identifier • '.' identifier unpacked_dimension_list_optional

    '.'  shift, and go to state 214

    $default  reduce using rule 77 (specify_terminal_descriptor)


State 616

   73 showcancelled_declaration: SHOWCANCELLED path_output_list • ';'
   75 path_output_list: path_output_list • ',' specify_terminal_descriptor

    ','  shift, and go to state 818
    ';'  shift, and go to state 820


State 617

   72 pulsestyle_declaration: PULSESTYLE_ONDETECT path_output_list • ';'
   75 path_output_list: path_output_list • ',' specify_terminal_descriptor

    ','  shift, and go to state 818
    ';'  shift, and go to state 821


State 618

   71 pulsestyle_declaration: PULSESTYLE_ONEVENT path_output_list • ';'
   75 path_output_list: path_output_list • ',' specify_terminal_descriptor

    ','  shift, and go to state 818
    ';'  shift, and go to state 822


State 619

  109 genvar_initialization: GENVAR identifier • '=' expression

    '='  shift, and go to state 823


State 620

  103 loop_generate_construct: FOR '(' genvar_initialization ';' • expression ';' genvar_iteration ')' generate_block

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 824
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 621

  110 genvar_initialization: identifier '=' • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 825
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 622

  622 ps_identifier: '$' UNIT SCOPE identifier •

    $default  reduce using rule 622 (ps_identifier)


State 623

  135 hierarchical_instance_list: hierarchical_instance_list ',' hierarchical_instance •

    $default  reduce using rule 135 (hierarchical_instance_list)


State 624

  139 hierarchical_instance: name_of_instance '(' ')' •

    $default  reduce using rule 139 (hierarchical_instance)


State 625

  137 hierarchical_instance: name_of_instance '(' ordered_port_connection_list • ')'
  141 ordered_port_connection_list: ordered_port_connection_list • ',' ordered_port_connection

    ','  shift, and go to state 826
    ')'  shift, and go to state 827


State 626

  142 ordered_port_connection_list: ordered_port_connection •

    $default  reduce using rule 142 (ordered_port_connection_list)


State 627

  138 hierarchical_instance: name_of_instance '(' named_port_connection_list • ')'
  144 named_port_connection_list: named_port_connection_list • ',' named_port_connection

    ','  shift, and go to state 828
    ')'  shift, and go to state 829


State 628

  145 named_port_connection_list: named_port_connection •

    $default  reduce using rule 145 (named_port_connection_list)


State 629

  143 ordered_port_connection: attribute_instance_list • expression
  146 named_port_connection: attribute_instance_list • '.' identifier '(' expression_optional ')'
  147                      | attribute_instance_list • '.' identifier
  148                      | attribute_instance_list • '.' TOK_MUL
  552 attribute_instance_list: attribute_instance_list • attribute_instance

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 830
    '.'                 shift, and go to state 831
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    attribute_instance             go to state 21
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 832
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 630

  533 variable_decl_assignment_list: variable_decl_assignment_list ',' variable_decl_assignment •

    $default  reduce using rule 533 (variable_decl_assignment_list)


State 631

  226 data_type_no_identifier: STRING •
  588 casting_type: STRING •

    TOK_SING_QUOT  reduce using rule 588 (casting_type)
    $default       reduce using rule 226 (data_type_no_identifier)


State 632

  197 associative_dimension: '[' TOK_MUL • ']'

    ']'  shift, and go to state 833


State 633

  199 unsized_dimension: '[' ']' •

    $default  reduce using rule 199 (unsized_dimension)


State 634

  196 associative_dimension: '[' data_type_no_identifier • ']'

    ']'  shift, and go to state 834


State 635

  223 data_type_no_identifier: integer_vector_type • signing_optional packed_dimension_list_optional
  595 integer_type: integer_vector_type •

    UNSIGNED  shift, and go to state 185
    SIGNED    shift, and go to state 186

    TOK_SING_QUOT  reduce using rule 595 (integer_type)
    $default       reduce using rule 236 (signing_optional)

    signing_optional  go to state 187
    signing           go to state 188


State 636

  224 data_type_no_identifier: integer_atom_type • signing_optional
  596 integer_type: integer_atom_type •

    UNSIGNED  shift, and go to state 185
    SIGNED    shift, and go to state 186

    TOK_SING_QUOT  reduce using rule 596 (integer_type)
    $default       reduce using rule 236 (signing_optional)

    signing_optional  go to state 209
    signing           go to state 188


State 637

  225 data_type_no_identifier: non_integer_type •
  592 simple_type: non_integer_type •

    TOK_SING_QUOT  reduce using rule 592 (simple_type)
    $default       reduce using rule 225 (data_type_no_identifier)


State 638

  535 variable_decl_assignment: identifier variable_dimension_list_optional '=' • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 835
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 639

  191 variable_dimension_list: variable_dimension_list variable_dimension •

    $default  reduce using rule 191 (variable_dimension_list)


State 640

  194 variable_dimension: unpacked_dimension •

    $default  reduce using rule 194 (variable_dimension)


State 641

  228 data_type_no_identifier: virtual_interface_type identifier parameter_value_assignment_optional '.' • identifier

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 836


State 642

  260 class_declaration: virtual_optional CLASS lifetime_optional identifier • parameter_port_list_optional extends_class_optional implements_interface_optional ';' class_item_list ENDCLASS block_end_identifier_optional

    '#'  shift, and go to state 680

    $default  reduce using rule 34 (parameter_port_list_optional)

    parameter_port_list_optional  go to state 837
    parameter_port_list           go to state 682


State 643

  515 data_declaration: method_variable_qualifier_list data_type variable_decl_assignment_list ';' •

    $default  reduce using rule 515 (data_declaration)


State 644

  513 data_declaration: variable_qualifier_list data_type variable_decl_assignment_list ';' •

    $default  reduce using rule 513 (data_declaration)


State 645

  201 net_port_type: INTERCONNECT signing_optional • packed_dimension_list_optional

    '['  shift, and go to state 210

    $default  reduce using rule 238 (packed_dimension_list_optional)

    packed_dimension_list_optional  go to state 838
    packed_dimension_list           go to state 212
    packed_dimension                go to state 213


State 646

  176 input_declaration: INPUT net_port_type port_identifier_list •
  181 port_identifier_list: port_identifier_list • ',' identifier unpacked_dimension_list_optional

    ','  shift, and go to state 839

    $default  reduce using rule 176 (input_declaration)


State 647

  182 port_identifier_list: identifier • unpacked_dimension_list_optional

    '['  shift, and go to state 215

    $default  reduce using rule 184 (unpacked_dimension_list_optional)

    unpacked_dimension_list_optional  go to state 840
    unpacked_dimension_list           go to state 219
    unpacked_dimension                go to state 220


State 648

  177 input_declaration: INPUT variable_port_type variable_identifier_list •
  187 variable_identifier_list: variable_identifier_list • ',' identifier variable_dimension_list_optional

    ','  shift, and go to state 841

    $default  reduce using rule 177 (input_declaration)


State 649

  188 variable_identifier_list: identifier • variable_dimension_list_optional

    '['  shift, and go to state 403

    $default  reduce using rule 190 (variable_dimension_list_optional)

    variable_dimension_list_optional  go to state 842
    variable_dimension_list           go to state 406
    variable_dimension                go to state 407
    associative_dimension             go to state 408
    unpacked_dimension                go to state 640
    unsized_dimension                 go to state 410


State 650

  178 output_declaration: OUTPUT net_port_type port_identifier_list •
  181 port_identifier_list: port_identifier_list • ',' identifier unpacked_dimension_list_optional

    ','  shift, and go to state 839

    $default  reduce using rule 178 (output_declaration)


State 651

  179 output_declaration: OUTPUT variable_port_type variable_identifier_list •
  187 variable_identifier_list: variable_identifier_list • ',' identifier variable_dimension_list_optional

    ','  shift, and go to state 841

    $default  reduce using rule 179 (output_declaration)


State 652

  175 inout_declaration: INOUT net_port_type port_identifier_list •
  181 port_identifier_list: port_identifier_list • ',' identifier unpacked_dimension_list_optional

    ','  shift, and go to state 839

    $default  reduce using rule 175 (inout_declaration)


State 653

  180 ref_declaration: REF variable_port_type variable_identifier_list •
  187 variable_identifier_list: variable_identifier_list • ',' identifier variable_dimension_list_optional

    ','  shift, and go to state 841

    $default  reduce using rule 180 (ref_declaration)


State 654

   67 pulse_control_specparam: PATHPULSE • '$' '=' '(' constant_mintypmax_expression ',' constant_mintypmax_expression ')'
   68                        | PATHPULSE • '$' '=' '(' constant_mintypmax_expression ')'
   69                        | PATHPULSE • '$' hierarchical_identifier '$' hierarchical_identifier '=' '(' constant_mintypmax_expression ',' constant_mintypmax_expression ')'
   70                        | PATHPULSE • '$' hierarchical_identifier '$' hierarchical_identifier '=' '(' constant_mintypmax_expression ')'

    '$'  shift, and go to state 843


State 655

   62 specparam_declaration: SPECPARAM packed_dimension_list_optional specparam_assignment_list • ';'
   63 specparam_assignment_list: specparam_assignment_list • ',' specparam_assignment

    ','  shift, and go to state 844
    ';'  shift, and go to state 845


State 656

   64 specparam_assignment_list: specparam_assignment •

    $default  reduce using rule 64 (specparam_assignment_list)


State 657

   66 specparam_assignment: pulse_control_specparam •

    $default  reduce using rule 66 (specparam_assignment)


State 658

   65 specparam_assignment: identifier • '=' constant_mintypmax_expression

    '='  shift, and go to state 846


State 659

  244 packed_dimension: '[' part_select_range ']' •

    $default  reduce using rule 244 (packed_dimension)


State 660

  629 part_select_range: expression TOK_UPTO • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 847
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 661

  630 part_select_range: expression TOK_DNTO • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 848
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 662

  628 part_select_range: expression ':' • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 849
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 663

  626 hierarchical_identifier: hierarchical_identifier '.' identifier unpacked_dimension_list_optional •

    $default  reduce using rule 626 (hierarchical_identifier)


State 664

  198 unpacked_dimension: '[' part_select_range ']' •

    $default  reduce using rule 198 (unpacked_dimension)


State 665

  151 parameter_value_assignment: '#' '(' ')' •

    $default  reduce using rule 151 (parameter_value_assignment)


State 666

  157 named_parameter_assignment: '.' • identifier '(' param_expression ')'
  158                           | '.' • identifier '(' ')'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 850


State 667

  149 parameter_value_assignment: '#' '(' ordered_parameter_assignment_list • ')'
  152 ordered_parameter_assignment_list: ordered_parameter_assignment_list • ',' ordered_parameter_assignment

    ','  shift, and go to state 851
    ')'  shift, and go to state 852


State 668

  150 parameter_value_assignment: '#' '(' named_parameter_assignment_list • ')'
  154 named_parameter_assignment_list: named_parameter_assignment_list • ',' named_parameter_assignment

    ','  shift, and go to state 853
    ')'  shift, and go to state 854


State 669

  153 ordered_parameter_assignment_list: ordered_parameter_assignment •

    $default  reduce using rule 153 (ordered_parameter_assignment_list)


State 670

  155 named_parameter_assignment_list: named_parameter_assignment •

    $default  reduce using rule 155 (named_parameter_assignment_list)


State 671

  156 ordered_parameter_assignment: param_expression •

    $default  reduce using rule 156 (ordered_parameter_assignment)


State 672

  160 param_expression: data_type_no_identifier •

    $default  reduce using rule 160 (param_expression)


State 673

  159 param_expression: mintypmax_expression •

    $default  reduce using rule 159 (param_expression)


State 674

  249 package_declaration: attribute_instance_list PACKAGE lifetime_optional identifier ';' timeunits_declaration_optional • package_item_list_optional ENDPACKAGE block_end_identifier_optional

    $default  reduce using rule 251 (package_item_list_optional)

    package_item_list_optional  go to state 855


State 675

  559 timeunits_declaration_optional: timeunits_declaration •

    $default  reduce using rule 559 (timeunits_declaration_optional)


State 676

  554 attribute_instance: '(' TOK_MUL attr_spec_list TOK_MUL ')' •

    $default  reduce using rule 554 (attribute_instance)


State 677

  555 attr_spec_list: attr_spec_list ',' identifier • '=' constant_primary
  556               | attr_spec_list ',' identifier •

    '='  shift, and go to state 856

    $default  reduce using rule 556 (attr_spec_list)


State 678

  557 attr_spec_list: identifier '=' constant_primary •

    $default  reduce using rule 557 (attr_spec_list)


State 679

  245 constant_primary: primary_literal •

    $default  reduce using rule 245 (constant_primary)


State 680

   35 parameter_port_list: '#' • '(' param_assignment_list ')'
   36                    | '#' • '(' parameter_port_declaration ')'
   37                    | '#' • '(' ')'

    '('  shift, and go to state 857


State 681

   10 module_nonansi_header: attribute_instance_list module_keyword lifetime_optional identifier package_import_declaration_list parameter_port_list_optional • list_of_ports ';'
   11 module_ansi_header: attribute_instance_list module_keyword lifetime_optional identifier package_import_declaration_list parameter_port_list_optional • port_declaration_list ';'

    '('  shift, and go to state 858

    $default  reduce using rule 14 (port_declaration_list)

    port_declaration_list  go to state 859
    list_of_ports          go to state 860


State 682

   33 parameter_port_list_optional: parameter_port_list •

    $default  reduce using rule 33 (parameter_port_list_optional)


State 683

   31 package_import_declaration_list: package_import_declaration_list package_import_declaration •

    $default  reduce using rule 31 (package_import_declaration_list)


State 684

  509 constant_mintypmax_expression: expression ':' • expression ':' expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 861
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 685

  299 function_body_declaration: function_type_name ';' tf_item_declaration_list • statement_list_optional ENDFUNCTION function_block_end_identifier_optional
  471 tf_item_declaration_list: tf_item_declaration_list • tf_item_declaration

    ENDFUNCTION  reduce using rule 327 (statement_list_optional)
    $default     reduce using rule 553 (attribute_instance_list)

    statement_list_optional  go to state 862
    statement                go to state 758
    statement_list           go to state 863
    tf_item_declaration      go to state 864
    block_item_declaration   go to state 865
    attribute_instance_list  go to state 763


State 686

  300 function_body_declaration: function_type_name '(' tf_port_list_optional • ')' ';' block_item_declaration_list statement_list_optional ENDFUNCTION function_block_end_identifier_optional
  301                          | function_type_name '(' tf_port_list_optional • ')' ';' statement_list_optional ENDFUNCTION function_block_end_identifier_optional

    ')'  shift, and go to state 866


State 687

  313 tf_port_list_optional: tf_port_list •
  315 tf_port_list: tf_port_list • ',' tf_port_item

    ','  shift, and go to state 867

    $default  reduce using rule 313 (tf_port_list_optional)


State 688

  316 tf_port_list: tf_port_item •

    $default  reduce using rule 316 (tf_port_list)


State 689

  317 tf_port_item: attribute_instance_list • tf_port_direction VAR data_type identifier variable_dimension_list_optional equals_expression_optional
  318             | attribute_instance_list • tf_port_direction VAR data_type equals_expression_optional
  319             | attribute_instance_list • tf_port_direction data_type identifier variable_dimension_list_optional equals_expression_optional
  320             | attribute_instance_list • tf_port_direction data_type equals_expression_optional
  552 attribute_instance_list: attribute_instance_list • attribute_instance

    INPUT   shift, and go to state 868
    OUTPUT  shift, and go to state 869
    INOUT   shift, and go to state 870
    REF     shift, and go to state 871
    CONST   shift, and go to state 872
    '('     shift, and go to state 19

    $default  reduce using rule 325 (tf_port_direction)

    port_direction      go to state 873
    tf_port_direction   go to state 874
    attribute_instance  go to state 21


State 690

  305 function_type_name: function_data_type SCOPE NEW •

    $default  reduce using rule 305 (function_type_name)


State 691

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'
  683           | TAGGED identifier expression •

    $default  reduce using rule 683 (expression)


State 692

  554 attribute_instance: '(' • TOK_MUL attr_spec_list TOK_MUL ')'
  616 randomize_call: RANDOMIZE attribute_instance_list '(' • identifier_list ')'
  617               | RANDOMIZE attribute_instance_list '(' • ')'
  618               | RANDOMIZE attribute_instance_list '(' • _NULL ')'

    _NULL               shift, and go to state 875
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    TOK_MUL             shift, and go to state 126
    ')'                 shift, and go to state 876

    identifier_list  go to state 877
    identifier       go to state 878


State 693

  610 subroutine_call: STD SCOPE randomize_call •

    $default  reduce using rule 610 (subroutine_call)


State 694

  581 primary: '(' mintypmax_expression ')' •

    $default  reduce using rule 581 (primary)


State 695

  606 mintypmax_expression: expression ':' • expression ':' expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 879
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 696

  652 expression: '(' operator_assignment ')' •

    $default  reduce using rule 652 (expression)


State 697

  116 assignment_operator: '=' •

    $default  reduce using rule 116 (assignment_operator)


State 698

  688 operator_assignment: lvalue assignment_operator • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 813
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 699

  572 concatenation_expression_list: concatenation_expression_list ',' • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 880
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 700

  570 concatenation: '{' concatenation_expression_list '}' •

    $default  reduce using rule 570 (concatenation)


State 701

  570 concatenation: '{' • concatenation_expression_list '}'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    concatenation_expression_list  go to state 488
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 881
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 702

  571 multiple_concatenation: '{' expression concatenation • '}'

    '}'  shift, and go to state 882


State 703

  582 primary: casting_type TOK_SING_QUOT '(' • expression ')'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 883
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 704

  612 tf_call: implicit_class_handle '.' identifier • attribute_instance_list '(' argument_list ')'

    $default  reduce using rule 553 (attribute_instance_list)

    attribute_instance_list  go to state 884


State 705

  554 attribute_instance: '(' • TOK_MUL attr_spec_list TOK_MUL ')'
  611 tf_call: ps_or_hierarchical_identifier attribute_instance_list '(' • argument_list ')'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_MUL             shift, and go to state 126
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '.'                 shift, and go to state 784
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    $default  reduce using rule 635 (argument_list)

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    expression_list                go to state 785
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    argument_list                  go to state 885
    identifier_expression_list     go to state 787
    expression                     go to state 750
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 706

  682 expression: expression INSIDE '{' • value_range_list '}'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '['                 shift, and go to state 886
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 887
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    value_range_list               go to state 888
    value_range                    go to state 889
    identifier                     go to state 289


State 707

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  660           | expression TOK_LOG_XEQ expression •
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 660 (expression)


State 708

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  661           | expression TOK_LOG_XNEQ expression •
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 661 (expression)


State 709

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  662           | expression TOK_LOG_WEQ expression •
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 662 (expression)


State 710

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  663           | expression TOK_LOG_WNEQ expression •
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 663 (expression)


State 711

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  677           | expression TOK_BIT_SRA expression •
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 677 (expression)


State 712

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  678           | expression TOK_BIT_SLA expression •
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 678 (expression)


State 713

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  680           | expression TOK_EQUIV expression •
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 680 (expression)


State 714

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  679           | expression TOK_IMP expression •
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 679 (expression)


State 715

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  664           | expression TOK_LOG_AND expression •
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 664 (expression)


State 716

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  665           | expression TOK_LOG_OR expression •
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 665 (expression)


State 717

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  658           | expression TOK_LOG_EQ expression •
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 658 (expression)


State 718

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  659           | expression TOK_LOG_NEQ expression •
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 659 (expression)


State 719

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  668           | expression TOK_LOG_LEQ expression •
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 668 (expression)


State 720

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  670           | expression TOK_LOG_GEQ expression •
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 670 (expression)


State 721

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  675           | expression TOK_BIT_SR expression •
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 675 (expression)


State 722

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  676           | expression TOK_BIT_SL expression •
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE       shift, and go to state 493
    TOK_MUL      shift, and go to state 514
    TOK_DIV      shift, and go to state 515
    TOK_MOD      shift, and go to state 516
    TOK_LOG_LT   shift, and go to state 517
    TOK_LOG_GT   shift, and go to state 518
    TOK_BIT_AND  shift, and go to state 519
    TOK_BIT_OR   shift, and go to state 520
    TOK_BIT_XOR  shift, and go to state 521
    '?'          shift, and go to state 522

    $default  reduce using rule 676 (expression)


State 723

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  674           | expression TOK_BIT_XNOR expression •
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE       shift, and go to state 493
    TOK_MUL      shift, and go to state 514
    TOK_DIV      shift, and go to state 515
    TOK_MOD      shift, and go to state 516
    TOK_LOG_LT   shift, and go to state 517
    TOK_LOG_GT   shift, and go to state 518
    TOK_BIT_AND  shift, and go to state 519
    TOK_BIT_OR   shift, and go to state 520
    TOK_BIT_XOR  shift, and go to state 521
    '?'          shift, and go to state 522

    $default  reduce using rule 674 (expression)


State 724

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  666           | expression TOK_PWR expression •
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE       shift, and go to state 493
    TOK_MUL      shift, and go to state 514
    TOK_DIV      shift, and go to state 515
    TOK_MOD      shift, and go to state 516
    TOK_LOG_LT   shift, and go to state 517
    TOK_LOG_GT   shift, and go to state 518
    TOK_BIT_AND  shift, and go to state 519
    TOK_BIT_OR   shift, and go to state 520
    TOK_BIT_XOR  shift, and go to state 521
    '?'          shift, and go to state 522

    $default  reduce using rule 666 (expression)


State 725

  653 expression: expression • TOK_PLUS expression
  653           | expression TOK_PLUS expression •
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE       shift, and go to state 493
    TOK_MUL      shift, and go to state 514
    TOK_DIV      shift, and go to state 515
    TOK_MOD      shift, and go to state 516
    TOK_LOG_LT   shift, and go to state 517
    TOK_LOG_GT   shift, and go to state 518
    TOK_BIT_AND  shift, and go to state 519
    TOK_BIT_OR   shift, and go to state 520
    TOK_BIT_XOR  shift, and go to state 521
    '?'          shift, and go to state 522

    $default  reduce using rule 653 (expression)


State 726

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  654           | expression TOK_MINUS expression •
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE       shift, and go to state 493
    TOK_MUL      shift, and go to state 514
    TOK_DIV      shift, and go to state 515
    TOK_MOD      shift, and go to state 516
    TOK_LOG_LT   shift, and go to state 517
    TOK_LOG_GT   shift, and go to state 518
    TOK_BIT_AND  shift, and go to state 519
    TOK_BIT_OR   shift, and go to state 520
    TOK_BIT_XOR  shift, and go to state 521
    '?'          shift, and go to state 522

    $default  reduce using rule 654 (expression)


State 727

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  655           | expression TOK_MUL expression •
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE       shift, and go to state 493
    TOK_BIT_XOR  shift, and go to state 521
    '?'          shift, and go to state 522

    $default  reduce using rule 655 (expression)


State 728

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  656           | expression TOK_DIV expression •
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE       shift, and go to state 493
    TOK_BIT_XOR  shift, and go to state 521
    '?'          shift, and go to state 522

    $default  reduce using rule 656 (expression)


State 729

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  657           | expression TOK_MOD expression •
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE       shift, and go to state 493
    TOK_BIT_XOR  shift, and go to state 521
    '?'          shift, and go to state 522

    $default  reduce using rule 657 (expression)


State 730

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  667           | expression TOK_LOG_LT expression •
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE       shift, and go to state 493
    TOK_BIT_XOR  shift, and go to state 521
    '?'          shift, and go to state 522

    $default  reduce using rule 667 (expression)


State 731

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  669           | expression TOK_LOG_GT expression •
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE       shift, and go to state 493
    TOK_BIT_XOR  shift, and go to state 521
    '?'          shift, and go to state 522

    $default  reduce using rule 669 (expression)


State 732

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  671           | expression TOK_BIT_AND expression •
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE       shift, and go to state 493
    TOK_BIT_XOR  shift, and go to state 521
    '?'          shift, and go to state 522

    $default  reduce using rule 671 (expression)


State 733

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  672           | expression TOK_BIT_OR expression •
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE       shift, and go to state 493
    TOK_BIT_XOR  shift, and go to state 521
    '?'          shift, and go to state 522

    $default  reduce using rule 672 (expression)


State 734

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  673           | expression TOK_BIT_XOR expression •
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE  shift, and go to state 493
    '?'     shift, and go to state 522

    $default  reduce using rule 673 (expression)


State 735

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  681           | expression '?' expression • ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522
    ':'           shift, and go to state 890


State 736

  107 generate_block: _BEGIN • ':' identifier generate_item_list END block_end_identifier_optional
  108               | _BEGIN • generate_item_list END block_end_identifier_optional

    ':'  shift, and go to state 891

    $default  reduce using rule 80 (generate_item_list)

    generate_item_list  go to state 892


State 737

  104 generate_block: generate_item •

    $default  reduce using rule 104 (generate_block)


State 738

   95 if_generate_construct: IF '(' expression ')' generate_block • ELSE generate_block
   96                      | IF '(' expression ')' generate_block •

    ELSE  shift, and go to state 893

    $default  reduce using rule 96 (if_generate_construct)


State 739

  105 generate_block: identifier • ':' _BEGIN ':' identifier generate_item_list END block_end_identifier_optional
  106               | identifier • ':' _BEGIN generate_item_list END block_end_identifier_optional
  222 data_type: identifier • parameter_value_assignment
  627 hierarchical_identifier: identifier • unpacked_dimension_list_optional

    ':'  shift, and go to state 894
    '['  shift, and go to state 215
    '#'  shift, and go to state 216

    $default  reduce using rule 184 (unpacked_dimension_list_optional)

    parameter_value_assignment        go to state 217
    unpacked_dimension_list_optional  go to state 218
    unpacked_dimension_list           go to state 219
    unpacked_dimension                go to state 220


State 740

  624 ps_or_hierarchical_identifier: identifier parameter_value_assignment SCOPE • identifier

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 895


State 741

  504 type_assignment_list: type_assignment_list ',' type_assignment •

    $default  reduce using rule 504 (type_assignment_list)


State 742

  511 type_assignment: identifier '=' data_type •

    $default  reduce using rule 511 (type_assignment)


State 743

  542 type_declaration: TYPEDEF INTERFACE CLASS identifier ';' •

    $default  reduce using rule 542 (type_declaration)


State 744

  310 task_body_declaration: ps_or_hierarchical_identifier ';' tf_item_declaration_list • statement_list_optional ENDTASK block_end_identifier_optional
  471 tf_item_declaration_list: tf_item_declaration_list • tf_item_declaration

    ENDTASK   reduce using rule 327 (statement_list_optional)
    $default  reduce using rule 553 (attribute_instance_list)

    statement_list_optional  go to state 896
    statement                go to state 758
    statement_list           go to state 863
    tf_item_declaration      go to state 864
    block_item_declaration   go to state 865
    attribute_instance_list  go to state 763


State 745

  311 task_body_declaration: ps_or_hierarchical_identifier '(' tf_port_list_optional • ')' ';' block_item_declaration_list statement_list_optional ENDTASK block_end_identifier_optional
  312                      | ps_or_hierarchical_identifier '(' tf_port_list_optional • ')' ';' statement_list_optional ENDTASK block_end_identifier_optional

    ')'  shift, and go to state 897


State 746

  101 case_generate_item: DEFAULT • ':' generate_block
  102                   | DEFAULT • generate_block

    VIRTUAL             shift, and go to state 23
    RAND                shift, and go to state 24
    DEFPARAM            shift, and go to state 25
    IMPORT              shift, and go to state 26
    DEFAULT             shift, and go to state 27
    CONST               shift, and go to state 28
    FUNCTION            shift, and go to state 29
    STATIC              shift, and go to state 30
    PROTECTED           shift, and go to state 31
    LOCAL               shift, and go to state 32
    RANDC               shift, and go to state 33
    IF                  shift, and go to state 34
    LOCALPARAM          shift, and go to state 35
    PARAMETER           shift, and go to state 36
    VAR                 shift, and go to state 37
    TYPEDEF             shift, and go to state 38
    AUTOMATIC           shift, and go to state 39
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    TASK                shift, and go to state 55
    CASE                shift, and go to state 56
    _BEGIN              shift, and go to state 736
    ALIAS               shift, and go to state 57
    FINAL               shift, and go to state 58
    ASSIGN              shift, and go to state 60
    ALWAYS              shift, and go to state 61
    BIND                shift, and go to state 62
    _INITIAL            shift, and go to state 63
    ALWAYS_LATCH        shift, and go to state 64
    ALWAYS_FF           shift, and go to state 65
    ALWAYS_COMB         shift, and go to state 68
    FOR                 shift, and go to state 70
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    ':'                 shift, and go to state 898
    VIRTUAL_INTERFACE   shift, and go to state 74
    ';'                 shift, and go to state 75
    '$'                 shift, and go to state 76

    $default  reduce using rule 262 (virtual_optional)

    generate_item                         go to state 737
    module_or_generate_item               go to state 393
    module_common_item                    go to state 83
    if_generate_construct                 go to state 84
    case_generate_construct               go to state 85
    loop_generate_construct               go to state 86
    generate_block                        go to state 899
    net_alias                             go to state 87
    continuous_assign                     go to state 88
    bind_directive                        go to state 89
    generic_instantiation                 go to state 90
    always_keyword                        go to state 91
    module_or_generate_item_declaration   go to state 92
    parameter_override                    go to state 93
    data_type                             go to state 95
    data_type_no_identifier               go to state 96
    virtual_interface_type                go to state 97
    integer_vector_type                   go to state 98
    package_or_generate_item_declaration  go to state 99
    class_declaration                     go to state 100
    virtual_optional                      go to state 101
    function_declaration                  go to state 102
    task_declaration                      go to state 103
    local_parameter_declaration           go to state 104
    parameter_declaration                 go to state 105
    data_declaration                      go to state 106
    method_variable_qualifier_list        go to state 107
    variable_qualifier_list               go to state 108
    variable_qualifier                    go to state 109
    method_variable_qualifier             go to state 110
    type_declaration                      go to state 111
    package_import_declaration            go to state 112
    integer_atom_type                     go to state 115
    non_integer_type                      go to state 116
    ps_identifier                         go to state 117
    hierarchical_identifier               go to state 118
    lifetime                              go to state 119
    identifier                            go to state 739


State 747

   97 case_generate_construct: CASE '(' expression ')' case_generate_item_list • ENDCASE
   98 case_generate_item_list: case_generate_item_list • case_generate_item

    DEFAULT             shift, and go to state 746
    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    ENDCASE             shift, and go to state 900
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    case_generate_item             go to state 901
    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    expression_list                go to state 749
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 750
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 748

   99 case_generate_item_list: case_generate_item •

    $default  reduce using rule 99 (case_generate_item_list)


State 749

  100 case_generate_item: expression_list • ':' generate_block
  432 expression_list: expression_list • ',' expression

    ':'  shift, and go to state 902
    ','  shift, and go to state 903


State 750

  433 expression_list: expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 433 (expression_list)


State 751

  131 lvalue_list: '=' • lvalue

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    hierarchical_identifier  go to state 158
    lvalue                   go to state 904
    identifier               go to state 133


State 752

  129 net_alias: ALIAS lvalue '=' lvalue lvalue_list • ';'
  130 lvalue_list: lvalue_list • '=' lvalue

    ';'  shift, and go to state 905
    '='  shift, and go to state 906


State 753

  437 disable_statement: DISABLE FORK ';' •

    $default  reduce using rule 437 (disable_statement)


State 754

  436 disable_statement: DISABLE hierarchical_identifier ';' •

    $default  reduce using rule 436 (disable_statement)


State 755

  427 join_keyword: JOIN •

    $default  reduce using rule 427 (join_keyword)


State 756

  428 join_keyword: JOIN_ANY •

    $default  reduce using rule 428 (join_keyword)


State 757

  429 join_keyword: JOIN_NONE •

    $default  reduce using rule 429 (join_keyword)


State 758

  470 statement_list: statement •

    $default  reduce using rule 470 (statement_list)


State 759

  426 par_block: FORK block_end_identifier_optional join_keyword • block_end_identifier_optional

    ':'  shift, and go to state 128

    $default  reduce using rule 549 (block_end_identifier_optional)

    block_end_identifier_optional  go to state 907


State 760

  423 par_block: FORK block_end_identifier_optional block_item_declaration_list • statement_list join_keyword block_end_identifier_optional
  424          | FORK block_end_identifier_optional block_item_declaration_list • join_keyword block_end_identifier_optional
  430 block_item_declaration_list: block_item_declaration_list • block_item_declaration

    JOIN       shift, and go to state 755
    JOIN_ANY   shift, and go to state 756
    JOIN_NONE  shift, and go to state 757

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 758
    join_keyword             go to state 908
    statement_list           go to state 909
    block_item_declaration   go to state 910
    attribute_instance_list  go to state 763


State 761

  425 par_block: FORK block_end_identifier_optional statement_list • join_keyword block_end_identifier_optional
  469 statement_list: statement_list • statement

    JOIN       shift, and go to state 755
    JOIN_ANY   shift, and go to state 756
    JOIN_NONE  shift, and go to state 757

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 911
    join_keyword             go to state 912
    attribute_instance_list  go to state 161


State 762

  431 block_item_declaration_list: block_item_declaration •

    $default  reduce using rule 431 (block_item_declaration_list)


State 763

  330 statement: attribute_instance_list • statement_item
  331          | attribute_instance_list • ';'
  474 block_item_declaration: attribute_instance_list • data_declaration
  475                       | attribute_instance_list • local_parameter_declaration ';'
  476                       | attribute_instance_list • parameter_declaration ';'
  477                       | attribute_instance_list • overload_declaration
  552 attribute_instance_list: attribute_instance_list • attribute_instance

    VIRTUAL             shift, and go to state 141
    RAND                shift, and go to state 24
    IMPORT              shift, and go to state 26
    DISABLE             shift, and go to state 312
    CONST               shift, and go to state 28
    FORK                shift, and go to state 313
    STATIC              shift, and go to state 30
    PROTECTED           shift, and go to state 31
    LOCAL               shift, and go to state 32
    RANDC               shift, and go to state 33
    SUPER               shift, and go to state 242
    FOREACH             shift, and go to state 314
    UNIQUE              shift, and go to state 315
    LOCALPARAM          shift, and go to state 35
    PARAMETER           shift, and go to state 36
    VAR                 shift, and go to state 37
    TYPEDEF             shift, and go to state 38
    AUTOMATIC           shift, and go to state 39
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    VOID                shift, and go to state 316
    _BEGIN              shift, and go to state 317
    PRIORITY            shift, and go to state 318
    FORCE               shift, and go to state 319
    WHILE               shift, and go to state 320
    FOREVER             shift, and go to state 321
    THIS                shift, and go to state 322
    WAIT                shift, and go to state 323
    DO                  shift, and go to state 324
    WAIT_ORDER          shift, and go to state 325
    ASSIGN              shift, and go to state 326
    RELEASE             shift, and go to state 327
    BIND                shift, and go to state 913
    REPEAT              shift, and go to state 328
    DEASSIGN            shift, and go to state 329
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    FOR                 shift, and go to state 330
    RETURN              shift, and go to state 331
    UNIQUE0             shift, and go to state 332
    CONTINUE            shift, and go to state 333
    BREAK               shift, and go to state 334
    SUPER_NEW           shift, and go to state 335
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    TOK_DLY             shift, and go to state 336
    TOK_IMP             shift, and go to state 337
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    VIRTUAL_INTERFACE   shift, and go to state 74
    ';'                 shift, and go to state 338
    '('                 shift, and go to state 19
    '#'                 shift, and go to state 339
    '$'                 shift, and go to state 76
    '@'                 shift, and go to state 340

    $default  reduce using rule 410 (unique_priority_optional)

    data_type                            go to state 914
    data_type_no_identifier              go to state 96
    virtual_interface_type               go to state 97
    integer_vector_type                  go to state 98
    statement_item                       go to state 341
    procedural_timing_control_statement  go to state 342
    delay_control                        go to state 343
    event_control                        go to state 344
    procedural_timing_control            go to state 345
    cycle_delay                          go to state 346
    loop_statement                       go to state 347
    conditional_statement                go to state 348
    case_statement                       go to state 349
    subroutine_call_statement            go to state 350
    unique_priority_optional             go to state 351
    seq_block                            go to state 352
    par_block                            go to state 353
    event_trigger                        go to state 354
    disable_statement                    go to state 355
    wait_statement                       go to state 356
    blocking_assignment                  go to state 357
    nonblocking_assignment               go to state 358
    procedural_continuous_assignment     go to state 359
    jump_statement                       go to state 360
    overload_declaration                 go to state 915
    local_parameter_declaration          go to state 916
    parameter_declaration                go to state 917
    data_declaration                     go to state 918
    method_variable_qualifier_list       go to state 107
    variable_qualifier_list              go to state 108
    variable_qualifier                   go to state 109
    method_variable_qualifier            go to state 110
    type_declaration                     go to state 111
    package_import_declaration           go to state 112
    attribute_instance                   go to state 21
    integer_atom_type                    go to state 115
    non_integer_type                     go to state 116
    subroutine_call                      go to state 361
    tf_call                              go to state 280
    implicit_class_handle                go to state 281
    randomize_call                       go to state 282
    ps_identifier                        go to state 919
    ps_or_hierarchical_identifier        go to state 284
    hierarchical_identifier              go to state 920
    inc_or_dec_expression                go to state 363
    operator_assignment                  go to state 364
    lvalue                               go to state 365
    lifetime                             go to state 119
    identifier                           go to state 921


State 764

  383 loop_statement: FOREACH '(' identifier • '[' identifier_list ']' ')' statement

    '['  shift, and go to state 922


State 765

  406 subroutine_call_statement: VOID TOK_SING_QUOT '(' • subroutine_call ')' ';'

    SUPER               shift, and go to state 242
    THIS                shift, and go to state 322
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    '$'                 shift, and go to state 76

    subroutine_call                go to state 923
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 306
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 308
    identifier                     go to state 309


State 766

  422 seq_block: _BEGIN block_end_identifier_optional END • block_end_identifier_optional

    ':'  shift, and go to state 128

    $default  reduce using rule 549 (block_end_identifier_optional)

    block_end_identifier_optional  go to state 924


State 767

  419 seq_block: _BEGIN block_end_identifier_optional block_item_declaration_list • statement_list END block_end_identifier_optional
  420          | _BEGIN block_end_identifier_optional block_item_declaration_list • END block_end_identifier_optional
  430 block_item_declaration_list: block_item_declaration_list • block_item_declaration

    END  shift, and go to state 925

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 758
    statement_list           go to state 926
    block_item_declaration   go to state 910
    attribute_instance_list  go to state 763


State 768

  421 seq_block: _BEGIN block_end_identifier_optional statement_list • END block_end_identifier_optional
  469 statement_list: statement_list • statement

    END  shift, and go to state 927

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 911
    attribute_instance_list  go to state 161


State 769

  380 loop_statement: WHILE '(' expression • ')' statement
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522
    ')'           shift, and go to state 928


State 770

  439 wait_statement: WAIT FORK ';' •

    $default  reduce using rule 439 (wait_statement)


State 771

  438 wait_statement: WAIT '(' expression • ')' statement
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522
    ')'           shift, and go to state 929


State 772

  382 loop_statement: DO statement WHILE • '(' expression ')' ';'

    '('  shift, and go to state 930


State 773

  440 wait_statement: WAIT_ORDER '(' hierarchical_identifier_list • ')' action_block
  441 hierarchical_identifier_list: hierarchical_identifier_list • ',' hierarchical_identifier

    ','  shift, and go to state 931
    ')'  shift, and go to state 932


State 774

  442 hierarchical_identifier_list: hierarchical_identifier •
  626 hierarchical_identifier: hierarchical_identifier • '.' identifier unpacked_dimension_list_optional

    '.'  shift, and go to state 214

    $default  reduce using rule 442 (hierarchical_identifier_list)


State 775

  379 loop_statement: REPEAT '(' expression • ')' statement
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522
    ')'           shift, and go to state 933


State 776

  398 for_variable_declaration: VAR • data_type identifier '=' expression

    VIRTUAL             shift, and go to state 141
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    '$'                 shift, and go to state 76

    data_type                go to state 934
    data_type_no_identifier  go to state 96
    virtual_interface_type   go to state 97
    integer_vector_type      go to state 98
    integer_atom_type        go to state 115
    non_integer_type         go to state 116
    ps_identifier            go to state 117
    hierarchical_identifier  go to state 118
    identifier               go to state 120


State 777

  399 for_variable_declaration: data_type • identifier '=' expression

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 935


State 778

  381 loop_statement: FOR '(' for_initialization • ';' expression_optional ';' for_step ')' statement

    ';'  shift, and go to state 936


State 779

  391 for_initialization: variable_assignment_list •
  394 variable_assignment_list: variable_assignment_list • ',' variable_assignment

    ','  shift, and go to state 376

    $default  reduce using rule 391 (for_initialization)


State 780

  392 for_initialization: for_variable_declaration_list •

    $default  reduce using rule 392 (for_initialization)


State 781

  396 for_variable_declaration_list: for_variable_declaration •
  397 for_variable_declaration: for_variable_declaration • ',' identifier '=' expression

    ','  shift, and go to state 937

    $default  reduce using rule 396 (for_variable_declaration_list)


State 782

  220 data_type: hierarchical_identifier •
  626 hierarchical_identifier: hierarchical_identifier • '.' identifier unpacked_dimension_list_optional
  689 lvalue: hierarchical_identifier •

    '.'  shift, and go to state 214

    '='       reduce using rule 689 (lvalue)
    $default  reduce using rule 220 (data_type)


State 783

  465 jump_statement: RETURN expression ';' •

    $default  reduce using rule 465 (jump_statement)


State 784

  637 identifier_expression_list: '.' • identifier '(' expression_optional ')'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 938


State 785

  432 expression_list: expression_list • ',' expression
  632 argument_list: expression_list •
  633              | expression_list • ',' identifier_expression_list

    ','  shift, and go to state 939

    $default  reduce using rule 632 (argument_list)


State 786

  347 statement_item: SUPER_NEW '(' argument_list • ')' ';'

    ')'  shift, and go to state 940


State 787

  634 argument_list: identifier_expression_list •
  636 identifier_expression_list: identifier_expression_list • ',' '.' identifier '(' expression_optional ')'

    ','  shift, and go to state 941

    $default  reduce using rule 634 (argument_list)


State 788

  377 cycle_delay: TOK_DLY '(' expression • ')'
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522
    ')'           shift, and go to state 942


State 789

  435 event_trigger: TOK_IMP TOK_LOG_GT hierarchical_identifier • ';'
  626 hierarchical_identifier: hierarchical_identifier • '.' identifier unpacked_dimension_list_optional

    ';'  shift, and go to state 943
    '.'  shift, and go to state 214


State 790

  434 event_trigger: TOK_IMP hierarchical_identifier ';' •

    $default  reduce using rule 434 (event_trigger)


State 791

  354 delay_control: '#' '(' mintypmax_expression • ')'

    ')'  shift, and go to state 944


State 792

  369 edge_identifier: POSEDGE •

    $default  reduce using rule 369 (edge_identifier)


State 793

  370 edge_identifier: NEGEDGE •

    $default  reduce using rule 370 (edge_identifier)


State 794

  371 edge_identifier: EDGE •

    $default  reduce using rule 371 (edge_identifier)


State 795

  362 event_control: '@' '(' TOK_MUL • ')'

    ')'  shift, and go to state 945


State 796

  368 event_expression: '(' • event_expression ')'
  581 primary: '(' • mintypmax_expression ')'
  652 expression: '(' • operator_assignment ')'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    POSEDGE             shift, and go to state 792
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    NEGEDGE             shift, and go to state 793
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    EDGE                shift, and go to state 794
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 796
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    event_expression               go to state 946
    edge_identifier                go to state 798
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    mintypmax_expression           go to state 483
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 947
    inc_or_dec_expression          go to state 287
    operator_assignment            go to state 485
    lvalue                         go to state 486
    identifier                     go to state 289


State 797

  360 event_control: '@' '(' event_expression • ')'
  366 event_expression: event_expression • OR event_expression
  367                 | event_expression • ',' event_expression

    OR   shift, and go to state 948
    ','  shift, and go to state 949
    ')'  shift, and go to state 950


State 798

  363 event_expression: edge_identifier • expression IFF expression
  364                 | edge_identifier • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 951
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 799

  365 event_expression: expression • IFF expression
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    IFF           shift, and go to state 952
    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522


State 800

  400 conditional_statement: unique_priority_optional IF '(' • cond_predicate ')' statement else_if_list
  401                      | unique_priority_optional IF '(' • cond_predicate ')' statement else_if_list ELSE statement

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 953
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    cond_predicate                 go to state 954
    expression_or_cond_pattern     go to state 955
    identifier                     go to state 289


State 801

  404 case_statement: unique_priority_optional case_keyword '(' • expression ')' case_item_list ENDCASE

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 956
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 802

  352 delay_or_event_control: REPEAT • '(' expression ')' event_control

    '('  shift, and go to state 957


State 803

  458 nonblocking_assignment: lvalue TOK_LOG_LEQ delay_or_event_control • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 958
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 804

  350 delay_or_event_control: delay_control •

    $default  reduce using rule 350 (delay_or_event_control)


State 805

  351 delay_or_event_control: event_control •

    $default  reduce using rule 351 (delay_or_event_control)


State 806

  459 nonblocking_assignment: lvalue TOK_LOG_LEQ expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 459 (nonblocking_assignment)


State 807

  446 blocking_assignment: lvalue '=' delay_or_event_control • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 959
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 808

  452 class_new: NEW • '(' argument_list ')'
  453          | NEW •
  456 dynamic_array_new: NEW • '[' expression ']' '(' expression ')'
  457                  | NEW • '[' expression ']'

    '['  shift, and go to state 960
    '('  shift, and go to state 961

    $default  reduce using rule 453 (class_new)


State 809

  454 class_scope: ps_identifier_tok •
  621 ps_identifier: ps_identifier_tok • identifier

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    $default  reduce using rule 454 (class_scope)

    identifier  go to state 174


State 810

  448 blocking_assignment: lvalue assignment_operator class_new •

    $default  reduce using rule 448 (blocking_assignment)


State 811

  450 class_new: class_scope • NEW '(' argument_list ')'
  451          | class_scope • NEW

    NEW  shift, and go to state 962


State 812

  447 blocking_assignment: lvalue assignment_operator dynamic_array_new •

    $default  reduce using rule 447 (blocking_assignment)


State 813

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'
  688 operator_assignment: lvalue assignment_operator expression •

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 688 (operator_assignment)


State 814

  455 class_scope: identifier • parameter_value_assignment SCOPE
  593 simple_type: identifier •
  624 ps_or_hierarchical_identifier: identifier • parameter_value_assignment SCOPE identifier
  627 hierarchical_identifier: identifier • unpacked_dimension_list_optional

    '['  shift, and go to state 215
    '#'  shift, and go to state 216

    TOK_SING_QUOT  reduce using rule 593 (simple_type)
    $default       reduce using rule 184 (unpacked_dimension_list_optional)

    parameter_value_assignment        go to state 963
    unpacked_dimension_list_optional  go to state 218
    unpacked_dimension_list           go to state 219
    unpacked_dimension                go to state 220


State 815

  561 timeunits_declaration: TIMEUNIT time_literal TOK_DIV time_literal ';' •

    $default  reduce using rule 561 (timeunits_declaration)


State 816

  563 timeunits_declaration: TIMEUNIT time_literal ';' TIMEPRECISION time_literal • ';'

    ';'  shift, and go to state 964


State 817

  564 timeunits_declaration: TIMEPRECISION time_literal ';' TIMEUNIT time_literal • ';'

    ';'  shift, and go to state 965


State 818

   75 path_output_list: path_output_list ',' • specify_terminal_descriptor

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    specify_terminal_descriptor  go to state 966
    hierarchical_identifier      go to state 615
    identifier                   go to state 133


State 819

   74 showcancelled_declaration: NOSHOWCANCELLED path_output_list ';' •

    $default  reduce using rule 74 (showcancelled_declaration)


State 820

   73 showcancelled_declaration: SHOWCANCELLED path_output_list ';' •

    $default  reduce using rule 73 (showcancelled_declaration)


State 821

   72 pulsestyle_declaration: PULSESTYLE_ONDETECT path_output_list ';' •

    $default  reduce using rule 72 (pulsestyle_declaration)


State 822

   71 pulsestyle_declaration: PULSESTYLE_ONEVENT path_output_list ';' •

    $default  reduce using rule 71 (pulsestyle_declaration)


State 823

  109 genvar_initialization: GENVAR identifier '=' • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 967
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 824

  103 loop_generate_construct: FOR '(' genvar_initialization ';' expression • ';' genvar_iteration ')' generate_block
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522
    ';'           shift, and go to state 968


State 825

  110 genvar_initialization: identifier '=' expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 110 (genvar_initialization)


State 826

  141 ordered_port_connection_list: ordered_port_connection_list ',' • ordered_port_connection

    $default  reduce using rule 553 (attribute_instance_list)

    ordered_port_connection  go to state 969
    attribute_instance_list  go to state 970


State 827

  137 hierarchical_instance: name_of_instance '(' ordered_port_connection_list ')' •

    $default  reduce using rule 137 (hierarchical_instance)


State 828

  144 named_port_connection_list: named_port_connection_list ',' • named_port_connection

    $default  reduce using rule 553 (attribute_instance_list)

    named_port_connection    go to state 971
    attribute_instance_list  go to state 972


State 829

  138 hierarchical_instance: name_of_instance '(' named_port_connection_list ')' •

    $default  reduce using rule 138 (hierarchical_instance)


State 830

  554 attribute_instance: '(' • TOK_MUL attr_spec_list TOK_MUL ')'
  581 primary: '(' • mintypmax_expression ')'
  652 expression: '(' • operator_assignment ')'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_MUL             shift, and go to state 126
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    mintypmax_expression           go to state 483
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 484
    inc_or_dec_expression          go to state 287
    operator_assignment            go to state 485
    lvalue                         go to state 486
    identifier                     go to state 289


State 831

  146 named_port_connection: attribute_instance_list '.' • identifier '(' expression_optional ')'
  147                      | attribute_instance_list '.' • identifier
  148                      | attribute_instance_list '.' • TOK_MUL

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    TOK_MUL             shift, and go to state 973

    identifier  go to state 974


State 832

  143 ordered_port_connection: attribute_instance_list expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 143 (ordered_port_connection)


State 833

  197 associative_dimension: '[' TOK_MUL ']' •

    $default  reduce using rule 197 (associative_dimension)


State 834

  196 associative_dimension: '[' data_type_no_identifier ']' •

    $default  reduce using rule 196 (associative_dimension)


State 835

  535 variable_decl_assignment: identifier variable_dimension_list_optional '=' expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 535 (variable_decl_assignment)


State 836

  228 data_type_no_identifier: virtual_interface_type identifier parameter_value_assignment_optional '.' identifier •

    $default  reduce using rule 228 (data_type_no_identifier)


State 837

  260 class_declaration: virtual_optional CLASS lifetime_optional identifier parameter_port_list_optional • extends_class_optional implements_interface_optional ';' class_item_list ENDCLASS block_end_identifier_optional

    EXTENDS  shift, and go to state 975

    $default  reduce using rule 265 (extends_class_optional)

    extends_class_optional  go to state 976


State 838

  201 net_port_type: INTERCONNECT signing_optional packed_dimension_list_optional •

    $default  reduce using rule 201 (net_port_type)


State 839

  181 port_identifier_list: port_identifier_list ',' • identifier unpacked_dimension_list_optional

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 977


State 840

  182 port_identifier_list: identifier unpacked_dimension_list_optional •

    $default  reduce using rule 182 (port_identifier_list)


State 841

  187 variable_identifier_list: variable_identifier_list ',' • identifier variable_dimension_list_optional

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 978


State 842

  188 variable_identifier_list: identifier variable_dimension_list_optional •

    $default  reduce using rule 188 (variable_identifier_list)


State 843

   67 pulse_control_specparam: PATHPULSE '$' • '=' '(' constant_mintypmax_expression ',' constant_mintypmax_expression ')'
   68                        | PATHPULSE '$' • '=' '(' constant_mintypmax_expression ')'
   69                        | PATHPULSE '$' • hierarchical_identifier '$' hierarchical_identifier '=' '(' constant_mintypmax_expression ',' constant_mintypmax_expression ')'
   70                        | PATHPULSE '$' • hierarchical_identifier '$' hierarchical_identifier '=' '(' constant_mintypmax_expression ')'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    '='                 shift, and go to state 979

    hierarchical_identifier  go to state 980
    identifier               go to state 133


State 844

   63 specparam_assignment_list: specparam_assignment_list ',' • specparam_assignment

    PATHPULSE           shift, and go to state 654
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    specparam_assignment     go to state 981
    pulse_control_specparam  go to state 657
    identifier               go to state 658


State 845

   62 specparam_declaration: SPECPARAM packed_dimension_list_optional specparam_assignment_list ';' •

    $default  reduce using rule 62 (specparam_declaration)


State 846

   65 specparam_assignment: identifier '=' • constant_mintypmax_expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    constant_mintypmax_expression  go to state 982
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 458
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 847

  629 part_select_range: expression TOK_UPTO expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 629 (part_select_range)


State 848

  630 part_select_range: expression TOK_DNTO expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 630 (part_select_range)


State 849

  628 part_select_range: expression ':' expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 628 (part_select_range)


State 850

  157 named_parameter_assignment: '.' identifier • '(' param_expression ')'
  158                           | '.' identifier • '(' ')'

    '('  shift, and go to state 983


State 851

  152 ordered_parameter_assignment_list: ordered_parameter_assignment_list ',' • ordered_parameter_assignment

    VIRTUAL             shift, and go to state 141
    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 631
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    VIRTUAL_INTERFACE   shift, and go to state 74
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    ordered_parameter_assignment   go to state 984
    param_expression               go to state 671
    data_type_no_identifier        go to state 672
    virtual_interface_type         go to state 97
    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 635
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 636
    non_integer_type               go to state 637
    mintypmax_expression           go to state 673
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 484
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 852

  149 parameter_value_assignment: '#' '(' ordered_parameter_assignment_list ')' •

    $default  reduce using rule 149 (parameter_value_assignment)


State 853

  154 named_parameter_assignment_list: named_parameter_assignment_list ',' • named_parameter_assignment

    '.'  shift, and go to state 666

    named_parameter_assignment  go to state 985


State 854

  150 parameter_value_assignment: '#' '(' named_parameter_assignment_list ')' •

    $default  reduce using rule 150 (parameter_value_assignment)


State 855

  249 package_declaration: attribute_instance_list PACKAGE lifetime_optional identifier ';' timeunits_declaration_optional package_item_list_optional • ENDPACKAGE block_end_identifier_optional
  250 package_item_list_optional: package_item_list_optional • package_item

    VIRTUAL             shift, and go to state 23
    ENDPACKAGE          shift, and go to state 986
    RAND                shift, and go to state 24
    IMPORT              shift, and go to state 26
    CONST               shift, and go to state 28
    FUNCTION            shift, and go to state 29
    STATIC              shift, and go to state 30
    PROTECTED           shift, and go to state 31
    LOCAL               shift, and go to state 32
    RANDC               shift, and go to state 33
    LOCALPARAM          shift, and go to state 35
    PARAMETER           shift, and go to state 36
    VAR                 shift, and go to state 37
    TYPEDEF             shift, and go to state 38
    AUTOMATIC           shift, and go to state 39
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    TASK                shift, and go to state 55
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    ';'                 shift, and go to state 75
    '$'                 shift, and go to state 76

    $default  reduce using rule 262 (virtual_optional)

    data_type                             go to state 914
    data_type_no_identifier               go to state 96
    virtual_interface_type                go to state 97
    integer_vector_type                   go to state 98
    package_item                          go to state 987
    package_or_generate_item_declaration  go to state 988
    class_declaration                     go to state 100
    virtual_optional                      go to state 101
    function_declaration                  go to state 102
    task_declaration                      go to state 103
    local_parameter_declaration           go to state 104
    parameter_declaration                 go to state 105
    data_declaration                      go to state 106
    method_variable_qualifier_list        go to state 107
    variable_qualifier_list               go to state 108
    variable_qualifier                    go to state 109
    method_variable_qualifier             go to state 110
    type_declaration                      go to state 111
    package_import_declaration            go to state 112
    integer_atom_type                     go to state 115
    non_integer_type                      go to state 116
    ps_identifier                         go to state 117
    hierarchical_identifier               go to state 118
    lifetime                              go to state 119
    identifier                            go to state 120


State 856

  555 attr_spec_list: attr_spec_list ',' identifier '=' • constant_primary

    string_literal      shift, and go to state 249
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163

    constant_primary  go to state 989
    time_literal      go to state 269
    primary_literal   go to state 679


State 857

   35 parameter_port_list: '#' '(' • param_assignment_list ')'
   36                    | '#' '(' • parameter_port_declaration ')'
   37                    | '#' '(' • ')'

    VIRTUAL             shift, and go to state 141
    TYPE                shift, and go to state 990
    LOCALPARAM          shift, and go to state 35
    PARAMETER           shift, and go to state 36
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    ')'                 shift, and go to state 991
    '$'                 shift, and go to state 76

    parameter_port_declaration   go to state 992
    data_type                    go to state 993
    data_type_no_identifier      go to state 96
    virtual_interface_type       go to state 97
    integer_vector_type          go to state 98
    local_parameter_declaration  go to state 994
    parameter_declaration        go to state 995
    param_assignment_list        go to state 996
    param_assignment             go to state 145
    integer_atom_type            go to state 115
    non_integer_type             go to state 116
    ps_identifier                go to state 117
    hierarchical_identifier      go to state 118
    identifier                   go to state 146


State 858

   12 port_declaration_list: '(' • ansi_port_declaration_list ')'
   13                      | '(' • ')'
  216 list_of_ports: '(' • port_list ')'

    VIRTUAL             shift, and go to state 141
    INPUT               shift, and go to state 868
    OUTPUT              shift, and go to state 869
    INOUT               shift, and go to state 870
    REF                 shift, and go to state 871
    VAR                 shift, and go to state 420
    INTERCONNECT        shift, and go to state 421
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    SUPPLY0             shift, and go to state 422
    SUPPLY1             shift, and go to state 423
    TRI                 shift, and go to state 424
    TRIAND              shift, and go to state 425
    TRIOR               shift, and go to state 426
    TRIREG              shift, and go to state 427
    TRI0                shift, and go to state 428
    TRI1                shift, and go to state 429
    UWIRE               shift, and go to state 430
    WIRE                shift, and go to state 431
    WAND                shift, and go to state 432
    WOR                 shift, and go to state 433
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    ')'                 shift, and go to state 997
    '.'                 shift, and go to state 998
    '$'                 shift, and go to state 76

    ansi_port_declaration_list  go to state 999
    ansi_port_declaration       go to state 1000
    net_port_header             go to state 1001
    variable_port_header        go to state 1002
    port_direction              go to state 1003
    net_port_type               go to state 1004
    net_type                    go to state 435
    variable_port_type          go to state 1005
    port_list                   go to state 1006
    data_type                   go to state 437
    data_type_no_identifier     go to state 96
    virtual_interface_type      go to state 97
    integer_vector_type         go to state 98
    integer_atom_type           go to state 115
    non_integer_type            go to state 116
    ps_identifier               go to state 117
    hierarchical_identifier     go to state 118
    identifier                  go to state 1007


State 859

   11 module_ansi_header: attribute_instance_list module_keyword lifetime_optional identifier package_import_declaration_list parameter_port_list_optional port_declaration_list • ';'

    ';'  shift, and go to state 1008


State 860

   10 module_nonansi_header: attribute_instance_list module_keyword lifetime_optional identifier package_import_declaration_list parameter_port_list_optional list_of_ports • ';'

    ';'  shift, and go to state 1009


State 861

  509 constant_mintypmax_expression: expression ':' expression • ':' expression
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522
    ':'           shift, and go to state 1010


State 862

  299 function_body_declaration: function_type_name ';' tf_item_declaration_list statement_list_optional • ENDFUNCTION function_block_end_identifier_optional

    ENDFUNCTION  shift, and go to state 1011


State 863

  326 statement_list_optional: statement_list •
  469 statement_list: statement_list • statement

    ENDTASK      reduce using rule 326 (statement_list_optional)
    ENDFUNCTION  reduce using rule 326 (statement_list_optional)
    $default     reduce using rule 553 (attribute_instance_list)

    statement                go to state 911
    attribute_instance_list  go to state 161


State 864

  471 tf_item_declaration_list: tf_item_declaration_list tf_item_declaration •

    $default  reduce using rule 471 (tf_item_declaration_list)


State 865

  473 tf_item_declaration: block_item_declaration •

    $default  reduce using rule 473 (tf_item_declaration)


State 866

  300 function_body_declaration: function_type_name '(' tf_port_list_optional ')' • ';' block_item_declaration_list statement_list_optional ENDFUNCTION function_block_end_identifier_optional
  301                          | function_type_name '(' tf_port_list_optional ')' • ';' statement_list_optional ENDFUNCTION function_block_end_identifier_optional

    ';'  shift, and go to state 1012


State 867

  315 tf_port_list: tf_port_list ',' • tf_port_item

    $default  reduce using rule 553 (attribute_instance_list)

    tf_port_item             go to state 1013
    attribute_instance_list  go to state 689


State 868

   27 port_direction: INPUT •

    $default  reduce using rule 27 (port_direction)


State 869

   28 port_direction: OUTPUT •

    $default  reduce using rule 28 (port_direction)


State 870

   29 port_direction: INOUT •

    $default  reduce using rule 29 (port_direction)


State 871

   30 port_direction: REF •

    $default  reduce using rule 30 (port_direction)


State 872

  324 tf_port_direction: CONST • REF

    REF  shift, and go to state 1014


State 873

  323 tf_port_direction: port_direction •

    $default  reduce using rule 323 (tf_port_direction)


State 874

  317 tf_port_item: attribute_instance_list tf_port_direction • VAR data_type identifier variable_dimension_list_optional equals_expression_optional
  318             | attribute_instance_list tf_port_direction • VAR data_type equals_expression_optional
  319             | attribute_instance_list tf_port_direction • data_type identifier variable_dimension_list_optional equals_expression_optional
  320             | attribute_instance_list tf_port_direction • data_type equals_expression_optional

    VIRTUAL             shift, and go to state 141
    VAR                 shift, and go to state 1015
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    '$'                 shift, and go to state 76

    data_type                go to state 1016
    data_type_no_identifier  go to state 96
    virtual_interface_type   go to state 97
    integer_vector_type      go to state 98
    integer_atom_type        go to state 115
    non_integer_type         go to state 116
    ps_identifier            go to state 117
    hierarchical_identifier  go to state 118
    identifier               go to state 120


State 875

  618 randomize_call: RANDOMIZE attribute_instance_list '(' _NULL • ')'

    ')'  shift, and go to state 1017


State 876

  617 randomize_call: RANDOMIZE attribute_instance_list '(' ')' •

    $default  reduce using rule 617 (randomize_call)


State 877

  616 randomize_call: RANDOMIZE attribute_instance_list '(' identifier_list • ')'
  619 identifier_list: identifier_list • ',' identifier

    ','  shift, and go to state 1018
    ')'  shift, and go to state 1019


State 878

  620 identifier_list: identifier •

    $default  reduce using rule 620 (identifier_list)


State 879

  606 mintypmax_expression: expression ':' expression • ':' expression
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522
    ':'           shift, and go to state 1020


State 880

  572 concatenation_expression_list: concatenation_expression_list ',' expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 572 (concatenation_expression_list)


State 881

  573 concatenation_expression_list: expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 573 (concatenation_expression_list)


State 882

  571 multiple_concatenation: '{' expression concatenation '}' •

    $default  reduce using rule 571 (multiple_concatenation)


State 883

  582 primary: casting_type TOK_SING_QUOT '(' expression • ')'
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522
    ')'           shift, and go to state 1021


State 884

  552 attribute_instance_list: attribute_instance_list • attribute_instance
  612 tf_call: implicit_class_handle '.' identifier attribute_instance_list • '(' argument_list ')'

    '('  shift, and go to state 1022

    attribute_instance  go to state 21


State 885

  611 tf_call: ps_or_hierarchical_identifier attribute_instance_list '(' argument_list • ')'

    ')'  shift, and go to state 1023


State 886

  694 value_range: '[' • expression ':' expression ']'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 1024
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 887

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'
  695 value_range: expression •

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 695 (value_range)


State 888

  682 expression: expression INSIDE '{' value_range_list • '}'
  692 value_range_list: value_range_list • ',' value_range

    ','  shift, and go to state 1025
    '}'  shift, and go to state 1026


State 889

  693 value_range_list: value_range •

    $default  reduce using rule 693 (value_range_list)


State 890

  681 expression: expression '?' expression ':' • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 1027
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 891

  107 generate_block: _BEGIN ':' • identifier generate_item_list END block_end_identifier_optional

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 1028


State 892

   79 generate_item_list: generate_item_list • generate_item
  108 generate_block: _BEGIN generate_item_list • END block_end_identifier_optional

    VIRTUAL             shift, and go to state 23
    RAND                shift, and go to state 24
    DEFPARAM            shift, and go to state 25
    IMPORT              shift, and go to state 26
    DEFAULT             shift, and go to state 27
    CONST               shift, and go to state 28
    FUNCTION            shift, and go to state 29
    STATIC              shift, and go to state 30
    PROTECTED           shift, and go to state 31
    LOCAL               shift, and go to state 32
    RANDC               shift, and go to state 33
    IF                  shift, and go to state 34
    LOCALPARAM          shift, and go to state 35
    PARAMETER           shift, and go to state 36
    VAR                 shift, and go to state 37
    TYPEDEF             shift, and go to state 38
    AUTOMATIC           shift, and go to state 39
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    TASK                shift, and go to state 55
    CASE                shift, and go to state 56
    ALIAS               shift, and go to state 57
    FINAL               shift, and go to state 58
    END                 shift, and go to state 1029
    ASSIGN              shift, and go to state 60
    ALWAYS              shift, and go to state 61
    BIND                shift, and go to state 62
    _INITIAL            shift, and go to state 63
    ALWAYS_LATCH        shift, and go to state 64
    ALWAYS_FF           shift, and go to state 65
    ALWAYS_COMB         shift, and go to state 68
    FOR                 shift, and go to state 70
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    ';'                 shift, and go to state 75
    '$'                 shift, and go to state 76

    $default  reduce using rule 262 (virtual_optional)

    generate_item                         go to state 392
    module_or_generate_item               go to state 393
    module_common_item                    go to state 83
    if_generate_construct                 go to state 84
    case_generate_construct               go to state 85
    loop_generate_construct               go to state 86
    net_alias                             go to state 87
    continuous_assign                     go to state 88
    bind_directive                        go to state 89
    generic_instantiation                 go to state 90
    always_keyword                        go to state 91
    module_or_generate_item_declaration   go to state 92
    parameter_override                    go to state 93
    data_type                             go to state 95
    data_type_no_identifier               go to state 96
    virtual_interface_type                go to state 97
    integer_vector_type                   go to state 98
    package_or_generate_item_declaration  go to state 99
    class_declaration                     go to state 100
    virtual_optional                      go to state 101
    function_declaration                  go to state 102
    task_declaration                      go to state 103
    local_parameter_declaration           go to state 104
    parameter_declaration                 go to state 105
    data_declaration                      go to state 106
    method_variable_qualifier_list        go to state 107
    variable_qualifier_list               go to state 108
    variable_qualifier                    go to state 109
    method_variable_qualifier             go to state 110
    type_declaration                      go to state 111
    package_import_declaration            go to state 112
    integer_atom_type                     go to state 115
    non_integer_type                      go to state 116
    ps_identifier                         go to state 117
    hierarchical_identifier               go to state 118
    lifetime                              go to state 119
    identifier                            go to state 120


State 893

   95 if_generate_construct: IF '(' expression ')' generate_block ELSE • generate_block

    VIRTUAL             shift, and go to state 23
    RAND                shift, and go to state 24
    DEFPARAM            shift, and go to state 25
    IMPORT              shift, and go to state 26
    DEFAULT             shift, and go to state 27
    CONST               shift, and go to state 28
    FUNCTION            shift, and go to state 29
    STATIC              shift, and go to state 30
    PROTECTED           shift, and go to state 31
    LOCAL               shift, and go to state 32
    RANDC               shift, and go to state 33
    IF                  shift, and go to state 34
    LOCALPARAM          shift, and go to state 35
    PARAMETER           shift, and go to state 36
    VAR                 shift, and go to state 37
    TYPEDEF             shift, and go to state 38
    AUTOMATIC           shift, and go to state 39
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    TASK                shift, and go to state 55
    CASE                shift, and go to state 56
    _BEGIN              shift, and go to state 736
    ALIAS               shift, and go to state 57
    FINAL               shift, and go to state 58
    ASSIGN              shift, and go to state 60
    ALWAYS              shift, and go to state 61
    BIND                shift, and go to state 62
    _INITIAL            shift, and go to state 63
    ALWAYS_LATCH        shift, and go to state 64
    ALWAYS_FF           shift, and go to state 65
    ALWAYS_COMB         shift, and go to state 68
    FOR                 shift, and go to state 70
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    ';'                 shift, and go to state 75
    '$'                 shift, and go to state 76

    $default  reduce using rule 262 (virtual_optional)

    generate_item                         go to state 737
    module_or_generate_item               go to state 393
    module_common_item                    go to state 83
    if_generate_construct                 go to state 84
    case_generate_construct               go to state 85
    loop_generate_construct               go to state 86
    generate_block                        go to state 1030
    net_alias                             go to state 87
    continuous_assign                     go to state 88
    bind_directive                        go to state 89
    generic_instantiation                 go to state 90
    always_keyword                        go to state 91
    module_or_generate_item_declaration   go to state 92
    parameter_override                    go to state 93
    data_type                             go to state 95
    data_type_no_identifier               go to state 96
    virtual_interface_type                go to state 97
    integer_vector_type                   go to state 98
    package_or_generate_item_declaration  go to state 99
    class_declaration                     go to state 100
    virtual_optional                      go to state 101
    function_declaration                  go to state 102
    task_declaration                      go to state 103
    local_parameter_declaration           go to state 104
    parameter_declaration                 go to state 105
    data_declaration                      go to state 106
    method_variable_qualifier_list        go to state 107
    variable_qualifier_list               go to state 108
    variable_qualifier                    go to state 109
    method_variable_qualifier             go to state 110
    type_declaration                      go to state 111
    package_import_declaration            go to state 112
    integer_atom_type                     go to state 115
    non_integer_type                      go to state 116
    ps_identifier                         go to state 117
    hierarchical_identifier               go to state 118
    lifetime                              go to state 119
    identifier                            go to state 739


State 894

  105 generate_block: identifier ':' • _BEGIN ':' identifier generate_item_list END block_end_identifier_optional
  106               | identifier ':' • _BEGIN generate_item_list END block_end_identifier_optional

    _BEGIN  shift, and go to state 1031


State 895

  624 ps_or_hierarchical_identifier: identifier parameter_value_assignment SCOPE identifier •

    $default  reduce using rule 624 (ps_or_hierarchical_identifier)


State 896

  310 task_body_declaration: ps_or_hierarchical_identifier ';' tf_item_declaration_list statement_list_optional • ENDTASK block_end_identifier_optional

    ENDTASK  shift, and go to state 1032


State 897

  311 task_body_declaration: ps_or_hierarchical_identifier '(' tf_port_list_optional ')' • ';' block_item_declaration_list statement_list_optional ENDTASK block_end_identifier_optional
  312                      | ps_or_hierarchical_identifier '(' tf_port_list_optional ')' • ';' statement_list_optional ENDTASK block_end_identifier_optional

    ';'  shift, and go to state 1033


State 898

  101 case_generate_item: DEFAULT ':' • generate_block

    VIRTUAL             shift, and go to state 23
    RAND                shift, and go to state 24
    DEFPARAM            shift, and go to state 25
    IMPORT              shift, and go to state 26
    DEFAULT             shift, and go to state 27
    CONST               shift, and go to state 28
    FUNCTION            shift, and go to state 29
    STATIC              shift, and go to state 30
    PROTECTED           shift, and go to state 31
    LOCAL               shift, and go to state 32
    RANDC               shift, and go to state 33
    IF                  shift, and go to state 34
    LOCALPARAM          shift, and go to state 35
    PARAMETER           shift, and go to state 36
    VAR                 shift, and go to state 37
    TYPEDEF             shift, and go to state 38
    AUTOMATIC           shift, and go to state 39
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    TASK                shift, and go to state 55
    CASE                shift, and go to state 56
    _BEGIN              shift, and go to state 736
    ALIAS               shift, and go to state 57
    FINAL               shift, and go to state 58
    ASSIGN              shift, and go to state 60
    ALWAYS              shift, and go to state 61
    BIND                shift, and go to state 62
    _INITIAL            shift, and go to state 63
    ALWAYS_LATCH        shift, and go to state 64
    ALWAYS_FF           shift, and go to state 65
    ALWAYS_COMB         shift, and go to state 68
    FOR                 shift, and go to state 70
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    ';'                 shift, and go to state 75
    '$'                 shift, and go to state 76

    $default  reduce using rule 262 (virtual_optional)

    generate_item                         go to state 737
    module_or_generate_item               go to state 393
    module_common_item                    go to state 83
    if_generate_construct                 go to state 84
    case_generate_construct               go to state 85
    loop_generate_construct               go to state 86
    generate_block                        go to state 1034
    net_alias                             go to state 87
    continuous_assign                     go to state 88
    bind_directive                        go to state 89
    generic_instantiation                 go to state 90
    always_keyword                        go to state 91
    module_or_generate_item_declaration   go to state 92
    parameter_override                    go to state 93
    data_type                             go to state 95
    data_type_no_identifier               go to state 96
    virtual_interface_type                go to state 97
    integer_vector_type                   go to state 98
    package_or_generate_item_declaration  go to state 99
    class_declaration                     go to state 100
    virtual_optional                      go to state 101
    function_declaration                  go to state 102
    task_declaration                      go to state 103
    local_parameter_declaration           go to state 104
    parameter_declaration                 go to state 105
    data_declaration                      go to state 106
    method_variable_qualifier_list        go to state 107
    variable_qualifier_list               go to state 108
    variable_qualifier                    go to state 109
    method_variable_qualifier             go to state 110
    type_declaration                      go to state 111
    package_import_declaration            go to state 112
    integer_atom_type                     go to state 115
    non_integer_type                      go to state 116
    ps_identifier                         go to state 117
    hierarchical_identifier               go to state 118
    lifetime                              go to state 119
    identifier                            go to state 739


State 899

  102 case_generate_item: DEFAULT generate_block •

    $default  reduce using rule 102 (case_generate_item)


State 900

   97 case_generate_construct: CASE '(' expression ')' case_generate_item_list ENDCASE •

    $default  reduce using rule 97 (case_generate_construct)


State 901

   98 case_generate_item_list: case_generate_item_list case_generate_item •

    $default  reduce using rule 98 (case_generate_item_list)


State 902

  100 case_generate_item: expression_list ':' • generate_block

    VIRTUAL             shift, and go to state 23
    RAND                shift, and go to state 24
    DEFPARAM            shift, and go to state 25
    IMPORT              shift, and go to state 26
    DEFAULT             shift, and go to state 27
    CONST               shift, and go to state 28
    FUNCTION            shift, and go to state 29
    STATIC              shift, and go to state 30
    PROTECTED           shift, and go to state 31
    LOCAL               shift, and go to state 32
    RANDC               shift, and go to state 33
    IF                  shift, and go to state 34
    LOCALPARAM          shift, and go to state 35
    PARAMETER           shift, and go to state 36
    VAR                 shift, and go to state 37
    TYPEDEF             shift, and go to state 38
    AUTOMATIC           shift, and go to state 39
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    TASK                shift, and go to state 55
    CASE                shift, and go to state 56
    _BEGIN              shift, and go to state 736
    ALIAS               shift, and go to state 57
    FINAL               shift, and go to state 58
    ASSIGN              shift, and go to state 60
    ALWAYS              shift, and go to state 61
    BIND                shift, and go to state 62
    _INITIAL            shift, and go to state 63
    ALWAYS_LATCH        shift, and go to state 64
    ALWAYS_FF           shift, and go to state 65
    ALWAYS_COMB         shift, and go to state 68
    FOR                 shift, and go to state 70
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    ';'                 shift, and go to state 75
    '$'                 shift, and go to state 76

    $default  reduce using rule 262 (virtual_optional)

    generate_item                         go to state 737
    module_or_generate_item               go to state 393
    module_common_item                    go to state 83
    if_generate_construct                 go to state 84
    case_generate_construct               go to state 85
    loop_generate_construct               go to state 86
    generate_block                        go to state 1035
    net_alias                             go to state 87
    continuous_assign                     go to state 88
    bind_directive                        go to state 89
    generic_instantiation                 go to state 90
    always_keyword                        go to state 91
    module_or_generate_item_declaration   go to state 92
    parameter_override                    go to state 93
    data_type                             go to state 95
    data_type_no_identifier               go to state 96
    virtual_interface_type                go to state 97
    integer_vector_type                   go to state 98
    package_or_generate_item_declaration  go to state 99
    class_declaration                     go to state 100
    virtual_optional                      go to state 101
    function_declaration                  go to state 102
    task_declaration                      go to state 103
    local_parameter_declaration           go to state 104
    parameter_declaration                 go to state 105
    data_declaration                      go to state 106
    method_variable_qualifier_list        go to state 107
    variable_qualifier_list               go to state 108
    variable_qualifier                    go to state 109
    method_variable_qualifier             go to state 110
    type_declaration                      go to state 111
    package_import_declaration            go to state 112
    integer_atom_type                     go to state 115
    non_integer_type                      go to state 116
    ps_identifier                         go to state 117
    hierarchical_identifier               go to state 118
    lifetime                              go to state 119
    identifier                            go to state 739


State 903

  432 expression_list: expression_list ',' • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 1036
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 904

  131 lvalue_list: '=' lvalue •

    $default  reduce using rule 131 (lvalue_list)


State 905

  129 net_alias: ALIAS lvalue '=' lvalue lvalue_list ';' •

    $default  reduce using rule 129 (net_alias)


State 906

  130 lvalue_list: lvalue_list '=' • lvalue

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    hierarchical_identifier  go to state 158
    lvalue                   go to state 1037
    identifier               go to state 133


State 907

  426 par_block: FORK block_end_identifier_optional join_keyword block_end_identifier_optional •

    $default  reduce using rule 426 (par_block)


State 908

  424 par_block: FORK block_end_identifier_optional block_item_declaration_list join_keyword • block_end_identifier_optional

    ':'  shift, and go to state 128

    $default  reduce using rule 549 (block_end_identifier_optional)

    block_end_identifier_optional  go to state 1038


State 909

  423 par_block: FORK block_end_identifier_optional block_item_declaration_list statement_list • join_keyword block_end_identifier_optional
  469 statement_list: statement_list • statement

    JOIN       shift, and go to state 755
    JOIN_ANY   shift, and go to state 756
    JOIN_NONE  shift, and go to state 757

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 911
    join_keyword             go to state 1039
    attribute_instance_list  go to state 161


State 910

  430 block_item_declaration_list: block_item_declaration_list block_item_declaration •

    $default  reduce using rule 430 (block_item_declaration_list)


State 911

  469 statement_list: statement_list statement •

    $default  reduce using rule 469 (statement_list)


State 912

  425 par_block: FORK block_end_identifier_optional statement_list join_keyword • block_end_identifier_optional

    ':'  shift, and go to state 128

    $default  reduce using rule 549 (block_end_identifier_optional)

    block_end_identifier_optional  go to state 1040


State 913

  478 overload_declaration: BIND • overload_operator FUNCTION data_type identifier '(' overload_proto_formals ')' ';'

    TOK_LOG_EQ   shift, and go to state 1041
    TOK_LOG_NEQ  shift, and go to state 1042
    TOK_LOG_LEQ  shift, and go to state 1043
    TOK_LOG_GEQ  shift, and go to state 1044
    TOK_PWR      shift, and go to state 1045
    TOK_PLUS     shift, and go to state 1046
    TOK_MINUS    shift, and go to state 1047
    TOK_MUL      shift, and go to state 1048
    TOK_DIV      shift, and go to state 1049
    TOK_MOD      shift, and go to state 1050
    TOK_LOG_LT   shift, and go to state 1051
    TOK_LOG_GT   shift, and go to state 1052
    TOK_INC      shift, and go to state 1053
    TOK_DEC      shift, and go to state 1054
    '='          shift, and go to state 1055

    overload_operator  go to state 1056


State 914

  517 data_declaration: data_type • variable_decl_assignment_list ';'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    variable_decl_assignment_list  go to state 181
    variable_decl_assignment       go to state 182
    identifier                     go to state 416


State 915

  477 block_item_declaration: attribute_instance_list overload_declaration •

    $default  reduce using rule 477 (block_item_declaration)


State 916

  475 block_item_declaration: attribute_instance_list local_parameter_declaration • ';'

    ';'  shift, and go to state 1057


State 917

  476 block_item_declaration: attribute_instance_list parameter_declaration • ';'

    ';'  shift, and go to state 1058


State 918

  474 block_item_declaration: attribute_instance_list data_declaration •

    $default  reduce using rule 474 (block_item_declaration)


State 919

  221 data_type: ps_identifier • packed_dimension_list_optional
  623 ps_or_hierarchical_identifier: ps_identifier •

    '['  shift, and go to state 210

    '('       reduce using rule 623 (ps_or_hierarchical_identifier)
    $default  reduce using rule 238 (packed_dimension_list_optional)

    packed_dimension_list_optional  go to state 211
    packed_dimension_list           go to state 212
    packed_dimension                go to state 213


State 920

  220 data_type: hierarchical_identifier •
  625 ps_or_hierarchical_identifier: hierarchical_identifier •
  626 hierarchical_identifier: hierarchical_identifier • '.' identifier unpacked_dimension_list_optional
  689 lvalue: hierarchical_identifier •

    '.'  shift, and go to state 214

    escaped_identifier  reduce using rule 220 (data_type)
    simple_identifier   reduce using rule 220 (data_type)
    '('                 reduce using rule 625 (ps_or_hierarchical_identifier)
    $default            reduce using rule 689 (lvalue)


State 921

  222 data_type: identifier • parameter_value_assignment
  624 ps_or_hierarchical_identifier: identifier • parameter_value_assignment SCOPE identifier
  627 hierarchical_identifier: identifier • unpacked_dimension_list_optional

    '['  shift, and go to state 215
    '#'  shift, and go to state 216

    $default  reduce using rule 184 (unpacked_dimension_list_optional)

    parameter_value_assignment        go to state 1059
    unpacked_dimension_list_optional  go to state 218
    unpacked_dimension_list           go to state 219
    unpacked_dimension                go to state 220


State 922

  383 loop_statement: FOREACH '(' identifier '[' • identifier_list ']' ')' statement

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier_list  go to state 1060
    identifier       go to state 878


State 923

  406 subroutine_call_statement: VOID TOK_SING_QUOT '(' subroutine_call • ')' ';'

    ')'  shift, and go to state 1061


State 924

  422 seq_block: _BEGIN block_end_identifier_optional END block_end_identifier_optional •

    $default  reduce using rule 422 (seq_block)


State 925

  420 seq_block: _BEGIN block_end_identifier_optional block_item_declaration_list END • block_end_identifier_optional

    ':'  shift, and go to state 128

    $default  reduce using rule 549 (block_end_identifier_optional)

    block_end_identifier_optional  go to state 1062


State 926

  419 seq_block: _BEGIN block_end_identifier_optional block_item_declaration_list statement_list • END block_end_identifier_optional
  469 statement_list: statement_list • statement

    END  shift, and go to state 1063

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 911
    attribute_instance_list  go to state 161


State 927

  421 seq_block: _BEGIN block_end_identifier_optional statement_list END • block_end_identifier_optional

    ':'  shift, and go to state 128

    $default  reduce using rule 549 (block_end_identifier_optional)

    block_end_identifier_optional  go to state 1064


State 928

  380 loop_statement: WHILE '(' expression ')' • statement

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 1065
    attribute_instance_list  go to state 161


State 929

  438 wait_statement: WAIT '(' expression ')' • statement

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 1066
    attribute_instance_list  go to state 161


State 930

  382 loop_statement: DO statement WHILE '(' • expression ')' ';'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 1067
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 931

  441 hierarchical_identifier_list: hierarchical_identifier_list ',' • hierarchical_identifier

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    hierarchical_identifier  go to state 1068
    identifier               go to state 133


State 932

  440 wait_statement: WAIT_ORDER '(' hierarchical_identifier_list ')' • action_block

    ELSE  shift, and go to state 1069

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 1070
    action_block             go to state 1071
    attribute_instance_list  go to state 161


State 933

  379 loop_statement: REPEAT '(' expression ')' • statement

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 1072
    attribute_instance_list  go to state 161


State 934

  398 for_variable_declaration: VAR data_type • identifier '=' expression

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 1073


State 935

  399 for_variable_declaration: data_type identifier • '=' expression

    '='  shift, and go to state 1074


State 936

  381 loop_statement: FOR '(' for_initialization ';' • expression_optional ';' for_step ')' statement

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    $default  reduce using rule 639 (expression_optional)

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression_optional            go to state 1075
    expression                     go to state 1076
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 937

  397 for_variable_declaration: for_variable_declaration ',' • identifier '=' expression

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 1077


State 938

  637 identifier_expression_list: '.' identifier • '(' expression_optional ')'

    '('  shift, and go to state 1078


State 939

  432 expression_list: expression_list ',' • expression
  633 argument_list: expression_list ',' • identifier_expression_list

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '.'                 shift, and go to state 784
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    identifier_expression_list     go to state 1079
    expression                     go to state 1036
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 940

  347 statement_item: SUPER_NEW '(' argument_list ')' • ';'

    ';'  shift, and go to state 1080


State 941

  636 identifier_expression_list: identifier_expression_list ',' • '.' identifier '(' expression_optional ')'

    '.'  shift, and go to state 1081


State 942

  377 cycle_delay: TOK_DLY '(' expression ')' •

    $default  reduce using rule 377 (cycle_delay)


State 943

  435 event_trigger: TOK_IMP TOK_LOG_GT hierarchical_identifier ';' •

    $default  reduce using rule 435 (event_trigger)


State 944

  354 delay_control: '#' '(' mintypmax_expression ')' •

    $default  reduce using rule 354 (delay_control)


State 945

  362 event_control: '@' '(' TOK_MUL ')' •

    $default  reduce using rule 362 (event_control)


State 946

  366 event_expression: event_expression • OR event_expression
  367                 | event_expression • ',' event_expression
  368                 | '(' event_expression • ')'

    OR   shift, and go to state 948
    ','  shift, and go to state 949
    ')'  shift, and go to state 1082


State 947

  365 event_expression: expression • IFF expression
  606 mintypmax_expression: expression • ':' expression ':' expression
  607                     | expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    IFF           shift, and go to state 952
    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522
    ':'           shift, and go to state 695

    $default  reduce using rule 607 (mintypmax_expression)


State 948

  366 event_expression: event_expression OR • event_expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    POSEDGE             shift, and go to state 792
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    NEGEDGE             shift, and go to state 793
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    EDGE                shift, and go to state 794
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 796
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    event_expression               go to state 1083
    edge_identifier                go to state 798
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 799
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 949

  367 event_expression: event_expression ',' • event_expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    POSEDGE             shift, and go to state 792
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    NEGEDGE             shift, and go to state 793
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    EDGE                shift, and go to state 794
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 796
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    event_expression               go to state 1084
    edge_identifier                go to state 798
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 799
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 950

  360 event_control: '@' '(' event_expression ')' •

    $default  reduce using rule 360 (event_control)


State 951

  363 event_expression: edge_identifier expression • IFF expression
  364                 | edge_identifier expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    IFF           shift, and go to state 1085
    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 364 (event_expression)


State 952

  365 event_expression: expression IFF • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 1086
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 953

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'
  691 expression_or_cond_pattern: expression •

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 691 (expression_or_cond_pattern)


State 954

  400 conditional_statement: unique_priority_optional IF '(' cond_predicate • ')' statement else_if_list
  401                      | unique_priority_optional IF '(' cond_predicate • ')' statement else_if_list ELSE statement

    ')'  shift, and go to state 1087


State 955

  690 cond_predicate: expression_or_cond_pattern •

    $default  reduce using rule 690 (cond_predicate)


State 956

  404 case_statement: unique_priority_optional case_keyword '(' expression • ')' case_item_list ENDCASE
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522
    ')'           shift, and go to state 1088


State 957

  352 delay_or_event_control: REPEAT '(' • expression ')' event_control

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 1089
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 958

  458 nonblocking_assignment: lvalue TOK_LOG_LEQ delay_or_event_control expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 458 (nonblocking_assignment)


State 959

  446 blocking_assignment: lvalue '=' delay_or_event_control expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 446 (blocking_assignment)


State 960

  456 dynamic_array_new: NEW '[' • expression ']' '(' expression ')'
  457                  | NEW '[' • expression ']'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 1090
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 961

  452 class_new: NEW '(' • argument_list ')'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '.'                 shift, and go to state 784
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    $default  reduce using rule 635 (argument_list)

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    expression_list                go to state 785
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    argument_list                  go to state 1091
    identifier_expression_list     go to state 787
    expression                     go to state 750
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 962

  450 class_new: class_scope NEW • '(' argument_list ')'
  451          | class_scope NEW •

    '('  shift, and go to state 1092

    $default  reduce using rule 451 (class_new)


State 963

  455 class_scope: identifier parameter_value_assignment • SCOPE
  624 ps_or_hierarchical_identifier: identifier parameter_value_assignment • SCOPE identifier

    SCOPE  shift, and go to state 1093


State 964

  563 timeunits_declaration: TIMEUNIT time_literal ';' TIMEPRECISION time_literal ';' •

    $default  reduce using rule 563 (timeunits_declaration)


State 965

  564 timeunits_declaration: TIMEPRECISION time_literal ';' TIMEUNIT time_literal ';' •

    $default  reduce using rule 564 (timeunits_declaration)


State 966

   75 path_output_list: path_output_list ',' specify_terminal_descriptor •

    $default  reduce using rule 75 (path_output_list)


State 967

  109 genvar_initialization: GENVAR identifier '=' expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 109 (genvar_initialization)


State 968

  103 loop_generate_construct: FOR '(' genvar_initialization ';' expression ';' • genvar_iteration ')' generate_block

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    TOK_INC             shift, and go to state 1094
    TOK_DEC             shift, and go to state 1095

    genvar_iteration  go to state 1096
    identifier        go to state 1097


State 969

  141 ordered_port_connection_list: ordered_port_connection_list ',' ordered_port_connection •

    $default  reduce using rule 141 (ordered_port_connection_list)


State 970

  143 ordered_port_connection: attribute_instance_list • expression
  552 attribute_instance_list: attribute_instance_list • attribute_instance

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 830
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    attribute_instance             go to state 21
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 832
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 971

  144 named_port_connection_list: named_port_connection_list ',' named_port_connection •

    $default  reduce using rule 144 (named_port_connection_list)


State 972

  146 named_port_connection: attribute_instance_list • '.' identifier '(' expression_optional ')'
  147                      | attribute_instance_list • '.' identifier
  148                      | attribute_instance_list • '.' TOK_MUL
  552 attribute_instance_list: attribute_instance_list • attribute_instance

    '('  shift, and go to state 19
    '.'  shift, and go to state 831

    attribute_instance  go to state 21


State 973

  148 named_port_connection: attribute_instance_list '.' TOK_MUL •

    $default  reduce using rule 148 (named_port_connection)


State 974

  146 named_port_connection: attribute_instance_list '.' identifier • '(' expression_optional ')'
  147                      | attribute_instance_list '.' identifier •

    '('  shift, and go to state 1098

    $default  reduce using rule 147 (named_port_connection)


State 975

  263 extends_class_optional: EXTENDS • hierarchical_identifier parameter_value_assignment_optional '(' argument_list ')'
  264                       | EXTENDS • hierarchical_identifier parameter_value_assignment_optional

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    hierarchical_identifier  go to state 1099
    identifier               go to state 133


State 976

  260 class_declaration: virtual_optional CLASS lifetime_optional identifier parameter_port_list_optional extends_class_optional • implements_interface_optional ';' class_item_list ENDCLASS block_end_identifier_optional

    IMPLEMENTS  shift, and go to state 1100

    $default  reduce using rule 267 (implements_interface_optional)

    implements_interface_optional  go to state 1101


State 977

  181 port_identifier_list: port_identifier_list ',' identifier • unpacked_dimension_list_optional

    '['  shift, and go to state 215

    $default  reduce using rule 184 (unpacked_dimension_list_optional)

    unpacked_dimension_list_optional  go to state 1102
    unpacked_dimension_list           go to state 219
    unpacked_dimension                go to state 220


State 978

  187 variable_identifier_list: variable_identifier_list ',' identifier • variable_dimension_list_optional

    '['  shift, and go to state 403

    $default  reduce using rule 190 (variable_dimension_list_optional)

    variable_dimension_list_optional  go to state 1103
    variable_dimension_list           go to state 406
    variable_dimension                go to state 407
    associative_dimension             go to state 408
    unpacked_dimension                go to state 640
    unsized_dimension                 go to state 410


State 979

   67 pulse_control_specparam: PATHPULSE '$' '=' • '(' constant_mintypmax_expression ',' constant_mintypmax_expression ')'
   68                        | PATHPULSE '$' '=' • '(' constant_mintypmax_expression ')'

    '('  shift, and go to state 1104


State 980

   69 pulse_control_specparam: PATHPULSE '$' hierarchical_identifier • '$' hierarchical_identifier '=' '(' constant_mintypmax_expression ',' constant_mintypmax_expression ')'
   70                        | PATHPULSE '$' hierarchical_identifier • '$' hierarchical_identifier '=' '(' constant_mintypmax_expression ')'
  626 hierarchical_identifier: hierarchical_identifier • '.' identifier unpacked_dimension_list_optional

    '.'  shift, and go to state 214
    '$'  shift, and go to state 1105


State 981

   63 specparam_assignment_list: specparam_assignment_list ',' specparam_assignment •

    $default  reduce using rule 63 (specparam_assignment_list)


State 982

   65 specparam_assignment: identifier '=' constant_mintypmax_expression •

    $default  reduce using rule 65 (specparam_assignment)


State 983

  157 named_parameter_assignment: '.' identifier '(' • param_expression ')'
  158                           | '.' identifier '(' • ')'

    VIRTUAL             shift, and go to state 141
    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 631
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    VIRTUAL_INTERFACE   shift, and go to state 74
    '('                 shift, and go to state 263
    ')'                 shift, and go to state 1106
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    param_expression               go to state 1107
    data_type_no_identifier        go to state 672
    virtual_interface_type         go to state 97
    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 635
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 636
    non_integer_type               go to state 637
    mintypmax_expression           go to state 673
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 484
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 984

  152 ordered_parameter_assignment_list: ordered_parameter_assignment_list ',' ordered_parameter_assignment •

    $default  reduce using rule 152 (ordered_parameter_assignment_list)


State 985

  154 named_parameter_assignment_list: named_parameter_assignment_list ',' named_parameter_assignment •

    $default  reduce using rule 154 (named_parameter_assignment_list)


State 986

  249 package_declaration: attribute_instance_list PACKAGE lifetime_optional identifier ';' timeunits_declaration_optional package_item_list_optional ENDPACKAGE • block_end_identifier_optional

    ':'  shift, and go to state 128

    $default  reduce using rule 549 (block_end_identifier_optional)

    block_end_identifier_optional  go to state 1108


State 987

  250 package_item_list_optional: package_item_list_optional package_item •

    $default  reduce using rule 250 (package_item_list_optional)


State 988

  252 package_item: package_or_generate_item_declaration •

    $default  reduce using rule 252 (package_item)


State 989

  555 attr_spec_list: attr_spec_list ',' identifier '=' constant_primary •

    $default  reduce using rule 555 (attr_spec_list)


State 990

   41 parameter_port_declaration: TYPE • type_assignment_list

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    type_assignment_list  go to state 1109
    type_assignment       go to state 291
    identifier            go to state 292


State 991

   37 parameter_port_list: '#' '(' ')' •

    $default  reduce using rule 37 (parameter_port_list)


State 992

   36 parameter_port_list: '#' '(' parameter_port_declaration • ')'

    ')'  shift, and go to state 1110


State 993

   40 parameter_port_declaration: data_type • param_assignment_list

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    param_assignment_list  go to state 1111
    param_assignment       go to state 145
    identifier             go to state 294


State 994

   39 parameter_port_declaration: local_parameter_declaration •

    $default  reduce using rule 39 (parameter_port_declaration)


State 995

   38 parameter_port_declaration: parameter_declaration •

    $default  reduce using rule 38 (parameter_port_declaration)


State 996

   35 parameter_port_list: '#' '(' param_assignment_list • ')'
  502 param_assignment_list: param_assignment_list • ',' param_assignment

    ','  shift, and go to state 295
    ')'  shift, and go to state 1112


State 997

   13 port_declaration_list: '(' ')' •

    $default  reduce using rule 13 (port_declaration_list)


State 998

   22 ansi_port_declaration: '.' • identifier '(' expression_optional ')'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 1113


State 999

   12 port_declaration_list: '(' ansi_port_declaration_list • ')'
   15 ansi_port_declaration_list: ansi_port_declaration_list • ',' ansi_port_declaration

    ','  shift, and go to state 1114
    ')'  shift, and go to state 1115


State 1000

   16 ansi_port_declaration_list: ansi_port_declaration •

    $default  reduce using rule 16 (ansi_port_declaration_list)


State 1001

   17 ansi_port_declaration: net_port_header • identifier unpacked_dimension_list_optional '=' expression
   18                      | net_port_header • identifier unpacked_dimension_list_optional

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 1116


State 1002

   19 ansi_port_declaration: variable_port_header • identifier variable_dimension_list_optional '=' expression
   20                      | variable_port_header • identifier variable_dimension_list_optional

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 1117


State 1003

   21 ansi_port_declaration: port_direction • '.' identifier '(' expression_optional ')'
   23 net_port_header: port_direction • net_port_type
   25 variable_port_header: port_direction • variable_port_type

    VIRTUAL             shift, and go to state 141
    VAR                 shift, and go to state 420
    INTERCONNECT        shift, and go to state 421
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    SUPPLY0             shift, and go to state 422
    SUPPLY1             shift, and go to state 423
    TRI                 shift, and go to state 424
    TRIAND              shift, and go to state 425
    TRIOR               shift, and go to state 426
    TRIREG              shift, and go to state 427
    TRI0                shift, and go to state 428
    TRI1                shift, and go to state 429
    UWIRE               shift, and go to state 430
    WIRE                shift, and go to state 431
    WAND                shift, and go to state 432
    WOR                 shift, and go to state 433
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    '.'                 shift, and go to state 1118
    '$'                 shift, and go to state 76

    net_port_type            go to state 1119
    net_type                 go to state 435
    variable_port_type       go to state 1120
    data_type                go to state 437
    data_type_no_identifier  go to state 96
    virtual_interface_type   go to state 97
    integer_vector_type      go to state 98
    integer_atom_type        go to state 115
    non_integer_type         go to state 116
    ps_identifier            go to state 117
    hierarchical_identifier  go to state 118
    identifier               go to state 120


State 1004

   24 net_port_header: net_port_type •

    $default  reduce using rule 24 (net_port_header)


State 1005

   26 variable_port_header: variable_port_type •

    $default  reduce using rule 26 (variable_port_header)


State 1006

  216 list_of_ports: '(' port_list • ')'
  217 port_list: port_list • ',' identifier

    ','  shift, and go to state 1121
    ')'  shift, and go to state 1122


State 1007

  218 port_list: identifier •
  222 data_type: identifier • parameter_value_assignment
  627 hierarchical_identifier: identifier • unpacked_dimension_list_optional

    '['  shift, and go to state 215
    '#'  shift, and go to state 216

    ','       reduce using rule 218 (port_list)
    ')'       reduce using rule 218 (port_list)
    $default  reduce using rule 184 (unpacked_dimension_list_optional)

    parameter_value_assignment        go to state 217
    unpacked_dimension_list_optional  go to state 218
    unpacked_dimension_list           go to state 219
    unpacked_dimension                go to state 220


State 1008

   11 module_ansi_header: attribute_instance_list module_keyword lifetime_optional identifier package_import_declaration_list parameter_port_list_optional port_declaration_list ';' •

    $default  reduce using rule 11 (module_ansi_header)


State 1009

   10 module_nonansi_header: attribute_instance_list module_keyword lifetime_optional identifier package_import_declaration_list parameter_port_list_optional list_of_ports ';' •

    $default  reduce using rule 10 (module_nonansi_header)


State 1010

  509 constant_mintypmax_expression: expression ':' expression ':' • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 1123
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1011

  299 function_body_declaration: function_type_name ';' tf_item_declaration_list statement_list_optional ENDFUNCTION • function_block_end_identifier_optional

    ':'  shift, and go to state 1124

    $default  reduce using rule 549 (block_end_identifier_optional)

    function_block_end_identifier_optional  go to state 1125
    block_end_identifier_optional           go to state 1126


State 1012

  300 function_body_declaration: function_type_name '(' tf_port_list_optional ')' ';' • block_item_declaration_list statement_list_optional ENDFUNCTION function_block_end_identifier_optional
  301                          | function_type_name '(' tf_port_list_optional ')' ';' • statement_list_optional ENDFUNCTION function_block_end_identifier_optional

    ENDFUNCTION  reduce using rule 327 (statement_list_optional)
    $default     reduce using rule 553 (attribute_instance_list)

    statement_list_optional      go to state 1127
    statement                    go to state 758
    block_item_declaration_list  go to state 1128
    statement_list               go to state 863
    block_item_declaration       go to state 762
    attribute_instance_list      go to state 763


State 1013

  315 tf_port_list: tf_port_list ',' tf_port_item •

    $default  reduce using rule 315 (tf_port_list)


State 1014

  324 tf_port_direction: CONST REF •

    $default  reduce using rule 324 (tf_port_direction)


State 1015

  317 tf_port_item: attribute_instance_list tf_port_direction VAR • data_type identifier variable_dimension_list_optional equals_expression_optional
  318             | attribute_instance_list tf_port_direction VAR • data_type equals_expression_optional

    VIRTUAL             shift, and go to state 141
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    '$'                 shift, and go to state 76

    data_type                go to state 1129
    data_type_no_identifier  go to state 96
    virtual_interface_type   go to state 97
    integer_vector_type      go to state 98
    integer_atom_type        go to state 115
    non_integer_type         go to state 116
    ps_identifier            go to state 117
    hierarchical_identifier  go to state 118
    identifier               go to state 120


State 1016

  319 tf_port_item: attribute_instance_list tf_port_direction data_type • identifier variable_dimension_list_optional equals_expression_optional
  320             | attribute_instance_list tf_port_direction data_type • equals_expression_optional

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    '='                 shift, and go to state 1130

    $default  reduce using rule 322 (equals_expression_optional)

    equals_expression_optional  go to state 1131
    identifier                  go to state 1132


State 1017

  618 randomize_call: RANDOMIZE attribute_instance_list '(' _NULL ')' •

    $default  reduce using rule 618 (randomize_call)


State 1018

  619 identifier_list: identifier_list ',' • identifier

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 1133


State 1019

  616 randomize_call: RANDOMIZE attribute_instance_list '(' identifier_list ')' •

    $default  reduce using rule 616 (randomize_call)


State 1020

  606 mintypmax_expression: expression ':' expression ':' • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 1134
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1021

  582 primary: casting_type TOK_SING_QUOT '(' expression ')' •

    $default  reduce using rule 582 (primary)


State 1022

  554 attribute_instance: '(' • TOK_MUL attr_spec_list TOK_MUL ')'
  612 tf_call: implicit_class_handle '.' identifier attribute_instance_list '(' • argument_list ')'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_MUL             shift, and go to state 126
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '.'                 shift, and go to state 784
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    $default  reduce using rule 635 (argument_list)

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    expression_list                go to state 785
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    argument_list                  go to state 1135
    identifier_expression_list     go to state 787
    expression                     go to state 750
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1023

  611 tf_call: ps_or_hierarchical_identifier attribute_instance_list '(' argument_list ')' •

    $default  reduce using rule 611 (tf_call)


State 1024

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'
  694 value_range: '[' expression • ':' expression ']'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522
    ':'           shift, and go to state 1136


State 1025

  692 value_range_list: value_range_list ',' • value_range

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '['                 shift, and go to state 886
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 887
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    value_range                    go to state 1137
    identifier                     go to state 289


State 1026

  682 expression: expression INSIDE '{' value_range_list '}' •

    $default  reduce using rule 682 (expression)


State 1027

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  681           | expression '?' expression ':' expression •
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE  shift, and go to state 493
    '?'     shift, and go to state 522

    $default  reduce using rule 681 (expression)


State 1028

  107 generate_block: _BEGIN ':' identifier • generate_item_list END block_end_identifier_optional

    $default  reduce using rule 80 (generate_item_list)

    generate_item_list  go to state 1138


State 1029

  108 generate_block: _BEGIN generate_item_list END • block_end_identifier_optional

    ':'  shift, and go to state 128

    $default  reduce using rule 549 (block_end_identifier_optional)

    block_end_identifier_optional  go to state 1139


State 1030

   95 if_generate_construct: IF '(' expression ')' generate_block ELSE generate_block •

    $default  reduce using rule 95 (if_generate_construct)


State 1031

  105 generate_block: identifier ':' _BEGIN • ':' identifier generate_item_list END block_end_identifier_optional
  106               | identifier ':' _BEGIN • generate_item_list END block_end_identifier_optional

    ':'  shift, and go to state 1140

    $default  reduce using rule 80 (generate_item_list)

    generate_item_list  go to state 1141


State 1032

  310 task_body_declaration: ps_or_hierarchical_identifier ';' tf_item_declaration_list statement_list_optional ENDTASK • block_end_identifier_optional

    ':'  shift, and go to state 128

    $default  reduce using rule 549 (block_end_identifier_optional)

    block_end_identifier_optional  go to state 1142


State 1033

  311 task_body_declaration: ps_or_hierarchical_identifier '(' tf_port_list_optional ')' ';' • block_item_declaration_list statement_list_optional ENDTASK block_end_identifier_optional
  312                      | ps_or_hierarchical_identifier '(' tf_port_list_optional ')' ';' • statement_list_optional ENDTASK block_end_identifier_optional

    ENDTASK   reduce using rule 327 (statement_list_optional)
    $default  reduce using rule 553 (attribute_instance_list)

    statement_list_optional      go to state 1143
    statement                    go to state 758
    block_item_declaration_list  go to state 1144
    statement_list               go to state 863
    block_item_declaration       go to state 762
    attribute_instance_list      go to state 763


State 1034

  101 case_generate_item: DEFAULT ':' generate_block •

    $default  reduce using rule 101 (case_generate_item)


State 1035

  100 case_generate_item: expression_list ':' generate_block •

    $default  reduce using rule 100 (case_generate_item)


State 1036

  432 expression_list: expression_list ',' expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 432 (expression_list)


State 1037

  130 lvalue_list: lvalue_list '=' lvalue •

    $default  reduce using rule 130 (lvalue_list)


State 1038

  424 par_block: FORK block_end_identifier_optional block_item_declaration_list join_keyword block_end_identifier_optional •

    $default  reduce using rule 424 (par_block)


State 1039

  423 par_block: FORK block_end_identifier_optional block_item_declaration_list statement_list join_keyword • block_end_identifier_optional

    ':'  shift, and go to state 128

    $default  reduce using rule 549 (block_end_identifier_optional)

    block_end_identifier_optional  go to state 1145


State 1040

  425 par_block: FORK block_end_identifier_optional statement_list join_keyword block_end_identifier_optional •

    $default  reduce using rule 425 (par_block)


State 1041

  487 overload_operator: TOK_LOG_EQ •

    $default  reduce using rule 487 (overload_operator)


State 1042

  488 overload_operator: TOK_LOG_NEQ •

    $default  reduce using rule 488 (overload_operator)


State 1043

  490 overload_operator: TOK_LOG_LEQ •

    $default  reduce using rule 490 (overload_operator)


State 1044

  492 overload_operator: TOK_LOG_GEQ •

    $default  reduce using rule 492 (overload_operator)


State 1045

  484 overload_operator: TOK_PWR •

    $default  reduce using rule 484 (overload_operator)


State 1046

  479 overload_operator: TOK_PLUS •

    $default  reduce using rule 479 (overload_operator)


State 1047

  481 overload_operator: TOK_MINUS •

    $default  reduce using rule 481 (overload_operator)


State 1048

  483 overload_operator: TOK_MUL •

    $default  reduce using rule 483 (overload_operator)


State 1049

  485 overload_operator: TOK_DIV •

    $default  reduce using rule 485 (overload_operator)


State 1050

  486 overload_operator: TOK_MOD •

    $default  reduce using rule 486 (overload_operator)


State 1051

  489 overload_operator: TOK_LOG_LT •

    $default  reduce using rule 489 (overload_operator)


State 1052

  491 overload_operator: TOK_LOG_GT •

    $default  reduce using rule 491 (overload_operator)


State 1053

  480 overload_operator: TOK_INC •

    $default  reduce using rule 480 (overload_operator)


State 1054

  482 overload_operator: TOK_DEC •

    $default  reduce using rule 482 (overload_operator)


State 1055

  493 overload_operator: '=' •

    $default  reduce using rule 493 (overload_operator)


State 1056

  478 overload_declaration: BIND overload_operator • FUNCTION data_type identifier '(' overload_proto_formals ')' ';'

    FUNCTION  shift, and go to state 1146


State 1057

  475 block_item_declaration: attribute_instance_list local_parameter_declaration ';' •

    $default  reduce using rule 475 (block_item_declaration)


State 1058

  476 block_item_declaration: attribute_instance_list parameter_declaration ';' •

    $default  reduce using rule 476 (block_item_declaration)


State 1059

  222 data_type: identifier parameter_value_assignment •
  624 ps_or_hierarchical_identifier: identifier parameter_value_assignment • SCOPE identifier

    SCOPE  shift, and go to state 740

    $default  reduce using rule 222 (data_type)


State 1060

  383 loop_statement: FOREACH '(' identifier '[' identifier_list • ']' ')' statement
  619 identifier_list: identifier_list • ',' identifier

    ','  shift, and go to state 1018
    ']'  shift, and go to state 1147


State 1061

  406 subroutine_call_statement: VOID TOK_SING_QUOT '(' subroutine_call ')' • ';'

    ';'  shift, and go to state 1148


State 1062

  420 seq_block: _BEGIN block_end_identifier_optional block_item_declaration_list END block_end_identifier_optional •

    $default  reduce using rule 420 (seq_block)


State 1063

  419 seq_block: _BEGIN block_end_identifier_optional block_item_declaration_list statement_list END • block_end_identifier_optional

    ':'  shift, and go to state 128

    $default  reduce using rule 549 (block_end_identifier_optional)

    block_end_identifier_optional  go to state 1149


State 1064

  421 seq_block: _BEGIN block_end_identifier_optional statement_list END block_end_identifier_optional •

    $default  reduce using rule 421 (seq_block)


State 1065

  380 loop_statement: WHILE '(' expression ')' statement •

    $default  reduce using rule 380 (loop_statement)


State 1066

  438 wait_statement: WAIT '(' expression ')' statement •

    $default  reduce using rule 438 (wait_statement)


State 1067

  382 loop_statement: DO statement WHILE '(' expression • ')' ';'
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522
    ')'           shift, and go to state 1150


State 1068

  441 hierarchical_identifier_list: hierarchical_identifier_list ',' hierarchical_identifier •
  626 hierarchical_identifier: hierarchical_identifier • '.' identifier unpacked_dimension_list_optional

    '.'  shift, and go to state 214

    $default  reduce using rule 441 (hierarchical_identifier_list)


State 1069

  445 action_block: ELSE • statement

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 1151
    attribute_instance_list  go to state 161


State 1070

  443 action_block: statement •
  444             | statement • ELSE statement

    ELSE  shift, and go to state 1152

    $default  reduce using rule 443 (action_block)


State 1071

  440 wait_statement: WAIT_ORDER '(' hierarchical_identifier_list ')' action_block •

    $default  reduce using rule 440 (wait_statement)


State 1072

  379 loop_statement: REPEAT '(' expression ')' statement •

    $default  reduce using rule 379 (loop_statement)


State 1073

  398 for_variable_declaration: VAR data_type identifier • '=' expression

    '='  shift, and go to state 1153


State 1074

  399 for_variable_declaration: data_type identifier '=' • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 1154
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1075

  381 loop_statement: FOR '(' for_initialization ';' expression_optional • ';' for_step ')' statement

    ';'  shift, and go to state 1155


State 1076

  638 expression_optional: expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 638 (expression_optional)


State 1077

  397 for_variable_declaration: for_variable_declaration ',' identifier • '=' expression

    '='  shift, and go to state 1156


State 1078

  637 identifier_expression_list: '.' identifier '(' • expression_optional ')'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    $default  reduce using rule 639 (expression_optional)

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression_optional            go to state 1157
    expression                     go to state 1076
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1079

  633 argument_list: expression_list ',' identifier_expression_list •
  636 identifier_expression_list: identifier_expression_list • ',' '.' identifier '(' expression_optional ')'

    ','  shift, and go to state 941

    $default  reduce using rule 633 (argument_list)


State 1080

  347 statement_item: SUPER_NEW '(' argument_list ')' ';' •

    $default  reduce using rule 347 (statement_item)


State 1081

  636 identifier_expression_list: identifier_expression_list ',' '.' • identifier '(' expression_optional ')'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 1158


State 1082

  368 event_expression: '(' event_expression ')' •

    $default  reduce using rule 368 (event_expression)


State 1083

  366 event_expression: event_expression • OR event_expression
  366                 | event_expression OR event_expression •
  367                 | event_expression • ',' event_expression

    ','  shift, and go to state 949

    $default  reduce using rule 366 (event_expression)


State 1084

  366 event_expression: event_expression • OR event_expression
  367                 | event_expression • ',' event_expression
  367                 | event_expression ',' event_expression •

    $default  reduce using rule 367 (event_expression)


State 1085

  363 event_expression: edge_identifier expression IFF • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 1159
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1086

  365 event_expression: expression IFF expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 365 (event_expression)


State 1087

  400 conditional_statement: unique_priority_optional IF '(' cond_predicate ')' • statement else_if_list
  401                      | unique_priority_optional IF '(' cond_predicate ')' • statement else_if_list ELSE statement

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 1160
    attribute_instance_list  go to state 161


State 1088

  404 case_statement: unique_priority_optional case_keyword '(' expression ')' • case_item_list ENDCASE

    DEFAULT             shift, and go to state 1161
    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    case_item_list                 go to state 1162
    case_item                      go to state 1163
    expression_list                go to state 1164
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 750
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1089

  352 delay_or_event_control: REPEAT '(' expression • ')' event_control
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522
    ')'           shift, and go to state 1165


State 1090

  456 dynamic_array_new: NEW '[' expression • ']' '(' expression ')'
  457                  | NEW '[' expression • ']'
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522
    ']'           shift, and go to state 1166


State 1091

  452 class_new: NEW '(' argument_list • ')'

    ')'  shift, and go to state 1167


State 1092

  450 class_new: class_scope NEW '(' • argument_list ')'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '.'                 shift, and go to state 784
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    $default  reduce using rule 635 (argument_list)

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    expression_list                go to state 785
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    argument_list                  go to state 1168
    identifier_expression_list     go to state 787
    expression                     go to state 750
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1093

  455 class_scope: identifier parameter_value_assignment SCOPE •
  624 ps_or_hierarchical_identifier: identifier parameter_value_assignment SCOPE • identifier

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    $default  reduce using rule 455 (class_scope)

    identifier  go to state 895


State 1094

  112 genvar_iteration: TOK_INC • identifier

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 1169


State 1095

  113 genvar_iteration: TOK_DEC • identifier

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 1170


State 1096

  103 loop_generate_construct: FOR '(' genvar_initialization ';' expression ';' genvar_iteration • ')' generate_block

    ')'  shift, and go to state 1171


State 1097

  111 genvar_iteration: identifier • assignment_operator expression
  114                 | identifier • TOK_INC
  115                 | identifier • TOK_DEC

    TOK_INC       shift, and go to state 1172
    TOK_DEC       shift, and go to state 1173
    TOK_SL_EQ     shift, and go to state 592
    TOK_SR_EQ     shift, and go to state 593
    TOK_SLA_EQ    shift, and go to state 594
    TOK_SRA_EQ    shift, and go to state 595
    TOK_PLUS_EQ   shift, and go to state 596
    TOK_MINUS_EQ  shift, and go to state 597
    TOK_MUL_EQ    shift, and go to state 598
    TOK_DIV_EQ    shift, and go to state 599
    TOK_MOD_EQ    shift, and go to state 600
    TOK_AND_EQ    shift, and go to state 601
    TOK_OR_EQ     shift, and go to state 602
    TOK_XOR_EQ    shift, and go to state 603
    '='           shift, and go to state 697

    assignment_operator  go to state 1174


State 1098

  146 named_port_connection: attribute_instance_list '.' identifier '(' • expression_optional ')'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    $default  reduce using rule 639 (expression_optional)

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression_optional            go to state 1175
    expression                     go to state 1076
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1099

  263 extends_class_optional: EXTENDS hierarchical_identifier • parameter_value_assignment_optional '(' argument_list ')'
  264                       | EXTENDS hierarchical_identifier • parameter_value_assignment_optional
  626 hierarchical_identifier: hierarchical_identifier • '.' identifier unpacked_dimension_list_optional

    '.'  shift, and go to state 214
    '#'  shift, and go to state 216

    $default  reduce using rule 232 (parameter_value_assignment_optional)

    parameter_value_assignment           go to state 411
    parameter_value_assignment_optional  go to state 1176


State 1100

  266 implements_interface_optional: IMPLEMENTS • interface_class_type_list

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    interface_class_type_list  go to state 1177
    interface_class_type       go to state 1178
    hierarchical_identifier    go to state 1179
    identifier                 go to state 133


State 1101

  260 class_declaration: virtual_optional CLASS lifetime_optional identifier parameter_port_list_optional extends_class_optional implements_interface_optional • ';' class_item_list ENDCLASS block_end_identifier_optional

    ';'  shift, and go to state 1180


State 1102

  181 port_identifier_list: port_identifier_list ',' identifier unpacked_dimension_list_optional •

    $default  reduce using rule 181 (port_identifier_list)


State 1103

  187 variable_identifier_list: variable_identifier_list ',' identifier variable_dimension_list_optional •

    $default  reduce using rule 187 (variable_identifier_list)


State 1104

   67 pulse_control_specparam: PATHPULSE '$' '=' '(' • constant_mintypmax_expression ',' constant_mintypmax_expression ')'
   68                        | PATHPULSE '$' '=' '(' • constant_mintypmax_expression ')'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    constant_mintypmax_expression  go to state 1181
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 458
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1105

   69 pulse_control_specparam: PATHPULSE '$' hierarchical_identifier '$' • hierarchical_identifier '=' '(' constant_mintypmax_expression ',' constant_mintypmax_expression ')'
   70                        | PATHPULSE '$' hierarchical_identifier '$' • hierarchical_identifier '=' '(' constant_mintypmax_expression ')'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    hierarchical_identifier  go to state 1182
    identifier               go to state 133


State 1106

  158 named_parameter_assignment: '.' identifier '(' ')' •

    $default  reduce using rule 158 (named_parameter_assignment)


State 1107

  157 named_parameter_assignment: '.' identifier '(' param_expression • ')'

    ')'  shift, and go to state 1183


State 1108

  249 package_declaration: attribute_instance_list PACKAGE lifetime_optional identifier ';' timeunits_declaration_optional package_item_list_optional ENDPACKAGE block_end_identifier_optional •

    $default  reduce using rule 249 (package_declaration)


State 1109

   41 parameter_port_declaration: TYPE type_assignment_list •
  504 type_assignment_list: type_assignment_list • ',' type_assignment

    ','  shift, and go to state 527

    $default  reduce using rule 41 (parameter_port_declaration)


State 1110

   36 parameter_port_list: '#' '(' parameter_port_declaration ')' •

    $default  reduce using rule 36 (parameter_port_list)


State 1111

   40 parameter_port_declaration: data_type param_assignment_list •
  502 param_assignment_list: param_assignment_list • ',' param_assignment

    ','  shift, and go to state 295

    $default  reduce using rule 40 (parameter_port_declaration)


State 1112

   35 parameter_port_list: '#' '(' param_assignment_list ')' •

    $default  reduce using rule 35 (parameter_port_list)


State 1113

   22 ansi_port_declaration: '.' identifier • '(' expression_optional ')'

    '('  shift, and go to state 1184


State 1114

   15 ansi_port_declaration_list: ansi_port_declaration_list ',' • ansi_port_declaration

    VIRTUAL             shift, and go to state 141
    INPUT               shift, and go to state 868
    OUTPUT              shift, and go to state 869
    INOUT               shift, and go to state 870
    REF                 shift, and go to state 871
    VAR                 shift, and go to state 420
    INTERCONNECT        shift, and go to state 421
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    SUPPLY0             shift, and go to state 422
    SUPPLY1             shift, and go to state 423
    TRI                 shift, and go to state 424
    TRIAND              shift, and go to state 425
    TRIOR               shift, and go to state 426
    TRIREG              shift, and go to state 427
    TRI0                shift, and go to state 428
    TRI1                shift, and go to state 429
    UWIRE               shift, and go to state 430
    WIRE                shift, and go to state 431
    WAND                shift, and go to state 432
    WOR                 shift, and go to state 433
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    '.'                 shift, and go to state 998
    '$'                 shift, and go to state 76

    ansi_port_declaration    go to state 1185
    net_port_header          go to state 1001
    variable_port_header     go to state 1002
    port_direction           go to state 1003
    net_port_type            go to state 1004
    net_type                 go to state 435
    variable_port_type       go to state 1005
    data_type                go to state 437
    data_type_no_identifier  go to state 96
    virtual_interface_type   go to state 97
    integer_vector_type      go to state 98
    integer_atom_type        go to state 115
    non_integer_type         go to state 116
    ps_identifier            go to state 117
    hierarchical_identifier  go to state 118
    identifier               go to state 120


State 1115

   12 port_declaration_list: '(' ansi_port_declaration_list ')' •

    $default  reduce using rule 12 (port_declaration_list)


State 1116

   17 ansi_port_declaration: net_port_header identifier • unpacked_dimension_list_optional '=' expression
   18                      | net_port_header identifier • unpacked_dimension_list_optional

    '['  shift, and go to state 215

    $default  reduce using rule 184 (unpacked_dimension_list_optional)

    unpacked_dimension_list_optional  go to state 1186
    unpacked_dimension_list           go to state 219
    unpacked_dimension                go to state 220


State 1117

   19 ansi_port_declaration: variable_port_header identifier • variable_dimension_list_optional '=' expression
   20                      | variable_port_header identifier • variable_dimension_list_optional

    '['  shift, and go to state 403

    $default  reduce using rule 190 (variable_dimension_list_optional)

    variable_dimension_list_optional  go to state 1187
    variable_dimension_list           go to state 406
    variable_dimension                go to state 407
    associative_dimension             go to state 408
    unpacked_dimension                go to state 640
    unsized_dimension                 go to state 410


State 1118

   21 ansi_port_declaration: port_direction '.' • identifier '(' expression_optional ')'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 1188


State 1119

   23 net_port_header: port_direction net_port_type •

    $default  reduce using rule 23 (net_port_header)


State 1120

   25 variable_port_header: port_direction variable_port_type •

    $default  reduce using rule 25 (variable_port_header)


State 1121

  217 port_list: port_list ',' • identifier

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 1189


State 1122

  216 list_of_ports: '(' port_list ')' •

    $default  reduce using rule 216 (list_of_ports)


State 1123

  509 constant_mintypmax_expression: expression ':' expression ':' expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 509 (constant_mintypmax_expression)


State 1124

  303 function_block_end_identifier_optional: ':' • NEW
  548 block_end_identifier_optional: ':' • identifier

    NEW                 shift, and go to state 1190
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 226


State 1125

  299 function_body_declaration: function_type_name ';' tf_item_declaration_list statement_list_optional ENDFUNCTION function_block_end_identifier_optional •

    $default  reduce using rule 299 (function_body_declaration)


State 1126

  302 function_block_end_identifier_optional: block_end_identifier_optional •

    $default  reduce using rule 302 (function_block_end_identifier_optional)


State 1127

  301 function_body_declaration: function_type_name '(' tf_port_list_optional ')' ';' statement_list_optional • ENDFUNCTION function_block_end_identifier_optional

    ENDFUNCTION  shift, and go to state 1191


State 1128

  300 function_body_declaration: function_type_name '(' tf_port_list_optional ')' ';' block_item_declaration_list • statement_list_optional ENDFUNCTION function_block_end_identifier_optional
  430 block_item_declaration_list: block_item_declaration_list • block_item_declaration

    ENDFUNCTION  reduce using rule 327 (statement_list_optional)
    $default     reduce using rule 553 (attribute_instance_list)

    statement_list_optional  go to state 1192
    statement                go to state 758
    statement_list           go to state 863
    block_item_declaration   go to state 910
    attribute_instance_list  go to state 763


State 1129

  317 tf_port_item: attribute_instance_list tf_port_direction VAR data_type • identifier variable_dimension_list_optional equals_expression_optional
  318             | attribute_instance_list tf_port_direction VAR data_type • equals_expression_optional

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    '='                 shift, and go to state 1130

    $default  reduce using rule 322 (equals_expression_optional)

    equals_expression_optional  go to state 1193
    identifier                  go to state 1194


State 1130

  321 equals_expression_optional: '=' • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 1195
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1131

  320 tf_port_item: attribute_instance_list tf_port_direction data_type equals_expression_optional •

    $default  reduce using rule 320 (tf_port_item)


State 1132

  319 tf_port_item: attribute_instance_list tf_port_direction data_type identifier • variable_dimension_list_optional equals_expression_optional

    '['  shift, and go to state 403

    $default  reduce using rule 190 (variable_dimension_list_optional)

    variable_dimension_list_optional  go to state 1196
    variable_dimension_list           go to state 406
    variable_dimension                go to state 407
    associative_dimension             go to state 408
    unpacked_dimension                go to state 640
    unsized_dimension                 go to state 410


State 1133

  619 identifier_list: identifier_list ',' identifier •

    $default  reduce using rule 619 (identifier_list)


State 1134

  606 mintypmax_expression: expression ':' expression ':' expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 606 (mintypmax_expression)


State 1135

  612 tf_call: implicit_class_handle '.' identifier attribute_instance_list '(' argument_list • ')'

    ')'  shift, and go to state 1197


State 1136

  694 value_range: '[' expression ':' • expression ']'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 1198
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1137

  692 value_range_list: value_range_list ',' value_range •

    $default  reduce using rule 692 (value_range_list)


State 1138

   79 generate_item_list: generate_item_list • generate_item
  107 generate_block: _BEGIN ':' identifier generate_item_list • END block_end_identifier_optional

    VIRTUAL             shift, and go to state 23
    RAND                shift, and go to state 24
    DEFPARAM            shift, and go to state 25
    IMPORT              shift, and go to state 26
    DEFAULT             shift, and go to state 27
    CONST               shift, and go to state 28
    FUNCTION            shift, and go to state 29
    STATIC              shift, and go to state 30
    PROTECTED           shift, and go to state 31
    LOCAL               shift, and go to state 32
    RANDC               shift, and go to state 33
    IF                  shift, and go to state 34
    LOCALPARAM          shift, and go to state 35
    PARAMETER           shift, and go to state 36
    VAR                 shift, and go to state 37
    TYPEDEF             shift, and go to state 38
    AUTOMATIC           shift, and go to state 39
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    TASK                shift, and go to state 55
    CASE                shift, and go to state 56
    ALIAS               shift, and go to state 57
    FINAL               shift, and go to state 58
    END                 shift, and go to state 1199
    ASSIGN              shift, and go to state 60
    ALWAYS              shift, and go to state 61
    BIND                shift, and go to state 62
    _INITIAL            shift, and go to state 63
    ALWAYS_LATCH        shift, and go to state 64
    ALWAYS_FF           shift, and go to state 65
    ALWAYS_COMB         shift, and go to state 68
    FOR                 shift, and go to state 70
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    ';'                 shift, and go to state 75
    '$'                 shift, and go to state 76

    $default  reduce using rule 262 (virtual_optional)

    generate_item                         go to state 392
    module_or_generate_item               go to state 393
    module_common_item                    go to state 83
    if_generate_construct                 go to state 84
    case_generate_construct               go to state 85
    loop_generate_construct               go to state 86
    net_alias                             go to state 87
    continuous_assign                     go to state 88
    bind_directive                        go to state 89
    generic_instantiation                 go to state 90
    always_keyword                        go to state 91
    module_or_generate_item_declaration   go to state 92
    parameter_override                    go to state 93
    data_type                             go to state 95
    data_type_no_identifier               go to state 96
    virtual_interface_type                go to state 97
    integer_vector_type                   go to state 98
    package_or_generate_item_declaration  go to state 99
    class_declaration                     go to state 100
    virtual_optional                      go to state 101
    function_declaration                  go to state 102
    task_declaration                      go to state 103
    local_parameter_declaration           go to state 104
    parameter_declaration                 go to state 105
    data_declaration                      go to state 106
    method_variable_qualifier_list        go to state 107
    variable_qualifier_list               go to state 108
    variable_qualifier                    go to state 109
    method_variable_qualifier             go to state 110
    type_declaration                      go to state 111
    package_import_declaration            go to state 112
    integer_atom_type                     go to state 115
    non_integer_type                      go to state 116
    ps_identifier                         go to state 117
    hierarchical_identifier               go to state 118
    lifetime                              go to state 119
    identifier                            go to state 120


State 1139

  108 generate_block: _BEGIN generate_item_list END block_end_identifier_optional •

    $default  reduce using rule 108 (generate_block)


State 1140

  105 generate_block: identifier ':' _BEGIN ':' • identifier generate_item_list END block_end_identifier_optional

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 1200


State 1141

   79 generate_item_list: generate_item_list • generate_item
  106 generate_block: identifier ':' _BEGIN generate_item_list • END block_end_identifier_optional

    VIRTUAL             shift, and go to state 23
    RAND                shift, and go to state 24
    DEFPARAM            shift, and go to state 25
    IMPORT              shift, and go to state 26
    DEFAULT             shift, and go to state 27
    CONST               shift, and go to state 28
    FUNCTION            shift, and go to state 29
    STATIC              shift, and go to state 30
    PROTECTED           shift, and go to state 31
    LOCAL               shift, and go to state 32
    RANDC               shift, and go to state 33
    IF                  shift, and go to state 34
    LOCALPARAM          shift, and go to state 35
    PARAMETER           shift, and go to state 36
    VAR                 shift, and go to state 37
    TYPEDEF             shift, and go to state 38
    AUTOMATIC           shift, and go to state 39
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    TASK                shift, and go to state 55
    CASE                shift, and go to state 56
    ALIAS               shift, and go to state 57
    FINAL               shift, and go to state 58
    END                 shift, and go to state 1201
    ASSIGN              shift, and go to state 60
    ALWAYS              shift, and go to state 61
    BIND                shift, and go to state 62
    _INITIAL            shift, and go to state 63
    ALWAYS_LATCH        shift, and go to state 64
    ALWAYS_FF           shift, and go to state 65
    ALWAYS_COMB         shift, and go to state 68
    FOR                 shift, and go to state 70
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    ';'                 shift, and go to state 75
    '$'                 shift, and go to state 76

    $default  reduce using rule 262 (virtual_optional)

    generate_item                         go to state 392
    module_or_generate_item               go to state 393
    module_common_item                    go to state 83
    if_generate_construct                 go to state 84
    case_generate_construct               go to state 85
    loop_generate_construct               go to state 86
    net_alias                             go to state 87
    continuous_assign                     go to state 88
    bind_directive                        go to state 89
    generic_instantiation                 go to state 90
    always_keyword                        go to state 91
    module_or_generate_item_declaration   go to state 92
    parameter_override                    go to state 93
    data_type                             go to state 95
    data_type_no_identifier               go to state 96
    virtual_interface_type                go to state 97
    integer_vector_type                   go to state 98
    package_or_generate_item_declaration  go to state 99
    class_declaration                     go to state 100
    virtual_optional                      go to state 101
    function_declaration                  go to state 102
    task_declaration                      go to state 103
    local_parameter_declaration           go to state 104
    parameter_declaration                 go to state 105
    data_declaration                      go to state 106
    method_variable_qualifier_list        go to state 107
    variable_qualifier_list               go to state 108
    variable_qualifier                    go to state 109
    method_variable_qualifier             go to state 110
    type_declaration                      go to state 111
    package_import_declaration            go to state 112
    integer_atom_type                     go to state 115
    non_integer_type                      go to state 116
    ps_identifier                         go to state 117
    hierarchical_identifier               go to state 118
    lifetime                              go to state 119
    identifier                            go to state 120


State 1142

  310 task_body_declaration: ps_or_hierarchical_identifier ';' tf_item_declaration_list statement_list_optional ENDTASK block_end_identifier_optional •

    $default  reduce using rule 310 (task_body_declaration)


State 1143

  312 task_body_declaration: ps_or_hierarchical_identifier '(' tf_port_list_optional ')' ';' statement_list_optional • ENDTASK block_end_identifier_optional

    ENDTASK  shift, and go to state 1202


State 1144

  311 task_body_declaration: ps_or_hierarchical_identifier '(' tf_port_list_optional ')' ';' block_item_declaration_list • statement_list_optional ENDTASK block_end_identifier_optional
  430 block_item_declaration_list: block_item_declaration_list • block_item_declaration

    ENDTASK   reduce using rule 327 (statement_list_optional)
    $default  reduce using rule 553 (attribute_instance_list)

    statement_list_optional  go to state 1203
    statement                go to state 758
    statement_list           go to state 863
    block_item_declaration   go to state 910
    attribute_instance_list  go to state 763


State 1145

  423 par_block: FORK block_end_identifier_optional block_item_declaration_list statement_list join_keyword block_end_identifier_optional •

    $default  reduce using rule 423 (par_block)


State 1146

  478 overload_declaration: BIND overload_operator FUNCTION • data_type identifier '(' overload_proto_formals ')' ';'

    VIRTUAL             shift, and go to state 141
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    '$'                 shift, and go to state 76

    data_type                go to state 1204
    data_type_no_identifier  go to state 96
    virtual_interface_type   go to state 97
    integer_vector_type      go to state 98
    integer_atom_type        go to state 115
    non_integer_type         go to state 116
    ps_identifier            go to state 117
    hierarchical_identifier  go to state 118
    identifier               go to state 120


State 1147

  383 loop_statement: FOREACH '(' identifier '[' identifier_list ']' • ')' statement

    ')'  shift, and go to state 1205


State 1148

  406 subroutine_call_statement: VOID TOK_SING_QUOT '(' subroutine_call ')' ';' •

    $default  reduce using rule 406 (subroutine_call_statement)


State 1149

  419 seq_block: _BEGIN block_end_identifier_optional block_item_declaration_list statement_list END block_end_identifier_optional •

    $default  reduce using rule 419 (seq_block)


State 1150

  382 loop_statement: DO statement WHILE '(' expression ')' • ';'

    ';'  shift, and go to state 1206


State 1151

  445 action_block: ELSE statement •

    $default  reduce using rule 445 (action_block)


State 1152

  444 action_block: statement ELSE • statement

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 1207
    attribute_instance_list  go to state 161


State 1153

  398 for_variable_declaration: VAR data_type identifier '=' • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 1208
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1154

  399 for_variable_declaration: data_type identifier '=' expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 399 (for_variable_declaration)


State 1155

  381 loop_statement: FOR '(' for_initialization ';' expression_optional ';' • for_step ')' statement

    SUPER               shift, and go to state 242
    THIS                shift, and go to state 322
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '$'                 shift, and go to state 76

    $default  reduce using rule 385 (for_step)

    for_step                       go to state 1209
    for_step_assignment_list       go to state 1210
    for_step_assignment            go to state 1211
    subroutine_call                go to state 1212
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 306
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 362
    inc_or_dec_expression          go to state 1213
    operator_assignment            go to state 1214
    lvalue                         go to state 486
    identifier                     go to state 309


State 1156

  397 for_variable_declaration: for_variable_declaration ',' identifier '=' • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 1215
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1157

  637 identifier_expression_list: '.' identifier '(' expression_optional • ')'

    ')'  shift, and go to state 1216


State 1158

  636 identifier_expression_list: identifier_expression_list ',' '.' identifier • '(' expression_optional ')'

    '('  shift, and go to state 1217


State 1159

  363 event_expression: edge_identifier expression IFF expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 363 (event_expression)


State 1160

  400 conditional_statement: unique_priority_optional IF '(' cond_predicate ')' statement • else_if_list
  401                      | unique_priority_optional IF '(' cond_predicate ')' statement • else_if_list ELSE statement

    $default  reduce using rule 403 (else_if_list)

    else_if_list  go to state 1218


State 1161

  417 case_item: DEFAULT • ':' statement
  418          | DEFAULT • statement

    ':'  shift, and go to state 1219

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 1220
    attribute_instance_list  go to state 161


State 1162

  404 case_statement: unique_priority_optional case_keyword '(' expression ')' case_item_list • ENDCASE
  414 case_item_list: case_item_list • case_item

    DEFAULT             shift, and go to state 1161
    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    ENDCASE             shift, and go to state 1221
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    case_item                      go to state 1222
    expression_list                go to state 1164
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 750
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1163

  415 case_item_list: case_item •

    $default  reduce using rule 415 (case_item_list)


State 1164

  416 case_item: expression_list • ':' statement
  432 expression_list: expression_list • ',' expression

    ':'  shift, and go to state 1223
    ','  shift, and go to state 903


State 1165

  352 delay_or_event_control: REPEAT '(' expression ')' • event_control

    '@'  shift, and go to state 340

    event_control  go to state 1224


State 1166

  456 dynamic_array_new: NEW '[' expression ']' • '(' expression ')'
  457                  | NEW '[' expression ']' •

    '('  shift, and go to state 1225

    $default  reduce using rule 457 (dynamic_array_new)


State 1167

  452 class_new: NEW '(' argument_list ')' •

    $default  reduce using rule 452 (class_new)


State 1168

  450 class_new: class_scope NEW '(' argument_list • ')'

    ')'  shift, and go to state 1226


State 1169

  112 genvar_iteration: TOK_INC identifier •

    $default  reduce using rule 112 (genvar_iteration)


State 1170

  113 genvar_iteration: TOK_DEC identifier •

    $default  reduce using rule 113 (genvar_iteration)


State 1171

  103 loop_generate_construct: FOR '(' genvar_initialization ';' expression ';' genvar_iteration ')' • generate_block

    VIRTUAL             shift, and go to state 23
    RAND                shift, and go to state 24
    DEFPARAM            shift, and go to state 25
    IMPORT              shift, and go to state 26
    DEFAULT             shift, and go to state 27
    CONST               shift, and go to state 28
    FUNCTION            shift, and go to state 29
    STATIC              shift, and go to state 30
    PROTECTED           shift, and go to state 31
    LOCAL               shift, and go to state 32
    RANDC               shift, and go to state 33
    IF                  shift, and go to state 34
    LOCALPARAM          shift, and go to state 35
    PARAMETER           shift, and go to state 36
    VAR                 shift, and go to state 37
    TYPEDEF             shift, and go to state 38
    AUTOMATIC           shift, and go to state 39
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    TASK                shift, and go to state 55
    CASE                shift, and go to state 56
    _BEGIN              shift, and go to state 736
    ALIAS               shift, and go to state 57
    FINAL               shift, and go to state 58
    ASSIGN              shift, and go to state 60
    ALWAYS              shift, and go to state 61
    BIND                shift, and go to state 62
    _INITIAL            shift, and go to state 63
    ALWAYS_LATCH        shift, and go to state 64
    ALWAYS_FF           shift, and go to state 65
    ALWAYS_COMB         shift, and go to state 68
    FOR                 shift, and go to state 70
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    ';'                 shift, and go to state 75
    '$'                 shift, and go to state 76

    $default  reduce using rule 262 (virtual_optional)

    generate_item                         go to state 737
    module_or_generate_item               go to state 393
    module_common_item                    go to state 83
    if_generate_construct                 go to state 84
    case_generate_construct               go to state 85
    loop_generate_construct               go to state 86
    generate_block                        go to state 1227
    net_alias                             go to state 87
    continuous_assign                     go to state 88
    bind_directive                        go to state 89
    generic_instantiation                 go to state 90
    always_keyword                        go to state 91
    module_or_generate_item_declaration   go to state 92
    parameter_override                    go to state 93
    data_type                             go to state 95
    data_type_no_identifier               go to state 96
    virtual_interface_type                go to state 97
    integer_vector_type                   go to state 98
    package_or_generate_item_declaration  go to state 99
    class_declaration                     go to state 100
    virtual_optional                      go to state 101
    function_declaration                  go to state 102
    task_declaration                      go to state 103
    local_parameter_declaration           go to state 104
    parameter_declaration                 go to state 105
    data_declaration                      go to state 106
    method_variable_qualifier_list        go to state 107
    variable_qualifier_list               go to state 108
    variable_qualifier                    go to state 109
    method_variable_qualifier             go to state 110
    type_declaration                      go to state 111
    package_import_declaration            go to state 112
    integer_atom_type                     go to state 115
    non_integer_type                      go to state 116
    ps_identifier                         go to state 117
    hierarchical_identifier               go to state 118
    lifetime                              go to state 119
    identifier                            go to state 739


State 1172

  114 genvar_iteration: identifier TOK_INC •

    $default  reduce using rule 114 (genvar_iteration)


State 1173

  115 genvar_iteration: identifier TOK_DEC •

    $default  reduce using rule 115 (genvar_iteration)


State 1174

  111 genvar_iteration: identifier assignment_operator • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 1228
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1175

  146 named_port_connection: attribute_instance_list '.' identifier '(' expression_optional • ')'

    ')'  shift, and go to state 1229


State 1176

  263 extends_class_optional: EXTENDS hierarchical_identifier parameter_value_assignment_optional • '(' argument_list ')'
  264                       | EXTENDS hierarchical_identifier parameter_value_assignment_optional •

    '('  shift, and go to state 1230

    $default  reduce using rule 264 (extends_class_optional)


State 1177

  266 implements_interface_optional: IMPLEMENTS interface_class_type_list •
  268 interface_class_type_list: interface_class_type_list • ',' interface_class_type

    ','  shift, and go to state 1231

    $default  reduce using rule 266 (implements_interface_optional)


State 1178

  269 interface_class_type_list: interface_class_type •

    $default  reduce using rule 269 (interface_class_type_list)


State 1179

  270 interface_class_type: hierarchical_identifier • parameter_value_assignment_optional
  626 hierarchical_identifier: hierarchical_identifier • '.' identifier unpacked_dimension_list_optional

    '.'  shift, and go to state 214
    '#'  shift, and go to state 216

    $default  reduce using rule 232 (parameter_value_assignment_optional)

    parameter_value_assignment           go to state 411
    parameter_value_assignment_optional  go to state 1232


State 1180

  260 class_declaration: virtual_optional CLASS lifetime_optional identifier parameter_port_list_optional extends_class_optional implements_interface_optional ';' • class_item_list ENDCLASS block_end_identifier_optional

    $default  reduce using rule 272 (class_item_list)

    class_item_list  go to state 1233


State 1181

   67 pulse_control_specparam: PATHPULSE '$' '=' '(' constant_mintypmax_expression • ',' constant_mintypmax_expression ')'
   68                        | PATHPULSE '$' '=' '(' constant_mintypmax_expression • ')'

    ','  shift, and go to state 1234
    ')'  shift, and go to state 1235


State 1182

   69 pulse_control_specparam: PATHPULSE '$' hierarchical_identifier '$' hierarchical_identifier • '=' '(' constant_mintypmax_expression ',' constant_mintypmax_expression ')'
   70                        | PATHPULSE '$' hierarchical_identifier '$' hierarchical_identifier • '=' '(' constant_mintypmax_expression ')'
  626 hierarchical_identifier: hierarchical_identifier • '.' identifier unpacked_dimension_list_optional

    '='  shift, and go to state 1236
    '.'  shift, and go to state 214


State 1183

  157 named_parameter_assignment: '.' identifier '(' param_expression ')' •

    $default  reduce using rule 157 (named_parameter_assignment)


State 1184

   22 ansi_port_declaration: '.' identifier '(' • expression_optional ')'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    $default  reduce using rule 639 (expression_optional)

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression_optional            go to state 1237
    expression                     go to state 1076
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1185

   15 ansi_port_declaration_list: ansi_port_declaration_list ',' ansi_port_declaration •

    $default  reduce using rule 15 (ansi_port_declaration_list)


State 1186

   17 ansi_port_declaration: net_port_header identifier unpacked_dimension_list_optional • '=' expression
   18                      | net_port_header identifier unpacked_dimension_list_optional •

    '='  shift, and go to state 1238

    $default  reduce using rule 18 (ansi_port_declaration)


State 1187

   19 ansi_port_declaration: variable_port_header identifier variable_dimension_list_optional • '=' expression
   20                      | variable_port_header identifier variable_dimension_list_optional •

    '='  shift, and go to state 1239

    $default  reduce using rule 20 (ansi_port_declaration)


State 1188

   21 ansi_port_declaration: port_direction '.' identifier • '(' expression_optional ')'

    '('  shift, and go to state 1240


State 1189

  217 port_list: port_list ',' identifier •

    $default  reduce using rule 217 (port_list)


State 1190

  303 function_block_end_identifier_optional: ':' NEW •

    $default  reduce using rule 303 (function_block_end_identifier_optional)


State 1191

  301 function_body_declaration: function_type_name '(' tf_port_list_optional ')' ';' statement_list_optional ENDFUNCTION • function_block_end_identifier_optional

    ':'  shift, and go to state 1124

    $default  reduce using rule 549 (block_end_identifier_optional)

    function_block_end_identifier_optional  go to state 1241
    block_end_identifier_optional           go to state 1126


State 1192

  300 function_body_declaration: function_type_name '(' tf_port_list_optional ')' ';' block_item_declaration_list statement_list_optional • ENDFUNCTION function_block_end_identifier_optional

    ENDFUNCTION  shift, and go to state 1242


State 1193

  318 tf_port_item: attribute_instance_list tf_port_direction VAR data_type equals_expression_optional •

    $default  reduce using rule 318 (tf_port_item)


State 1194

  317 tf_port_item: attribute_instance_list tf_port_direction VAR data_type identifier • variable_dimension_list_optional equals_expression_optional

    '['  shift, and go to state 403

    $default  reduce using rule 190 (variable_dimension_list_optional)

    variable_dimension_list_optional  go to state 1243
    variable_dimension_list           go to state 406
    variable_dimension                go to state 407
    associative_dimension             go to state 408
    unpacked_dimension                go to state 640
    unsized_dimension                 go to state 410


State 1195

  321 equals_expression_optional: '=' expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 321 (equals_expression_optional)


State 1196

  319 tf_port_item: attribute_instance_list tf_port_direction data_type identifier variable_dimension_list_optional • equals_expression_optional

    '='  shift, and go to state 1130

    $default  reduce using rule 322 (equals_expression_optional)

    equals_expression_optional  go to state 1244


State 1197

  612 tf_call: implicit_class_handle '.' identifier attribute_instance_list '(' argument_list ')' •

    $default  reduce using rule 612 (tf_call)


State 1198

  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'
  694 value_range: '[' expression ':' expression • ']'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522
    ']'           shift, and go to state 1245


State 1199

  107 generate_block: _BEGIN ':' identifier generate_item_list END • block_end_identifier_optional

    ':'  shift, and go to state 128

    $default  reduce using rule 549 (block_end_identifier_optional)

    block_end_identifier_optional  go to state 1246


State 1200

  105 generate_block: identifier ':' _BEGIN ':' identifier • generate_item_list END block_end_identifier_optional

    $default  reduce using rule 80 (generate_item_list)

    generate_item_list  go to state 1247


State 1201

  106 generate_block: identifier ':' _BEGIN generate_item_list END • block_end_identifier_optional

    ':'  shift, and go to state 128

    $default  reduce using rule 549 (block_end_identifier_optional)

    block_end_identifier_optional  go to state 1248


State 1202

  312 task_body_declaration: ps_or_hierarchical_identifier '(' tf_port_list_optional ')' ';' statement_list_optional ENDTASK • block_end_identifier_optional

    ':'  shift, and go to state 128

    $default  reduce using rule 549 (block_end_identifier_optional)

    block_end_identifier_optional  go to state 1249


State 1203

  311 task_body_declaration: ps_or_hierarchical_identifier '(' tf_port_list_optional ')' ';' block_item_declaration_list statement_list_optional • ENDTASK block_end_identifier_optional

    ENDTASK  shift, and go to state 1250


State 1204

  478 overload_declaration: BIND overload_operator FUNCTION data_type • identifier '(' overload_proto_formals ')' ';'

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    identifier  go to state 1251


State 1205

  383 loop_statement: FOREACH '(' identifier '[' identifier_list ']' ')' • statement

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 1252
    attribute_instance_list  go to state 161


State 1206

  382 loop_statement: DO statement WHILE '(' expression ')' ';' •

    $default  reduce using rule 382 (loop_statement)


State 1207

  444 action_block: statement ELSE statement •

    $default  reduce using rule 444 (action_block)


State 1208

  398 for_variable_declaration: VAR data_type identifier '=' expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 398 (for_variable_declaration)


State 1209

  381 loop_statement: FOR '(' for_initialization ';' expression_optional ';' for_step • ')' statement

    ')'  shift, and go to state 1253


State 1210

  384 for_step: for_step_assignment_list •
  386 for_step_assignment_list: for_step_assignment_list • ',' for_step_assignment

    ','  shift, and go to state 1254

    $default  reduce using rule 384 (for_step)


State 1211

  387 for_step_assignment_list: for_step_assignment •

    $default  reduce using rule 387 (for_step_assignment_list)


State 1212

  390 for_step_assignment: subroutine_call •

    $default  reduce using rule 390 (for_step_assignment)


State 1213

  389 for_step_assignment: inc_or_dec_expression •

    $default  reduce using rule 389 (for_step_assignment)


State 1214

  388 for_step_assignment: operator_assignment •

    $default  reduce using rule 388 (for_step_assignment)


State 1215

  397 for_variable_declaration: for_variable_declaration ',' identifier '=' expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 397 (for_variable_declaration)


State 1216

  637 identifier_expression_list: '.' identifier '(' expression_optional ')' •

    $default  reduce using rule 637 (identifier_expression_list)


State 1217

  636 identifier_expression_list: identifier_expression_list ',' '.' identifier '(' • expression_optional ')'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    $default  reduce using rule 639 (expression_optional)

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression_optional            go to state 1255
    expression                     go to state 1076
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1218

  400 conditional_statement: unique_priority_optional IF '(' cond_predicate ')' statement else_if_list •
  401                      | unique_priority_optional IF '(' cond_predicate ')' statement else_if_list • ELSE statement
  402 else_if_list: else_if_list • ELSE_IF '(' cond_predicate ')' statement

    ELSE     shift, and go to state 1256
    ELSE_IF  shift, and go to state 1257

    $default  reduce using rule 400 (conditional_statement)


State 1219

  417 case_item: DEFAULT ':' • statement

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 1258
    attribute_instance_list  go to state 161


State 1220

  418 case_item: DEFAULT statement •

    $default  reduce using rule 418 (case_item)


State 1221

  404 case_statement: unique_priority_optional case_keyword '(' expression ')' case_item_list ENDCASE •

    $default  reduce using rule 404 (case_statement)


State 1222

  414 case_item_list: case_item_list case_item •

    $default  reduce using rule 414 (case_item_list)


State 1223

  416 case_item: expression_list ':' • statement

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 1259
    attribute_instance_list  go to state 161


State 1224

  352 delay_or_event_control: REPEAT '(' expression ')' event_control •

    $default  reduce using rule 352 (delay_or_event_control)


State 1225

  456 dynamic_array_new: NEW '[' expression ']' '(' • expression ')'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 1260
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1226

  450 class_new: class_scope NEW '(' argument_list ')' •

    $default  reduce using rule 450 (class_new)


State 1227

  103 loop_generate_construct: FOR '(' genvar_initialization ';' expression ';' genvar_iteration ')' generate_block •

    $default  reduce using rule 103 (loop_generate_construct)


State 1228

  111 genvar_iteration: identifier assignment_operator expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 111 (genvar_iteration)


State 1229

  146 named_port_connection: attribute_instance_list '.' identifier '(' expression_optional ')' •

    $default  reduce using rule 146 (named_port_connection)


State 1230

  263 extends_class_optional: EXTENDS hierarchical_identifier parameter_value_assignment_optional '(' • argument_list ')'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '.'                 shift, and go to state 784
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    $default  reduce using rule 635 (argument_list)

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    expression_list                go to state 785
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    argument_list                  go to state 1261
    identifier_expression_list     go to state 787
    expression                     go to state 750
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1231

  268 interface_class_type_list: interface_class_type_list ',' • interface_class_type

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72

    interface_class_type     go to state 1262
    hierarchical_identifier  go to state 1179
    identifier               go to state 133


State 1232

  270 interface_class_type: hierarchical_identifier parameter_value_assignment_optional •

    $default  reduce using rule 270 (interface_class_type)


State 1233

  260 class_declaration: virtual_optional CLASS lifetime_optional identifier parameter_port_list_optional extends_class_optional implements_interface_optional ';' class_item_list • ENDCLASS block_end_identifier_optional
  271 class_item_list: class_item_list • class_item

    EXTERN              shift, and go to state 1263
    VIRTUAL             shift, and go to state 1264
    ENDCLASS            shift, and go to state 1265
    PURE                shift, and go to state 1266
    RAND                shift, and go to state 24
    IMPORT              shift, and go to state 26
    CONST               shift, and go to state 28
    FUNCTION            shift, and go to state 29
    STATIC              shift, and go to state 30
    PROTECTED           shift, and go to state 31
    LOCAL               shift, and go to state 32
    RANDC               shift, and go to state 33
    LOCALPARAM          shift, and go to state 35
    PARAMETER           shift, and go to state 36
    VAR                 shift, and go to state 37
    TYPEDEF             shift, and go to state 38
    AUTOMATIC           shift, and go to state 39
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    TASK                shift, and go to state 55
    PURE_VIRTUAL        shift, and go to state 1267
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    ';'                 shift, and go to state 1268
    '$'                 shift, and go to state 76

    $default  reduce using rule 262 (virtual_optional)

    data_type                       go to state 914
    data_type_no_identifier         go to state 96
    virtual_interface_type          go to state 97
    integer_vector_type             go to state 98
    class_declaration               go to state 1269
    virtual_optional                go to state 101
    class_item                      go to state 1270
    class_property                  go to state 1271
    class_method                    go to state 1272
    class_method_qualifier_list     go to state 1273
    method_qualifier_list           go to state 1274
    function_declaration            go to state 1275
    task_declaration                go to state 1276
    local_parameter_declaration     go to state 1277
    parameter_declaration           go to state 1278
    data_declaration                go to state 1279
    method_variable_qualifier_list  go to state 1280
    variable_qualifier_list         go to state 108
    variable_qualifier              go to state 109
    method_qualifier                go to state 1281
    method_variable_qualifier       go to state 110
    type_declaration                go to state 111
    package_import_declaration      go to state 112
    integer_atom_type               go to state 115
    non_integer_type                go to state 116
    ps_identifier                   go to state 117
    hierarchical_identifier         go to state 118
    lifetime                        go to state 119
    identifier                      go to state 120


State 1234

   67 pulse_control_specparam: PATHPULSE '$' '=' '(' constant_mintypmax_expression ',' • constant_mintypmax_expression ')'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    constant_mintypmax_expression  go to state 1282
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 458
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1235

   68 pulse_control_specparam: PATHPULSE '$' '=' '(' constant_mintypmax_expression ')' •

    $default  reduce using rule 68 (pulse_control_specparam)


State 1236

   69 pulse_control_specparam: PATHPULSE '$' hierarchical_identifier '$' hierarchical_identifier '=' • '(' constant_mintypmax_expression ',' constant_mintypmax_expression ')'
   70                        | PATHPULSE '$' hierarchical_identifier '$' hierarchical_identifier '=' • '(' constant_mintypmax_expression ')'

    '('  shift, and go to state 1283


State 1237

   22 ansi_port_declaration: '.' identifier '(' expression_optional • ')'

    ')'  shift, and go to state 1284


State 1238

   17 ansi_port_declaration: net_port_header identifier unpacked_dimension_list_optional '=' • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 1285
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1239

   19 ansi_port_declaration: variable_port_header identifier variable_dimension_list_optional '=' • expression

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 1286
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1240

   21 ansi_port_declaration: port_direction '.' identifier '(' • expression_optional ')'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    $default  reduce using rule 639 (expression_optional)

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression_optional            go to state 1287
    expression                     go to state 1076
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1241

  301 function_body_declaration: function_type_name '(' tf_port_list_optional ')' ';' statement_list_optional ENDFUNCTION function_block_end_identifier_optional •

    $default  reduce using rule 301 (function_body_declaration)


State 1242

  300 function_body_declaration: function_type_name '(' tf_port_list_optional ')' ';' block_item_declaration_list statement_list_optional ENDFUNCTION • function_block_end_identifier_optional

    ':'  shift, and go to state 1124

    $default  reduce using rule 549 (block_end_identifier_optional)

    function_block_end_identifier_optional  go to state 1288
    block_end_identifier_optional           go to state 1126


State 1243

  317 tf_port_item: attribute_instance_list tf_port_direction VAR data_type identifier variable_dimension_list_optional • equals_expression_optional

    '='  shift, and go to state 1130

    $default  reduce using rule 322 (equals_expression_optional)

    equals_expression_optional  go to state 1289


State 1244

  319 tf_port_item: attribute_instance_list tf_port_direction data_type identifier variable_dimension_list_optional equals_expression_optional •

    $default  reduce using rule 319 (tf_port_item)


State 1245

  694 value_range: '[' expression ':' expression ']' •

    $default  reduce using rule 694 (value_range)


State 1246

  107 generate_block: _BEGIN ':' identifier generate_item_list END block_end_identifier_optional •

    $default  reduce using rule 107 (generate_block)


State 1247

   79 generate_item_list: generate_item_list • generate_item
  105 generate_block: identifier ':' _BEGIN ':' identifier generate_item_list • END block_end_identifier_optional

    VIRTUAL             shift, and go to state 23
    RAND                shift, and go to state 24
    DEFPARAM            shift, and go to state 25
    IMPORT              shift, and go to state 26
    DEFAULT             shift, and go to state 27
    CONST               shift, and go to state 28
    FUNCTION            shift, and go to state 29
    STATIC              shift, and go to state 30
    PROTECTED           shift, and go to state 31
    LOCAL               shift, and go to state 32
    RANDC               shift, and go to state 33
    IF                  shift, and go to state 34
    LOCALPARAM          shift, and go to state 35
    PARAMETER           shift, and go to state 36
    VAR                 shift, and go to state 37
    TYPEDEF             shift, and go to state 38
    AUTOMATIC           shift, and go to state 39
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    TASK                shift, and go to state 55
    CASE                shift, and go to state 56
    ALIAS               shift, and go to state 57
    FINAL               shift, and go to state 58
    END                 shift, and go to state 1290
    ASSIGN              shift, and go to state 60
    ALWAYS              shift, and go to state 61
    BIND                shift, and go to state 62
    _INITIAL            shift, and go to state 63
    ALWAYS_LATCH        shift, and go to state 64
    ALWAYS_FF           shift, and go to state 65
    ALWAYS_COMB         shift, and go to state 68
    FOR                 shift, and go to state 70
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    ';'                 shift, and go to state 75
    '$'                 shift, and go to state 76

    $default  reduce using rule 262 (virtual_optional)

    generate_item                         go to state 392
    module_or_generate_item               go to state 393
    module_common_item                    go to state 83
    if_generate_construct                 go to state 84
    case_generate_construct               go to state 85
    loop_generate_construct               go to state 86
    net_alias                             go to state 87
    continuous_assign                     go to state 88
    bind_directive                        go to state 89
    generic_instantiation                 go to state 90
    always_keyword                        go to state 91
    module_or_generate_item_declaration   go to state 92
    parameter_override                    go to state 93
    data_type                             go to state 95
    data_type_no_identifier               go to state 96
    virtual_interface_type                go to state 97
    integer_vector_type                   go to state 98
    package_or_generate_item_declaration  go to state 99
    class_declaration                     go to state 100
    virtual_optional                      go to state 101
    function_declaration                  go to state 102
    task_declaration                      go to state 103
    local_parameter_declaration           go to state 104
    parameter_declaration                 go to state 105
    data_declaration                      go to state 106
    method_variable_qualifier_list        go to state 107
    variable_qualifier_list               go to state 108
    variable_qualifier                    go to state 109
    method_variable_qualifier             go to state 110
    type_declaration                      go to state 111
    package_import_declaration            go to state 112
    integer_atom_type                     go to state 115
    non_integer_type                      go to state 116
    ps_identifier                         go to state 117
    hierarchical_identifier               go to state 118
    lifetime                              go to state 119
    identifier                            go to state 120


State 1248

  106 generate_block: identifier ':' _BEGIN generate_item_list END block_end_identifier_optional •

    $default  reduce using rule 106 (generate_block)


State 1249

  312 task_body_declaration: ps_or_hierarchical_identifier '(' tf_port_list_optional ')' ';' statement_list_optional ENDTASK block_end_identifier_optional •

    $default  reduce using rule 312 (task_body_declaration)


State 1250

  311 task_body_declaration: ps_or_hierarchical_identifier '(' tf_port_list_optional ')' ';' block_item_declaration_list statement_list_optional ENDTASK • block_end_identifier_optional

    ':'  shift, and go to state 128

    $default  reduce using rule 549 (block_end_identifier_optional)

    block_end_identifier_optional  go to state 1291


State 1251

  478 overload_declaration: BIND overload_operator FUNCTION data_type identifier • '(' overload_proto_formals ')' ';'

    '('  shift, and go to state 1292


State 1252

  383 loop_statement: FOREACH '(' identifier '[' identifier_list ']' ')' statement •

    $default  reduce using rule 383 (loop_statement)


State 1253

  381 loop_statement: FOR '(' for_initialization ';' expression_optional ';' for_step ')' • statement

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 1293
    attribute_instance_list  go to state 161


State 1254

  386 for_step_assignment_list: for_step_assignment_list ',' • for_step_assignment

    SUPER               shift, and go to state 242
    THIS                shift, and go to state 322
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '$'                 shift, and go to state 76

    for_step_assignment            go to state 1294
    subroutine_call                go to state 1212
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 306
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 362
    inc_or_dec_expression          go to state 1213
    operator_assignment            go to state 1214
    lvalue                         go to state 486
    identifier                     go to state 309


State 1255

  636 identifier_expression_list: identifier_expression_list ',' '.' identifier '(' expression_optional • ')'

    ')'  shift, and go to state 1295


State 1256

  401 conditional_statement: unique_priority_optional IF '(' cond_predicate ')' statement else_if_list ELSE • statement

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 1296
    attribute_instance_list  go to state 161


State 1257

  402 else_if_list: else_if_list ELSE_IF • '(' cond_predicate ')' statement

    '('  shift, and go to state 1297


State 1258

  417 case_item: DEFAULT ':' statement •

    $default  reduce using rule 417 (case_item)


State 1259

  416 case_item: expression_list ':' statement •

    $default  reduce using rule 416 (case_item)


State 1260

  456 dynamic_array_new: NEW '[' expression ']' '(' expression • ')'
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522
    ')'           shift, and go to state 1298


State 1261

  263 extends_class_optional: EXTENDS hierarchical_identifier parameter_value_assignment_optional '(' argument_list • ')'

    ')'  shift, and go to state 1299


State 1262

  268 interface_class_type_list: interface_class_type_list ',' interface_class_type •

    $default  reduce using rule 268 (interface_class_type_list)


State 1263

  286 class_method: EXTERN • class_method_qualifier_list method_prototype ';'
  287             | EXTERN • method_prototype ';'

    VIRTUAL    shift, and go to state 1300
    PURE       shift, and go to state 1266
    FUNCTION   shift, and go to state 1301
    STATIC     shift, and go to state 30
    PROTECTED  shift, and go to state 31
    LOCAL      shift, and go to state 32
    AUTOMATIC  shift, and go to state 39
    TASK       shift, and go to state 1302

    method_prototype                go to state 1303
    class_method_qualifier_list     go to state 1304
    method_qualifier_list           go to state 1274
    function_prototype              go to state 1305
    task_prototype                  go to state 1306
    method_variable_qualifier_list  go to state 1307
    method_qualifier                go to state 1281
    method_variable_qualifier       go to state 110
    lifetime                        go to state 119


State 1264

  234 virtual_interface_type: VIRTUAL •
  261 virtual_optional: VIRTUAL •
  529 method_qualifier: VIRTUAL •

    CLASS               reduce using rule 261 (virtual_optional)
    escaped_identifier  reduce using rule 234 (virtual_interface_type)
    simple_identifier   reduce using rule 234 (virtual_interface_type)
    $default            reduce using rule 529 (method_qualifier)


State 1265

  260 class_declaration: virtual_optional CLASS lifetime_optional identifier parameter_port_list_optional extends_class_optional implements_interface_optional ';' class_item_list ENDCLASS • block_end_identifier_optional

    ':'  shift, and go to state 128

    $default  reduce using rule 549 (block_end_identifier_optional)

    block_end_identifier_optional  go to state 1308


State 1266

  528 method_qualifier: PURE •

    $default  reduce using rule 528 (method_qualifier)


State 1267

  284 class_method: PURE_VIRTUAL • class_method_qualifier_list method_prototype ';'
  285             | PURE_VIRTUAL • method_prototype ';'

    VIRTUAL    shift, and go to state 1300
    PURE       shift, and go to state 1266
    FUNCTION   shift, and go to state 1301
    STATIC     shift, and go to state 30
    PROTECTED  shift, and go to state 31
    LOCAL      shift, and go to state 32
    AUTOMATIC  shift, and go to state 39
    TASK       shift, and go to state 1302

    method_prototype                go to state 1309
    class_method_qualifier_list     go to state 1310
    method_qualifier_list           go to state 1274
    function_prototype              go to state 1305
    task_prototype                  go to state 1306
    method_variable_qualifier_list  go to state 1307
    method_qualifier                go to state 1281
    method_variable_qualifier       go to state 110
    lifetime                        go to state 119


State 1268

  278 class_item: ';' •

    $default  reduce using rule 278 (class_item)


State 1269

  275 class_item: class_declaration •

    $default  reduce using rule 275 (class_item)


State 1270

  271 class_item_list: class_item_list class_item •

    $default  reduce using rule 271 (class_item_list)


State 1271

  273 class_item: class_property •

    $default  reduce using rule 273 (class_item)


State 1272

  274 class_item: class_method •

    $default  reduce using rule 274 (class_item)


State 1273

  280 class_method: class_method_qualifier_list • task_declaration
  281             | class_method_qualifier_list • function_declaration

    FUNCTION  shift, and go to state 29
    TASK      shift, and go to state 55

    function_declaration  go to state 1311
    task_declaration      go to state 1312


State 1274

  291 class_method_qualifier_list: method_qualifier_list •
  292 method_qualifier_list: method_qualifier_list • method_qualifier

    VIRTUAL  shift, and go to state 1300
    PURE     shift, and go to state 1266

    $default  reduce using rule 291 (class_method_qualifier_list)

    method_qualifier  go to state 1313


State 1275

  283 class_method: function_declaration •

    $default  reduce using rule 283 (class_method)


State 1276

  282 class_method: task_declaration •

    $default  reduce using rule 282 (class_method)


State 1277

  276 class_item: local_parameter_declaration • ';'

    ';'  shift, and go to state 1314


State 1278

  277 class_item: parameter_declaration • ';'

    ';'  shift, and go to state 1315


State 1279

  279 class_property: data_declaration •

    $default  reduce using rule 279 (class_property)


State 1280

  290 class_method_qualifier_list: method_variable_qualifier_list •
  515 data_declaration: method_variable_qualifier_list • data_type variable_decl_assignment_list ';'
  516                 | method_variable_qualifier_list • variable_decl_assignment_list ';'
  520 method_variable_qualifier_list: method_variable_qualifier_list • method_variable_qualifier

    VIRTUAL             shift, and go to state 141
    STATIC              shift, and go to state 30
    PROTECTED           shift, and go to state 31
    LOCAL               shift, and go to state 32
    AUTOMATIC           shift, and go to state 39
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    '$'                 shift, and go to state 76

    $default  reduce using rule 290 (class_method_qualifier_list)

    data_type                      go to state 192
    data_type_no_identifier        go to state 96
    virtual_interface_type         go to state 97
    integer_vector_type            go to state 98
    method_variable_qualifier      go to state 193
    variable_decl_assignment_list  go to state 194
    variable_decl_assignment       go to state 182
    integer_atom_type              go to state 115
    non_integer_type               go to state 116
    ps_identifier                  go to state 117
    hierarchical_identifier        go to state 118
    lifetime                       go to state 119
    identifier                     go to state 195


State 1281

  293 method_qualifier_list: method_qualifier •

    $default  reduce using rule 293 (method_qualifier_list)


State 1282

   67 pulse_control_specparam: PATHPULSE '$' '=' '(' constant_mintypmax_expression ',' constant_mintypmax_expression • ')'

    ')'  shift, and go to state 1316


State 1283

   69 pulse_control_specparam: PATHPULSE '$' hierarchical_identifier '$' hierarchical_identifier '=' '(' • constant_mintypmax_expression ',' constant_mintypmax_expression ')'
   70                        | PATHPULSE '$' hierarchical_identifier '$' hierarchical_identifier '=' '(' • constant_mintypmax_expression ')'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    constant_mintypmax_expression  go to state 1317
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 458
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1284

   22 ansi_port_declaration: '.' identifier '(' expression_optional ')' •

    $default  reduce using rule 22 (ansi_port_declaration)


State 1285

   17 ansi_port_declaration: net_port_header identifier unpacked_dimension_list_optional '=' expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 17 (ansi_port_declaration)


State 1286

   19 ansi_port_declaration: variable_port_header identifier variable_dimension_list_optional '=' expression •
  653 expression: expression • TOK_PLUS expression
  654           | expression • TOK_MINUS expression
  655           | expression • TOK_MUL expression
  656           | expression • TOK_DIV expression
  657           | expression • TOK_MOD expression
  658           | expression • TOK_LOG_EQ expression
  659           | expression • TOK_LOG_NEQ expression
  660           | expression • TOK_LOG_XEQ expression
  661           | expression • TOK_LOG_XNEQ expression
  662           | expression • TOK_LOG_WEQ expression
  663           | expression • TOK_LOG_WNEQ expression
  664           | expression • TOK_LOG_AND expression
  665           | expression • TOK_LOG_OR expression
  666           | expression • TOK_PWR expression
  667           | expression • TOK_LOG_LT expression
  668           | expression • TOK_LOG_LEQ expression
  669           | expression • TOK_LOG_GT expression
  670           | expression • TOK_LOG_GEQ expression
  671           | expression • TOK_BIT_AND expression
  672           | expression • TOK_BIT_OR expression
  673           | expression • TOK_BIT_XOR expression
  674           | expression • TOK_BIT_XNOR expression
  675           | expression • TOK_BIT_SR expression
  676           | expression • TOK_BIT_SL expression
  677           | expression • TOK_BIT_SRA expression
  678           | expression • TOK_BIT_SLA expression
  679           | expression • TOK_IMP expression
  680           | expression • TOK_EQUIV expression
  681           | expression • '?' expression ':' expression
  682           | expression • INSIDE '{' value_range_list '}'

    INSIDE        shift, and go to state 493
    TOK_LOG_XEQ   shift, and go to state 494
    TOK_LOG_XNEQ  shift, and go to state 495
    TOK_LOG_WEQ   shift, and go to state 496
    TOK_LOG_WNEQ  shift, and go to state 497
    TOK_BIT_SRA   shift, and go to state 498
    TOK_BIT_SLA   shift, and go to state 499
    TOK_EQUIV     shift, and go to state 500
    TOK_IMP       shift, and go to state 501
    TOK_LOG_AND   shift, and go to state 502
    TOK_LOG_OR    shift, and go to state 503
    TOK_LOG_EQ    shift, and go to state 504
    TOK_LOG_NEQ   shift, and go to state 505
    TOK_LOG_LEQ   shift, and go to state 506
    TOK_LOG_GEQ   shift, and go to state 507
    TOK_BIT_SR    shift, and go to state 508
    TOK_BIT_SL    shift, and go to state 509
    TOK_BIT_XNOR  shift, and go to state 510
    TOK_PWR       shift, and go to state 511
    TOK_PLUS      shift, and go to state 512
    TOK_MINUS     shift, and go to state 513
    TOK_MUL       shift, and go to state 514
    TOK_DIV       shift, and go to state 515
    TOK_MOD       shift, and go to state 516
    TOK_LOG_LT    shift, and go to state 517
    TOK_LOG_GT    shift, and go to state 518
    TOK_BIT_AND   shift, and go to state 519
    TOK_BIT_OR    shift, and go to state 520
    TOK_BIT_XOR   shift, and go to state 521
    '?'           shift, and go to state 522

    $default  reduce using rule 19 (ansi_port_declaration)


State 1287

   21 ansi_port_declaration: port_direction '.' identifier '(' expression_optional • ')'

    ')'  shift, and go to state 1318


State 1288

  300 function_body_declaration: function_type_name '(' tf_port_list_optional ')' ';' block_item_declaration_list statement_list_optional ENDFUNCTION function_block_end_identifier_optional •

    $default  reduce using rule 300 (function_body_declaration)


State 1289

  317 tf_port_item: attribute_instance_list tf_port_direction VAR data_type identifier variable_dimension_list_optional equals_expression_optional •

    $default  reduce using rule 317 (tf_port_item)


State 1290

  105 generate_block: identifier ':' _BEGIN ':' identifier generate_item_list END • block_end_identifier_optional

    ':'  shift, and go to state 128

    $default  reduce using rule 549 (block_end_identifier_optional)

    block_end_identifier_optional  go to state 1319


State 1291

  311 task_body_declaration: ps_or_hierarchical_identifier '(' tf_port_list_optional ')' ';' block_item_declaration_list statement_list_optional ENDTASK block_end_identifier_optional •

    $default  reduce using rule 311 (task_body_declaration)


State 1292

  478 overload_declaration: BIND overload_operator FUNCTION data_type identifier '(' • overload_proto_formals ')' ';'

    VIRTUAL             shift, and go to state 141
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    '$'                 shift, and go to state 76

    data_type                go to state 1320
    data_type_no_identifier  go to state 96
    virtual_interface_type   go to state 97
    integer_vector_type      go to state 98
    overload_proto_formals   go to state 1321
    integer_atom_type        go to state 115
    non_integer_type         go to state 116
    ps_identifier            go to state 117
    hierarchical_identifier  go to state 118
    identifier               go to state 120


State 1293

  381 loop_statement: FOR '(' for_initialization ';' expression_optional ';' for_step ')' statement •

    $default  reduce using rule 381 (loop_statement)


State 1294

  386 for_step_assignment_list: for_step_assignment_list ',' for_step_assignment •

    $default  reduce using rule 386 (for_step_assignment_list)


State 1295

  636 identifier_expression_list: identifier_expression_list ',' '.' identifier '(' expression_optional ')' •

    $default  reduce using rule 636 (identifier_expression_list)


State 1296

  401 conditional_statement: unique_priority_optional IF '(' cond_predicate ')' statement else_if_list ELSE statement •

    $default  reduce using rule 401 (conditional_statement)


State 1297

  402 else_if_list: else_if_list ELSE_IF '(' • cond_predicate ')' statement

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 953
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    cond_predicate                 go to state 1322
    expression_or_cond_pattern     go to state 955
    identifier                     go to state 289


State 1298

  456 dynamic_array_new: NEW '[' expression ']' '(' expression ')' •

    $default  reduce using rule 456 (dynamic_array_new)


State 1299

  263 extends_class_optional: EXTENDS hierarchical_identifier parameter_value_assignment_optional '(' argument_list ')' •

    $default  reduce using rule 263 (extends_class_optional)


State 1300

  529 method_qualifier: VIRTUAL •

    $default  reduce using rule 529 (method_qualifier)


State 1301

  294 function_prototype: FUNCTION • function_type_name '(' tf_port_list_optional ')'
  295                   | FUNCTION • function_type_name

    VIRTUAL             shift, and go to state 141
    NEW                 shift, and go to state 234
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    VOID                shift, and go to state 235
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 236
    VIRTUAL_INTERFACE   shift, and go to state 74
    '$'                 shift, and go to state 76

    data_type                go to state 237
    data_type_no_identifier  go to state 96
    virtual_interface_type   go to state 97
    integer_vector_type      go to state 98
    function_type_name       go to state 1323
    function_data_type       go to state 240
    integer_atom_type        go to state 115
    non_integer_type         go to state 116
    ps_identifier            go to state 117
    hierarchical_identifier  go to state 118
    identifier               go to state 120


State 1302

  296 task_prototype: TASK • ps_or_hierarchical_identifier '(' tf_port_list_optional ')'
  297               | TASK • ps_or_hierarchical_identifier

    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    '$'                 shift, and go to state 76

    ps_identifier                  go to state 306
    ps_or_hierarchical_identifier  go to state 1324
    hierarchical_identifier        go to state 308
    identifier                     go to state 309


State 1303

  287 class_method: EXTERN method_prototype • ';'

    ';'  shift, and go to state 1325


State 1304

  286 class_method: EXTERN class_method_qualifier_list • method_prototype ';'

    FUNCTION  shift, and go to state 1301
    TASK      shift, and go to state 1302

    method_prototype    go to state 1326
    function_prototype  go to state 1305
    task_prototype      go to state 1306


State 1305

  289 method_prototype: function_prototype •

    $default  reduce using rule 289 (method_prototype)


State 1306

  288 method_prototype: task_prototype •

    $default  reduce using rule 288 (method_prototype)


State 1307

  290 class_method_qualifier_list: method_variable_qualifier_list •
  520 method_variable_qualifier_list: method_variable_qualifier_list • method_variable_qualifier

    STATIC     shift, and go to state 30
    PROTECTED  shift, and go to state 31
    LOCAL      shift, and go to state 32
    AUTOMATIC  shift, and go to state 39

    $default  reduce using rule 290 (class_method_qualifier_list)

    method_variable_qualifier  go to state 193
    lifetime                   go to state 119


State 1308

  260 class_declaration: virtual_optional CLASS lifetime_optional identifier parameter_port_list_optional extends_class_optional implements_interface_optional ';' class_item_list ENDCLASS block_end_identifier_optional •

    $default  reduce using rule 260 (class_declaration)


State 1309

  285 class_method: PURE_VIRTUAL method_prototype • ';'

    ';'  shift, and go to state 1327


State 1310

  284 class_method: PURE_VIRTUAL class_method_qualifier_list • method_prototype ';'

    FUNCTION  shift, and go to state 1301
    TASK      shift, and go to state 1302

    method_prototype    go to state 1328
    function_prototype  go to state 1305
    task_prototype      go to state 1306


State 1311

  281 class_method: class_method_qualifier_list function_declaration •

    $default  reduce using rule 281 (class_method)


State 1312

  280 class_method: class_method_qualifier_list task_declaration •

    $default  reduce using rule 280 (class_method)


State 1313

  292 method_qualifier_list: method_qualifier_list method_qualifier •

    $default  reduce using rule 292 (method_qualifier_list)


State 1314

  276 class_item: local_parameter_declaration ';' •

    $default  reduce using rule 276 (class_item)


State 1315

  277 class_item: parameter_declaration ';' •

    $default  reduce using rule 277 (class_item)


State 1316

   67 pulse_control_specparam: PATHPULSE '$' '=' '(' constant_mintypmax_expression ',' constant_mintypmax_expression ')' •

    $default  reduce using rule 67 (pulse_control_specparam)


State 1317

   69 pulse_control_specparam: PATHPULSE '$' hierarchical_identifier '$' hierarchical_identifier '=' '(' constant_mintypmax_expression • ',' constant_mintypmax_expression ')'
   70                        | PATHPULSE '$' hierarchical_identifier '$' hierarchical_identifier '=' '(' constant_mintypmax_expression • ')'

    ','  shift, and go to state 1329
    ')'  shift, and go to state 1330


State 1318

   21 ansi_port_declaration: port_direction '.' identifier '(' expression_optional ')' •

    $default  reduce using rule 21 (ansi_port_declaration)


State 1319

  105 generate_block: identifier ':' _BEGIN ':' identifier generate_item_list END block_end_identifier_optional •

    $default  reduce using rule 105 (generate_block)


State 1320

  495 overload_proto_formals: data_type •

    $default  reduce using rule 495 (overload_proto_formals)


State 1321

  478 overload_declaration: BIND overload_operator FUNCTION data_type identifier '(' overload_proto_formals • ')' ';'
  494 overload_proto_formals: overload_proto_formals • ',' data_type

    ','  shift, and go to state 1331
    ')'  shift, and go to state 1332


State 1322

  402 else_if_list: else_if_list ELSE_IF '(' cond_predicate • ')' statement

    ')'  shift, and go to state 1333


State 1323

  294 function_prototype: FUNCTION function_type_name • '(' tf_port_list_optional ')'
  295                   | FUNCTION function_type_name •

    '('  shift, and go to state 1334

    $default  reduce using rule 295 (function_prototype)


State 1324

  296 task_prototype: TASK ps_or_hierarchical_identifier • '(' tf_port_list_optional ')'
  297               | TASK ps_or_hierarchical_identifier •

    '('  shift, and go to state 1335

    $default  reduce using rule 297 (task_prototype)


State 1325

  287 class_method: EXTERN method_prototype ';' •

    $default  reduce using rule 287 (class_method)


State 1326

  286 class_method: EXTERN class_method_qualifier_list method_prototype • ';'

    ';'  shift, and go to state 1336


State 1327

  285 class_method: PURE_VIRTUAL method_prototype ';' •

    $default  reduce using rule 285 (class_method)


State 1328

  284 class_method: PURE_VIRTUAL class_method_qualifier_list method_prototype • ';'

    ';'  shift, and go to state 1337


State 1329

   69 pulse_control_specparam: PATHPULSE '$' hierarchical_identifier '$' hierarchical_identifier '=' '(' constant_mintypmax_expression ',' • constant_mintypmax_expression ')'

    CONST               shift, and go to state 241
    SUPER               shift, and go to state 242
    STRING              shift, and go to state 243
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    UNSIGNED            shift, and go to state 185
    TAGGED              shift, and go to state 244
    THIS                shift, and go to state 245
    SIGNED              shift, and go to state 186
    RANDOMIZE           shift, and go to state 246
    STD                 shift, and go to state 247
    _NULL               shift, and go to state 248
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    string_literal      shift, and go to state 249
    ps_identifier_tok   shift, and go to state 73
    unsigned_number     shift, and go to state 250
    fixed_point_number  shift, and go to state 163
    TOK_BIT_NAND        shift, and go to state 251
    TOK_BIT_NOR         shift, and go to state 252
    TOK_BIT_XNOR        shift, and go to state 253
    TOK_PLUS            shift, and go to state 254
    TOK_MINUS           shift, and go to state 255
    TOK_LOG_NOT         shift, and go to state 256
    TOK_BIT_AND         shift, and go to state 257
    TOK_BIT_OR          shift, and go to state 258
    TOK_BIT_XOR         shift, and go to state 259
    TOK_BIT_NOT         shift, and go to state 260
    TOK_INC             shift, and go to state 261
    TOK_DEC             shift, and go to state 262
    '('                 shift, and go to state 263
    '$'                 shift, and go to state 264
    '{'                 shift, and go to state 265

    signing                        go to state 266
    constant_primary               go to state 267
    integer_vector_type            go to state 268
    constant_mintypmax_expression  go to state 1338
    time_literal                   go to state 269
    primary_literal                go to state 270
    concatenation                  go to state 271
    multiple_concatenation         go to state 272
    primary                        go to state 273
    casting_type                   go to state 274
    simple_type                    go to state 275
    integer_type                   go to state 276
    integer_atom_type              go to state 277
    non_integer_type               go to state 278
    subroutine_call                go to state 279
    tf_call                        go to state 280
    implicit_class_handle          go to state 281
    randomize_call                 go to state 282
    ps_identifier                  go to state 283
    ps_or_hierarchical_identifier  go to state 284
    hierarchical_identifier        go to state 285
    expression                     go to state 458
    inc_or_dec_expression          go to state 287
    lvalue                         go to state 288
    identifier                     go to state 289


State 1330

   70 pulse_control_specparam: PATHPULSE '$' hierarchical_identifier '$' hierarchical_identifier '=' '(' constant_mintypmax_expression ')' •

    $default  reduce using rule 70 (pulse_control_specparam)


State 1331

  494 overload_proto_formals: overload_proto_formals ',' • data_type

    VIRTUAL             shift, and go to state 141
    STRING              shift, and go to state 40
    CHANDLE             shift, and go to state 41
    EVENT               shift, and go to state 42
    BYTE                shift, and go to state 43
    SHORTINT            shift, and go to state 44
    INT                 shift, and go to state 45
    LONGINT             shift, and go to state 46
    INTEGER             shift, and go to state 47
    TIME                shift, and go to state 48
    BIT                 shift, and go to state 49
    LOGIC               shift, and go to state 50
    REG                 shift, and go to state 51
    SHORTREAL           shift, and go to state 52
    REAL                shift, and go to state 53
    REALTIME            shift, and go to state 54
    escaped_identifier  shift, and go to state 71
    simple_identifier   shift, and go to state 72
    ps_identifier_tok   shift, and go to state 73
    VIRTUAL_INTERFACE   shift, and go to state 74
    '$'                 shift, and go to state 76

    data_type                go to state 1339
    data_type_no_identifier  go to state 96
    virtual_interface_type   go to state 97
    integer_vector_type      go to state 98
    integer_atom_type        go to state 115
    non_integer_type         go to state 116
    ps_identifier            go to state 117
    hierarchical_identifier  go to state 118
    identifier               go to state 120


State 1332

  478 overload_declaration: BIND overload_operator FUNCTION data_type identifier '(' overload_proto_formals ')' • ';'

    ';'  shift, and go to state 1340


State 1333

  402 else_if_list: else_if_list ELSE_IF '(' cond_predicate ')' • statement

    $default  reduce using rule 553 (attribute_instance_list)

    statement                go to state 1341
    attribute_instance_list  go to state 161


State 1334

  294 function_prototype: FUNCTION function_type_name '(' • tf_port_list_optional ')'

    ')'       reduce using rule 314 (tf_port_list_optional)
    $default  reduce using rule 553 (attribute_instance_list)

    tf_port_list_optional    go to state 1342
    tf_port_list             go to state 687
    tf_port_item             go to state 688
    attribute_instance_list  go to state 689


State 1335

  296 task_prototype: TASK ps_or_hierarchical_identifier '(' • tf_port_list_optional ')'

    ')'       reduce using rule 314 (tf_port_list_optional)
    $default  reduce using rule 553 (attribute_instance_list)

    tf_port_list_optional    go to state 1343
    tf_port_list             go to state 687
    tf_port_item             go to state 688
    attribute_instance_list  go to state 689


State 1336

  286 class_method: EXTERN class_method_qualifier_list method_prototype ';' •

    $default  reduce using rule 286 (class_method)


State 1337

  284 class_method: PURE_VIRTUAL class_method_qualifier_list method_prototype ';' •

    $default  reduce using rule 284 (class_method)


State 1338

   69 pulse_control_specparam: PATHPULSE '$' hierarchical_identifier '$' hierarchical_identifier '=' '(' constant_mintypmax_expression ',' constant_mintypmax_expression • ')'

    ')'  shift, and go to state 1344


State 1339

  494 overload_proto_formals: overload_proto_formals ',' data_type •

    $default  reduce using rule 494 (overload_proto_formals)


State 1340

  478 overload_declaration: BIND overload_operator FUNCTION data_type identifier '(' overload_proto_formals ')' ';' •

    $default  reduce using rule 478 (overload_declaration)


State 1341

  402 else_if_list: else_if_list ELSE_IF '(' cond_predicate ')' statement •

    $default  reduce using rule 402 (else_if_list)


State 1342

  294 function_prototype: FUNCTION function_type_name '(' tf_port_list_optional • ')'

    ')'  shift, and go to state 1345


State 1343

  296 task_prototype: TASK ps_or_hierarchical_identifier '(' tf_port_list_optional • ')'

    ')'  shift, and go to state 1346


State 1344

   69 pulse_control_specparam: PATHPULSE '$' hierarchical_identifier '$' hierarchical_identifier '=' '(' constant_mintypmax_expression ',' constant_mintypmax_expression ')' •

    $default  reduce using rule 69 (pulse_control_specparam)


State 1345

  294 function_prototype: FUNCTION function_type_name '(' tf_port_list_optional ')' •

    $default  reduce using rule 294 (function_prototype)


State 1346

  296 task_prototype: TASK ps_or_hierarchical_identifier '(' tf_port_list_optional ')' •

    $default  reduce using rule 296 (task_prototype)
